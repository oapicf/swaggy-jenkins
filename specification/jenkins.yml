openapi: 3.0.0
info:
  title: Swaggy Jenkins
  description: Jenkins API clients generated from Swagger / Open API specification
  version: 3.0.1-pre.0
  contact:
    name: Cliffano Subagio
    url: http://github.com/oapicf/swaggy-jenkins
    email: blah@cliffano.com
servers:
  - url: /
paths:
  /api/json:
    head:
      description: Retrieve Jenkins headers
      operationId: headJenkins
      responses:
        '200':
          description: Successfully retrieved Jenkins headers
          headers:
            x-jenkins:
              description: Jenkins version number
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
    get:
      description: Retrieve Jenkins details
      operationId: getJenkins
      responses:
        '200':
          description: Successfully retrieved Jenkins details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hudson'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /computer/api/json:
    get:
      description: Retrieve computer details
      operationId: getComputer
      parameters:
        - name: depth
          description: Recursion depth in response model
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved computer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerSet'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /createItem:
    post:
      description: Create a new job using job configuration, or copied from an existing job
      operationId: postCreateItem
      parameters:
        - name: name
          description: Name of the new job
          in: query
          required: true
          schema:
            type: string
        - name: from
          description: Existing job to copy from
          in: query
          required: false
          schema:
            type: string
        - name: mode
          description: Set to 'copy' for copying an existing job
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/crumb'
        - name: Content-Type
          description: Content type header application/xml
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully created a new job
        '400':
          $ref: '#/components/responses/errorInHtml'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Job configuration in config.xml format
  /createView:
    post:
      description: Create a new view using view configuration
      operationId: postCreateView
      parameters:
        - name: name
          description: Name of the new view
          in: query
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/crumb'
        - name: Content-Type
          description: Content type header application/xml
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully created the view
        '400':
          $ref: '#/components/responses/errorInHtml'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: View configuration in config.xml format
  /crumbIssuer/api/json:
    get:
      description: Retrieve CSRF protection token
      operationId: getCrumb
      responses:
        '200':
          description: Successfully retrieved CSRF protection token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCrumbIssuer'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - base
  /job/{name}/api/json:
    get:
      description: Retrieve job details
      operationId: getJob
      parameters:
        - $ref: '#/components/parameters/jobName'
      responses:
        '200':
          description: Successfully retrieved job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeStyleProject'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/build:
    post:
      description: Build a job
      operationId: postJobBuild
      parameters:
        - $ref: '#/components/parameters/jobName'
        - name: json
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: >-
            Successfully built the job (backward compatibility for older
            versions of Jenkins)
        '201':
          description: Successfully built the job
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/config.xml:
    get:
      description: Retrieve job configuration
      operationId: getJobConfig
      parameters:
        - $ref: '#/components/parameters/jobName'
      responses:
        '200':
          description: Successfully retrieved job configuration in config.xml format
          content:
            text/xml:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
    post:
      description: Update job configuration
      operationId: postJobConfig
      parameters:
        - $ref: '#/components/parameters/jobName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully retrieved job configuration in config.xml format
        '400':
          $ref: '#/components/responses/errorInHtml'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Job configuration in config.xml format
        required: true
  /job/{name}/doDelete:
    post:
      description: Delete a job
      operationId: postJobDelete
      parameters:
        - $ref: '#/components/parameters/jobName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully deleted the job
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/disable:
    post:
      description: Disable a job
      operationId: postJobDisable
      parameters:
        - $ref: '#/components/parameters/jobName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully disabled the job
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/enable:
    post:
      description: Enable a job
      operationId: postJobEnable
      parameters:
        - $ref: '#/components/parameters/jobName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully enabled the job
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/lastBuild/api/json:
    get:
      description: Retrieve job's last build details
      operationId: getJobLastBuild
      parameters:
        - $ref: '#/components/parameters/jobName'
      responses:
        '200':
          description: Successfully retrieved job's last build details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeStyleBuild'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/lastBuild/stop:
    post:
      description: Stop a job
      operationId: postJobLastBuildStop
      parameters:
        - $ref: '#/components/parameters/jobName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully stopped the job
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /job/{name}/{number}/logText/progressiveText:
    get:
      description: Retrieve job's build progressive text output
      operationId: getJobProgressiveText
      parameters:
        - $ref: '#/components/parameters/jobName'
        - name: number
          description: Build number
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Starting point of progressive text output
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved job's build progressive text output
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/jobNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /queue/api/json:
    get:
      description: Retrieve queue details
      operationId: getQueue
      responses:
        '200':
          description: Successfully retrieved queue details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /queue/item/{number}/api/json:
    get:
      description: Retrieve queued item details
      operationId: getQueueItem
      parameters:
        - name: number
          description: Queue number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved queued item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /view/{name}/api/json:
    get:
      description: Retrieve view details
      operationId: getView
      parameters:
        - $ref: '#/components/parameters/viewName'
      responses:
        '200':
          description: Successfully retrieved view details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListView'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/viewNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
  /view/{name}/config.xml:
    get:
      description: Retrieve view configuration
      operationId: getViewConfig
      parameters:
        - $ref: '#/components/parameters/viewName'
      responses:
        '200':
          description: Successfully retrieved view configuration in config.xml format
          content:
            text/xml:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/viewNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
    post:
      description: Update view configuration
      operationId: postViewConfig
      parameters:
        - $ref: '#/components/parameters/viewName'
        - $ref: '#/components/parameters/crumb'
      responses:
        '200':
          description: Successfully updated view configuration
        '400':
          $ref: '#/components/responses/errorInHtml'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/viewNotFound'
      security:
        - jenkins_auth: []
      tags:
        - remoteAccess
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: View configuration in config.xml format
        required: true
  /jwt-auth/token:
    get:
      description: Retrieve JSON Web Token
      operationId: getJsonWebToken
      parameters:
        - name: expiryTimeInMins
          description: 'Token expiry time in minutes, default: 30 minutes'
          in: query
          required: false
          schema:
            type: integer
        - name: maxExpiryTimeInMins
          description: 'Maximum token expiry time in minutes, default: 480 minutes'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved JWT token
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      tags:
        - blueOcean
  /jwt-auth/jwks/{key}:
    get:
      description: Retrieve JSON Web Key
      operationId: getJsonWebKey
      parameters:
        - name: key
          description: Key ID received as part of JWT header field kid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved JWT token
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      tags:
        - blueOcean
  /blue/rest/classes/:
    get:
      description: Get classes details
      operationId: searchClasses
      parameters:
        - name: q
          description: Query string containing an array of class names
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved search result
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/classes/{class}:
    get:
      description: Get a list of class names supported by a given class
      operationId: getClasses
      parameters:
        - $ref: '#/components/parameters/className'
      responses:
        '200':
          description: Successfully retrieved class names
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/search/:
    get:
      description: Search for any resource details
      operationId: search
      parameters:
        - name: q
          description: Query string
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved search result
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/:
    get:
      description: Retrieve all organizations details
      operationId: getOrganisations
      responses:
        '200':
          description: Successfully retrieved pipelines details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisations'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}:
    get:
      description: Retrieve organization details
      operationId: getOrganisation
      parameters:
        - $ref: '#/components/parameters/orgName'
      responses:
        '200':
          description: Successfully retrieved pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/pipelineNotFound'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/:
    get:
      description: Retrieve all pipelines details for an organization
      operationId: getPipelines
      parameters:
        - $ref: '#/components/parameters/orgName'
      responses:
        '200':
          description: Successfully retrieved pipelines details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipelines'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}:
    get:
      description: Retrieve pipeline details for an organization
      operationId: getPipeline
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully retrieved pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/pipelineNotFound'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/activities:
    get:
      description: Retrieve all activities details for an organization pipeline
      operationId: getPipelineActivities
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully retrieved all activities details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineActivities'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches:
    get:
      description: Retrieve all branches details for an organization pipeline
      operationId: getPipelineBranches
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully retrieved all branches details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultibranchPipeline'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/:
    get:
      description: Retrieve branch details for an organization pipeline
      operationId: getPipelineBranch
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/branchName'
      responses:
        '200':
          description: Successfully retrieved branch details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}:
    get:
      description: Retrieve branch run details for an organization pipeline
      operationId: getPipelineBranchRun
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/branchName'
        - $ref: '#/components/parameters/runName'
      responses:
        '200':
          description: Successfully retrieved run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{folder}/:
    get:
      description: Retrieve pipeline folder for an organization
      operationId: getPipelineFolder
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/folderName'
      responses:
        '200':
          description: Successfully retrieved folder details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineFolderImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}:
    get:
      description: Retrieve pipeline details for an organization folder
      operationId: getPipelineFolderPipeline
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/folderName'
      responses:
        '200':
          description: Successfully retrieved pipeline details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite:
    put:
      description: Favorite/unfavorite a pipeline
      operationId: putPipelineFavorite
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully favorited/unfavorited a pipeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: >-
          Set JSON string body to {"favorite": true} to favorite, set value to
          false to unfavorite
        required: true
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/queue:
    get:
      description: Retrieve queue details for an organization pipeline
      operationId: getPipelineQueue
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully retrieved queue details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineQueue'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}:
    delete:
      description: Delete queue item from an organization pipeline queue
      operationId: deletePipelineQueueItem
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/queueItemName'
      responses:
        '200':
          description: Successfully deleted queue item
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs:
    get:
      description: Retrieve all runs details for an organization pipeline
      operationId: getPipelineRuns
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully retrieved runs details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRuns'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
    post:
      description: Start a build for an organization pipeline
      operationId: postPipelineRuns
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
      responses:
        '200':
          description: Successfully started a build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueItemImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}:
    get:
      description: Retrieve run details for an organization pipeline
      operationId: getPipelineRun
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
      responses:
        '200':
          description: Successfully retrieved run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes:
    get:
      description: Retrieve run nodes details for an organization pipeline
      operationId: getPipelineRunNodes
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
      responses:
        '200':
          description: Successfully retrieved run nodes details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunNodes'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}:
    get:
      description: Retrieve run node details for an organization pipeline
      operationId: getPipelineRunNode
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - $ref: '#/components/parameters/nodeName'
      responses:
        '200':
          description: Successfully retrieved run node details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunNode'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps:
    get:
      description: Retrieve run node steps details for an organization pipeline
      operationId: getPipelineRunNodeSteps
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - $ref: '#/components/parameters/nodeName'
      responses:
        '200':
          description: Successfully retrieved run node steps details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunNodeSteps'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}:
    get:
      description: Retrieve run node details for an organization pipeline
      operationId: getPipelineRunNodeStep
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/stepName'
      responses:
        '200':
          description: Successfully retrieved run node step details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStepImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log:
    get:
      description: Get log for a pipeline run node step
      operationId: getPipelineRunNodeStepLog
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/stepName'
      responses:
        '200':
          description: Successfully retrieved pipeline run node step log
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log:
    get:
      description: Get log for a pipeline run
      operationId: getPipelineRunLog
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - name: start
          description: Start position of the log
          in: query
          required: false
          schema:
            type: integer
        - name: download
          description: >-
            Set to true in order to download the file, otherwise it's passed as
            a response body
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved pipeline run log
          content:
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay:
    post:
      description: Replay an organization pipeline run
      operationId: postPipelineRun
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
      responses:
        '200':
          description: Successfully replayed a pipeline run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueItemImpl'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop:
    put:
      description: Stop a build of an organization pipeline
      operationId: putPipelineRun
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/runName'
        - name: blocking
          description: 'Set to true to make blocking stop, default: false'
          in: query
          required: false
          schema:
            type: string
        - name: timeOutInSecs
          description: 'Timeout in seconds, default: 10 seconds'
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully stopped a build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/scm/{scm}:
    get:
      description: Retrieve SCM details for an organization
      operationId: getSCM
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/scmName'
      responses:
        '200':
          description: Successfully retrieved SCM details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubScm'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/scm/{scm}/organizations:
    get:
      description: Retrieve SCM organizations details for an organization
      operationId: getSCMOrganisations
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/scmName'
        - name: credentialId
          description: Credential ID
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved SCM organizations details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScmOrganisations'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories:
    get:
      description: Retrieve SCM organization repositories details for an organization
      operationId: getSCMOrganisationRepositories
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/scmName'
        - $ref: '#/components/parameters/scmOrgName'
        - name: credentialId
          description: Credential ID
          in: query
          required: false
          schema:
            type: string
        - name: pageSize
          description: Number of items in a page
          in: query
          required: false
          schema:
            type: integer
        - name: pageNumber
          description: Page number
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved SCM organization repositories details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScmOrganisations'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}:
    get:
      description: Retrieve SCM organization repository details for an organization
      operationId: getSCMOrganisationRepository
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/scmName'
        - $ref: '#/components/parameters/scmOrgName'
        - $ref: '#/components/parameters/repositoryName'
        - name: credentialId
          description: Credential ID
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved SCM organizations details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScmOrganisations'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/user/:
    get:
      description: Retrieve authenticated user details for an organization
      operationId: getAuthenticatedUser
      parameters:
        - $ref: '#/components/parameters/orgName'
      responses:
        '200':
          description: Successfully retrieved authenticated user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/users/:
    get:
      description: Retrieve users details for an organization
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/orgName'
      responses:
        '200':
          description: Successfully retrieved users details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/organizations/{organization}/users/{user}:
    get:
      description: Retrieve user details for an organization
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/orgName'
        - $ref: '#/components/parameters/userName'
      responses:
        '200':
          description: Successfully retrieved users details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
  /blue/rest/users/{user}/favorites:
    get:
      description: Retrieve user favorites details for an organization
      operationId: getUserFavorites
      parameters:
        - $ref: '#/components/parameters/userName'
      responses:
        '200':
          description: Successfully retrieved users favorites details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFavorites'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
      security:
        - jenkins_auth: []
      tags:
        - blueOcean
components:
  securitySchemes:
    jenkins_auth:
      type: http
      scheme: basic
    jwt_auth:
      type: apiKey
      in: header
      name: Authorization
  parameters:
    jobName:
      name: name
      description: Name of the job
      in: path
      required: true
      schema:
        type: string
    viewName:
      name: name
      description: Name of the view
      in: path
      required: true
      schema:
        type: string
    crumb:
      name: Jenkins-Crumb
      description: CSRF protection token
      in: header
      required: false
      schema:
        type: string
    orgName:
      name: organization
      description: Name of the organization
      in: path
      required: true
      schema:
        type: string
    pipelineName:
      name: pipeline
      description: Name of the pipeline
      in: path
      required: true
      schema:
        type: string
    branchName:
      name: branch
      description: Name of the branch
      in: path
      required: true
      schema:
        type: string
    queueItemName:
      name: queue
      description: Name of the queue item
      in: path
      required: true
      schema:
        type: string
    runName:
      name: run
      description: Name of the run
      in: path
      required: true
      schema:
        type: string
    nodeName:
      name: node
      description: Name of the node
      in: path
      required: true
      schema:
        type: string
    stepName:
      name: step
      description: Name of the step
      in: path
      required: true
      schema:
        type: string
    scmName:
      name: scm
      description: Name of SCM
      in: path
      required: true
      schema:
        type: string
    scmOrgName:
      name: scmOrganisation
      description: Name of the SCM organization
      in: path
      required: true
      schema:
        type: string
    repositoryName:
      name: repository
      description: Name of the SCM repository
      in: path
      required: true
      schema:
        type: string
    className:
      name: class
      description: Name of the class
      in: path
      required: true
      schema:
        type: string
    folderName:
      name: folder
      description: Name of the folder
      in: path
      required: true
      schema:
        type: string
    userName:
      name: user
      description: Name of the user
      in: path
      required: true
      schema:
        type: string
  responses:
    unauthorized:
      description: Authentication failed - incorrect username and/or password
    forbidden:
      description: Jenkins requires authentication - please set username and password
    jobNotFound:
      description: Job cannot be found on Jenkins instance
    viewNotFound:
      description: View cannot be found on Jenkins instance
    pipelineNotFound:
      description: Pipeline cannot be found on Jenkins instance
    errorInHtml:
      description: >-
        An error has occurred - error message is embedded inside the HTML
        response
      content:
        '*/*':
          schema:
            type: string
  schemas:
    FreeStyleBuild:
      type: object
      properties:
        _class:
          type: string
        number:
          type: integer
        url:
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/CauseAction'
        building:
          type: boolean
        description:
          type: string
        displayName:
          type: string
        duration:
          type: integer
        estimatedDuration:
          type: integer
        executor:
          type: string
        fullDisplayName:
          type: string
        id:
          type: string
        keepLog:
          type: boolean
        queueId:
          type: integer
        result:
          type: string
        timestamp:
          type: integer
        builtOn:
          type: string
        changeSet:
          $ref: '#/components/schemas/EmptyChangeLogSet'
    HudsonMasterComputerexecutors:
      type: object
      properties:
        currentExecutable:
          $ref: '#/components/schemas/FreeStyleBuild'
        idle:
          type: boolean
        likelyStuck:
          type: boolean
        number:
          type: integer
        progress:
          type: integer
        _class:
          type: string
    Label1:
      type: object
      properties:
        _class:
          type: string
    SwapSpaceMonitorMemoryUsage2:
      type: object
      properties:
        _class:
          type: string
        availablePhysicalMemory:
          type: integer
        availableSwapSpace:
          type: integer
        totalPhysicalMemory:
          type: integer
        totalSwapSpace:
          type: integer
    DiskSpaceMonitorDescriptorDiskSpace:
      type: object
      properties:
        _class:
          type: string
        timestamp:
          type: integer
        path:
          type: string
        size:
          type: integer
    ResponseTimeMonitorData:
      type: object
      properties:
        _class:
          type: string
        timestamp:
          type: integer
        average:
          type: integer
    ClockDifference:
      type: object
      properties:
        _class:
          type: string
        diff:
          type: integer
    HudsonMasterComputermonitorData:
      type: object
      properties:
        hudson.node_monitors.SwapSpaceMonitor:
          $ref: '#/components/schemas/SwapSpaceMonitorMemoryUsage2'
        hudson.node_monitors.TemporarySpaceMonitor:
          $ref: '#/components/schemas/DiskSpaceMonitorDescriptorDiskSpace'
        hudson.node_monitors.DiskSpaceMonitor:
          $ref: '#/components/schemas/DiskSpaceMonitorDescriptorDiskSpace'
        hudson.node_monitors.ArchitectureMonitor:
          type: string
        hudson.node_monitors.ResponseTimeMonitor:
          $ref: '#/components/schemas/ResponseTimeMonitorData'
        hudson.node_monitors.ClockMonitor:
          $ref: '#/components/schemas/ClockDifference'
        _class:
          type: string
    HudsonMasterComputer:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        executors:
          type: array
          items:
            $ref: '#/components/schemas/HudsonMasterComputerexecutors'
        icon:
          type: string
        iconClassName:
          type: string
        idle:
          type: boolean
        jnlpAgent:
          type: boolean
        launchSupported:
          type: boolean
        loadStatistics:
          $ref: '#/components/schemas/Label1'
        manualLaunchAllowed:
          type: boolean
        monitorData:
          $ref: '#/components/schemas/HudsonMasterComputermonitorData'
        numExecutors:
          type: integer
        offline:
          type: boolean
        offlineCause:
          type: string
        offlineCauseReason:
          type: string
        temporarilyOffline:
          type: boolean
    ComputerSet:
      type: object
      properties:
        _class:
          type: string
        busyExecutors:
          type: integer
        computer:
          type: array
          items:
            $ref: '#/components/schemas/HudsonMasterComputer'
        displayName:
          type: string
        totalExecutors:
          type: integer
    DefaultCrumbIssuer:
      type: object
      properties:
        _class:
          type: string
        crumb:
          type: string
        crumbRequestField:
          type: string
    HudsonassignedLabels:
      type: object
      properties:
        _class:
          type: string
    FreeStyleProject:
      type: object
      properties:
        _class:
          type: string
        name:
          type: string
        url:
          type: string
        color:
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FreeStyleProjectactions'
        description:
          type: string
        displayName:
          type: string
        displayNameOrNull:
          type: string
        fullDisplayName:
          type: string
        fullName:
          type: string
        buildable:
          type: boolean
        builds:
          type: array
          items:
            $ref: '#/components/schemas/FreeStyleBuild'
        firstBuild:
          $ref: '#/components/schemas/FreeStyleBuild'
        healthReport:
          type: array
          items:
            $ref: '#/components/schemas/FreeStyleProjecthealthReport'
        inQueue:
          type: boolean
        keepDependencies:
          type: boolean
        lastBuild:
          $ref: '#/components/schemas/FreeStyleBuild'
        lastCompletedBuild:
          $ref: '#/components/schemas/FreeStyleBuild'
        lastFailedBuild:
          type: string
        lastStableBuild:
          $ref: '#/components/schemas/FreeStyleBuild'
        lastSuccessfulBuild:
          $ref: '#/components/schemas/FreeStyleBuild'
        lastUnstableBuild:
          type: string
        lastUnsuccessfulBuild:
          type: string
        nextBuildNumber:
          type: integer
        queueItem:
          type: string
        concurrentBuild:
          type: boolean
        scm:
          $ref: '#/components/schemas/NullSCM'
    AllView:
      type: object
      properties:
        _class:
          type: string
        name:
          type: string
        url:
          type: string
    UnlabeledLoadStatistics:
      type: object
      properties:
        _class:
          type: string
    Hudson:
      type: object
      properties:
        _class:
          type: string
        assignedLabels:
          type: array
          items:
            $ref: '#/components/schemas/HudsonassignedLabels'
        mode:
          type: string
        nodeDescription:
          type: string
        nodeName:
          type: string
        numExecutors:
          type: integer
        description:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/FreeStyleProject'
        primaryView:
          $ref: '#/components/schemas/AllView'
        quietingDown:
          type: boolean
        slaveAgentPort:
          type: integer
        unlabeledLoad:
          $ref: '#/components/schemas/UnlabeledLoadStatistics'
        useCrumbs:
          type: boolean
        useSecurity:
          type: boolean
        views:
          type: array
          items:
            $ref: '#/components/schemas/AllView'
    FreeStyleProjectactions:
      type: object
      properties:
        _class:
          type: string
    FreeStyleProjecthealthReport:
      type: object
      properties:
        description:
          type: string
        iconClassName:
          type: string
        iconUrl:
          type: string
        score:
          type: integer
        _class:
          type: string
    NullSCM:
      type: object
      properties:
        _class:
          type: string
    CauseUserIdCause:
      type: object
      properties:
        _class:
          type: string
        shortDescription:
          type: string
        userId:
          type: string
        userName:
          type: string
    CauseAction:
      type: object
      properties:
        _class:
          type: string
        causes:
          type: array
          items:
            $ref: '#/components/schemas/CauseUserIdCause'
    EmptyChangeLogSet:
      type: object
      properties:
        _class:
          type: string
        kind:
          type: string
    QueueBlockedItem:
      type: object
      properties:
        _class:
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/CauseAction'
        blocked:
          type: boolean
        buildable:
          type: boolean
        id:
          type: integer
        inQueueSince:
          type: integer
        params:
          type: string
        stuck:
          type: boolean
        task:
          $ref: '#/components/schemas/FreeStyleProject'
        url:
          type: string
        why:
          type: string
        buildableStartMilliseconds:
          type: integer
    Queue:
      type: object
      properties:
        _class:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/QueueBlockedItem'
    QueueLeftItem:
      type: object
      properties:
        _class:
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/CauseAction'
        blocked:
          type: boolean
        buildable:
          type: boolean
        id:
          type: integer
        inQueueSince:
          type: integer
        params:
          type: string
        stuck:
          type: boolean
        task:
          $ref: '#/components/schemas/FreeStyleProject'
        url:
          type: string
        why:
          type: string
        cancelled:
          type: boolean
        executable:
          $ref: '#/components/schemas/FreeStyleBuild'
    ListView:
      type: object
      properties:
        _class:
          type: string
        description:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/FreeStyleProject'
        name:
          type: string
        url:
          type: string
    Link:
      type: object
      properties:
        _class:
          type: string
        href:
          type: string
    ExtensionClassContainerImpl1links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    ExtensionClassImpllinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    ExtensionClassImpl:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/ExtensionClassImpllinks'
        classes:
          type: array
          items:
            type: string
    ExtensionClassContainerImpl1map:
      type: object
      properties:
        io.jenkins.blueocean.service.embedded.rest.PipelineImpl:
          $ref: '#/components/schemas/ExtensionClassImpl'
        io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl:
          $ref: '#/components/schemas/ExtensionClassImpl'
        _class:
          type: string
    ExtensionClassContainerImpl1:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/ExtensionClassContainerImpl1links'
        map:
          $ref: '#/components/schemas/ExtensionClassContainerImpl1map'
    ClassesByClass:
      type: object
      properties:
        classes:
          type: array
          items:
            type: string
        _class:
          type: string
    MultibranchPipeline:
      type: object
      properties:
        displayName:
          type: string
        estimatedDurationInMillis:
          type: integer
        latestRun:
          type: string
        name:
          type: string
        organization:
          type: string
        weatherScore:
          type: integer
        branchNames:
          type: array
          items:
            type: string
        numberOfFailingBranches:
          type: integer
        numberOfFailingPullRequests:
          type: integer
        numberOfSuccessfulBranches:
          type: integer
        numberOfSuccessfulPullRequests:
          type: integer
        totalNumberOfBranches:
          type: integer
        totalNumberOfPullRequests:
          type: integer
        _class:
          type: string
    PipelineImpl:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        estimatedDurationInMillis:
          type: integer
        fullName:
          type: string
        latestRun:
          type: string
        name:
          type: string
        organization:
          type: string
        weatherScore:
          type: integer
        _links:
          $ref: '#/components/schemas/PipelineImpllinks'
    Organisation:
      type: object
      properties:
        _class:
          type: string
        name:
          type: string
    Organisations:
      type: array
      items:
        $ref: '#/components/schemas/Organisation'
    PipelinelatestRunartifacts:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
        url:
          type: string
        _class:
          type: string
    PipelinelatestRun:
      type: object
      properties:
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/PipelinelatestRunartifacts'
        durationInMillis:
          type: integer
        estimatedDurationInMillis:
          type: integer
        enQueueTime:
          type: string
        endTime:
          type: string
        id:
          type: string
        organization:
          type: string
        pipeline:
          type: string
        result:
          type: string
        runSummary:
          type: string
        startTime:
          type: string
        state:
          type: string
        type:
          type: string
        commitId:
          type: string
        _class:
          type: string
    Pipeline:
      type: object
      properties:
        _class:
          type: string
        organization:
          type: string
        name:
          type: string
        displayName:
          type: string
        fullName:
          type: string
        weatherScore:
          type: integer
        estimatedDurationInMillis:
          type: integer
        latestRun:
          $ref: '#/components/schemas/PipelinelatestRun'
    PipelineActivityartifacts:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
        url:
          type: string
        _class:
          type: string
    PipelineActivity:
      type: object
      properties:
        _class:
          type: string
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/PipelineActivityartifacts'
        durationInMillis:
          type: integer
        estimatedDurationInMillis:
          type: integer
        enQueueTime:
          type: string
        endTime:
          type: string
        id:
          type: string
        organization:
          type: string
        pipeline:
          type: string
        result:
          type: string
        runSummary:
          type: string
        startTime:
          type: string
        state:
          type: string
        type:
          type: string
        commitId:
          type: string
    PipelineActivities:
      type: array
      items:
        $ref: '#/components/schemas/PipelineActivity'
    StringParameterValue:
      type: object
      properties:
        _class:
          type: string
        name:
          type: string
        value:
          type: string
    StringParameterDefinition:
      type: object
      properties:
        _class:
          type: string
        defaultParameterValue:
          $ref: '#/components/schemas/StringParameterValue'
        description:
          type: string
        name:
          type: string
        type:
          type: string
    BranchImplpermissions:
      type: object
      properties:
        create:
          type: boolean
        read:
          type: boolean
        start:
          type: boolean
        stop:
          type: boolean
        _class:
          type: string
    BranchImpl:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        estimatedDurationInMillis:
          type: integer
        fullDisplayName:
          type: string
        fullName:
          type: string
        name:
          type: string
        organization:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/StringParameterDefinition'
        permissions:
          $ref: '#/components/schemas/BranchImplpermissions'
        weatherScore:
          type: integer
        pullRequest:
          type: string
        _links:
          $ref: '#/components/schemas/BranchImpllinks'
        latestRun:
          $ref: '#/components/schemas/PipelineRunImpl'
    PipelineBranchesitemlatestRun:
      type: object
      properties:
        durationInMillis:
          type: integer
        estimatedDurationInMillis:
          type: integer
        enQueueTime:
          type: string
        endTime:
          type: string
        id:
          type: string
        organization:
          type: string
        pipeline:
          type: string
        result:
          type: string
        runSummary:
          type: string
        startTime:
          type: string
        state:
          type: string
        type:
          type: string
        commitId:
          type: string
        _class:
          type: string
    PipelineBranchesitempullRequestlinks:
      type: object
      properties:
        self:
          type: string
        _class:
          type: string
    PipelineBranchesitempullRequest:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/PipelineBranchesitempullRequestlinks'
        author:
          type: string
        id:
          type: string
        title:
          type: string
        url:
          type: string
        _class:
          type: string
    PipelineBranchesitem:
      type: object
      properties:
        displayName:
          type: string
        estimatedDurationInMillis:
          type: integer
        name:
          type: string
        weatherScore:
          type: integer
        latestRun:
          $ref: '#/components/schemas/PipelineBranchesitemlatestRun'
        organization:
          type: string
        pullRequest:
          $ref: '#/components/schemas/PipelineBranchesitempullRequest'
        totalNumberOfPullRequests:
          type: integer
        _class:
          type: string
    PipelineBranches:
      type: array
      items:
        $ref: '#/components/schemas/PipelineBranchesitem'
    FavoriteImpllinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    PipelineImpllinks:
      type: object
      properties:
        runs:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        queue:
          $ref: '#/components/schemas/Link'
        actions:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    FavoriteImpl:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/FavoriteImpllinks'
        item:
          $ref: '#/components/schemas/PipelineImpl'
    PipelineFolderImpl:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        fullName:
          type: string
        name:
          type: string
        organization:
          type: string
        numberOfFolders:
          type: integer
        numberOfPipelines:
          type: integer
    QueueItemImpl:
      type: object
      properties:
        _class:
          type: string
        expectedBuildNumber:
          type: integer
        id:
          type: string
        pipeline:
          type: string
        queuedTime:
          type: integer
    PipelineQueue:
      type: array
      items:
        $ref: '#/components/schemas/QueueItemImpl'
    PipelineRunartifacts:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
        url:
          type: string
        _class:
          type: string
    PipelineRun:
      type: object
      properties:
        _class:
          type: string
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/PipelineRunartifacts'
        durationInMillis:
          type: integer
        estimatedDurationInMillis:
          type: integer
        enQueueTime:
          type: string
        endTime:
          type: string
        id:
          type: string
        organization:
          type: string
        pipeline:
          type: string
        result:
          type: string
        runSummary:
          type: string
        startTime:
          type: string
        state:
          type: string
        type:
          type: string
        commitId:
          type: string
    PipelineStepImpllinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        actions:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    InputStepImpllinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    InputStepImpl:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/InputStepImpllinks'
        id:
          type: string
        message:
          type: string
        ok:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/StringParameterDefinition'
        submitter:
          type: string
    PipelineStepImpl:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/PipelineStepImpllinks'
        displayName:
          type: string
        durationInMillis:
          type: integer
        id:
          type: string
        input:
          $ref: '#/components/schemas/InputStepImpl'
        result:
          type: string
        startTime:
          type: string
        state:
          type: string
    PipelineRunNodeSteps:
      type: array
      items:
        $ref: '#/components/schemas/PipelineStepImpl'
    PipelineRunNodeedges:
      type: object
      properties:
        id:
          type: string
        _class:
          type: string
    PipelineRunNode:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        durationInMillis:
          type: integer
        edges:
          type: array
          items:
            $ref: '#/components/schemas/PipelineRunNodeedges'
        id:
          type: string
        result:
          type: string
        startTime:
          type: string
        state:
          type: string
    PipelineRunNodes:
      type: array
      items:
        $ref: '#/components/schemas/PipelineRunNode'
    GenericResource:
      type: object
      properties:
        _class:
          type: string
        displayName:
          type: string
        durationInMillis:
          type: integer
        id:
          type: string
        result:
          type: string
        startTime:
          type: string
    PipelineRunSteps:
      type: array
      items:
        $ref: '#/components/schemas/GenericResource'
    PipelineRuns:
      type: array
      items:
        $ref: '#/components/schemas/PipelineRun'
    Pipelines:
      type: array
      items:
        $ref: '#/components/schemas/Pipeline'
    GithubScmlinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    GithubScm:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/GithubScmlinks'
        credentialId:
          type: string
        id:
          type: string
        uri:
          type: string
    GithubContent:
      type: object
      properties:
        name:
          type: string
        sha:
          type: string
        _class:
          type: string
        repo:
          type: string
        size:
          type: integer
        owner:
          type: string
        path:
          type: string
        base64Data:
          type: string
    GithubFile:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/GithubContent'
        _class:
          type: string
    GithubRespositoryContainerlinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    GithubRepositorieslinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    GithubRepositorylinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    GithubRepositorypermissions:
      type: object
      properties:
        admin:
          type: boolean
        push:
          type: boolean
        pull:
          type: boolean
        _class:
          type: string
    GithubRepository:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/GithubRepositorylinks'
        defaultBranch:
          type: string
        description:
          type: string
        name:
          type: string
        permissions:
          $ref: '#/components/schemas/GithubRepositorypermissions'
        private:
          type: boolean
        fullName:
          type: string
    GithubRepositories:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/GithubRepositorieslinks'
        items:
          type: array
          items:
            $ref: '#/components/schemas/GithubRepository'
        lastPage:
          type: integer
        nextPage:
          type: integer
        pageSize:
          type: integer
    GithubRespositoryContainer:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/GithubRespositoryContainerlinks'
        repositories:
          $ref: '#/components/schemas/GithubRepositories'
    GithubOrganizationlinks:
      type: object
      properties:
        repositories:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    GithubOrganization:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/GithubOrganizationlinks'
        jenkinsOrganizationPipeline:
          type: boolean
        name:
          type: string
    ScmOrganisations:
      type: array
      items:
        $ref: '#/components/schemas/GithubOrganization'
    User:
      type: object
      properties:
        _class:
          type: string
        id:
          type: string
        fullName:
          type: string
        email:
          type: string
        name:
          type: string
    BranchImpllinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        actions:
          $ref: '#/components/schemas/Link'
        runs:
          $ref: '#/components/schemas/Link'
        queue:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    PipelineRunImpllinks:
      type: object
      properties:
        nodes:
          $ref: '#/components/schemas/Link'
        log:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
        actions:
          $ref: '#/components/schemas/Link'
        steps:
          $ref: '#/components/schemas/Link'
        _class:
          type: string
    PipelineRunImpl:
      type: object
      properties:
        _class:
          type: string
        _links:
          $ref: '#/components/schemas/PipelineRunImpllinks'
        durationInMillis:
          type: integer
        enQueueTime:
          type: string
        endTime:
          type: string
        estimatedDurationInMillis:
          type: integer
        id:
          type: string
        organization:
          type: string
        pipeline:
          type: string
        result:
          type: string
        runSummary:
          type: string
        startTime:
          type: string
        state:
          type: string
        type:
          type: string
        commitId:
          type: string
    UserFavorites:
      type: array
      items:
        $ref: '#/components/schemas/FavoriteImpl'
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
