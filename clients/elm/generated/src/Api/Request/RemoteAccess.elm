{-
   Swaggy Jenkins
   Jenkins API clients generated from Swagger / Open API specification

   The version of the OpenAPI document: 3.0.2-pre.0
   Contact: blah+oapicf@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.RemoteAccess exposing
    ( getComputer
    , getJenkins
    , getJob
    , getJobConfig
    , getJobLastBuild
    , getJobProgressiveText
    , getQueue
    , getQueueItem
    , getView
    , getViewConfig
    , headJenkins
    , postCreateItem
    , postCreateView
    , postJobBuild
    , postJobConfig
    , postJobDelete
    , postJobDisable
    , postJobEnable
    , postJobLastBuildStop
    , postViewConfig
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Retrieve computer details
-}
getComputer : Int -> Api.Request Api.Data.ComputerSet
getComputer depth_query =
    Api.request
        "GET"
        "/computer/api/json"
        []
        [ ( "depth", Just <| String.fromInt depth_query ) ]
        []
        Nothing
        Api.Data.computerSetDecoder

{-| Retrieve Jenkins details
-}
getJenkins : Api.Request Api.Data.Hudson
getJenkins =
    Api.request
        "GET"
        "/api/json"
        []
        []
        []
        Nothing
        Api.Data.hudsonDecoder

{-| Retrieve job details
-}
getJob : String -> Api.Request Api.Data.FreeStyleProject
getJob name_path =
    Api.request
        "GET"
        "/job/{name}/api/json"
        [ ( "name", identity name_path ) ]
        []
        []
        Nothing
        Api.Data.freeStyleProjectDecoder

{-| Retrieve job configuration
-}
getJobConfig : String -> Api.Request String
getJobConfig name_path =
    Api.request
        "GET"
        "/job/{name}/config.xml"
        [ ( "name", identity name_path ) ]
        []
        []
        Nothing
        Json.Decode.string

{-| Retrieve job's last build details
-}
getJobLastBuild : String -> Api.Request Api.Data.FreeStyleBuild
getJobLastBuild name_path =
    Api.request
        "GET"
        "/job/{name}/lastBuild/api/json"
        [ ( "name", identity name_path ) ]
        []
        []
        Nothing
        Api.Data.freeStyleBuildDecoder

{-| Retrieve job's build progressive text output
-}
getJobProgressiveText : String -> String -> String -> Api.Request ()
getJobProgressiveText name_path number_path start_query =
    Api.request
        "GET"
        "/job/{name}/{number}/logText/progressiveText"
        [ ( "name", identity name_path ), ( "number", identity number_path ) ]
        [ ( "start", Just <| identity start_query ) ]
        []
        Nothing
        (Json.Decode.succeed ())

{-| Retrieve queue details
-}
getQueue : Api.Request Api.Data.Queue
getQueue =
    Api.request
        "GET"
        "/queue/api/json"
        []
        []
        []
        Nothing
        Api.Data.queueDecoder

{-| Retrieve queued item details
-}
getQueueItem : String -> Api.Request Api.Data.Queue
getQueueItem number_path =
    Api.request
        "GET"
        "/queue/item/{number}/api/json"
        [ ( "number", identity number_path ) ]
        []
        []
        Nothing
        Api.Data.queueDecoder

{-| Retrieve view details
-}
getView : String -> Api.Request Api.Data.ListView
getView name_path =
    Api.request
        "GET"
        "/view/{name}/api/json"
        [ ( "name", identity name_path ) ]
        []
        []
        Nothing
        Api.Data.listViewDecoder

{-| Retrieve view configuration
-}
getViewConfig : String -> Api.Request String
getViewConfig name_path =
    Api.request
        "GET"
        "/view/{name}/config.xml"
        [ ( "name", identity name_path ) ]
        []
        []
        Nothing
        Json.Decode.string

{-| Retrieve Jenkins headers
-}
headJenkins : Api.Request ()
headJenkins =
    Api.request
        "HEAD"
        "/api/json"
        []
        []
        []
        Nothing
        (Json.Decode.succeed ())

{-| Create a new job using job configuration, or copied from an existing job
-}
postCreateItem : String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Api.Request ()
postCreateItem name_query from_query mode_query jenkinsCrumb_header contentType_header body_body =
    Api.request
        "POST"
        "/createItem"
        []
        [ ( "name", Just <| identity name_query ), ( "from", Maybe.map identity from_query ), ( "mode", Maybe.map identity mode_query ) ]
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ), ( "Content-Type", Maybe.map identity contentType_header ) ]
        (Maybe.map Http.jsonBody (Maybe.map Json.Encode.string body_body))
        (Json.Decode.succeed ())

{-| Create a new view using view configuration
-}
postCreateView : String -> Maybe String -> Maybe String -> Maybe String -> Api.Request ()
postCreateView name_query jenkinsCrumb_header contentType_header body_body =
    Api.request
        "POST"
        "/createView"
        []
        [ ( "name", Just <| identity name_query ) ]
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ), ( "Content-Type", Maybe.map identity contentType_header ) ]
        (Maybe.map Http.jsonBody (Maybe.map Json.Encode.string body_body))
        (Json.Decode.succeed ())

{-| Build a job
-}
postJobBuild : String -> String -> Maybe String -> Maybe String -> Api.Request ()
postJobBuild name_path json_query token_query jenkinsCrumb_header =
    Api.request
        "POST"
        "/job/{name}/build"
        [ ( "name", identity name_path ) ]
        [ ( "json", Just <| identity json_query ), ( "token", Maybe.map identity token_query ) ]
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        Nothing
        (Json.Decode.succeed ())

{-| Update job configuration
-}
postJobConfig : String -> Maybe String -> String -> Api.Request ()
postJobConfig name_path jenkinsCrumb_header body_body =
    Api.request
        "POST"
        "/job/{name}/config.xml"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        (Maybe.map Http.jsonBody (Just (Json.Encode.string body_body)))
        (Json.Decode.succeed ())

{-| Delete a job
-}
postJobDelete : String -> Maybe String -> Api.Request ()
postJobDelete name_path jenkinsCrumb_header =
    Api.request
        "POST"
        "/job/{name}/doDelete"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        Nothing
        (Json.Decode.succeed ())

{-| Disable a job
-}
postJobDisable : String -> Maybe String -> Api.Request ()
postJobDisable name_path jenkinsCrumb_header =
    Api.request
        "POST"
        "/job/{name}/disable"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        Nothing
        (Json.Decode.succeed ())

{-| Enable a job
-}
postJobEnable : String -> Maybe String -> Api.Request ()
postJobEnable name_path jenkinsCrumb_header =
    Api.request
        "POST"
        "/job/{name}/enable"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        Nothing
        (Json.Decode.succeed ())

{-| Stop a job
-}
postJobLastBuildStop : String -> Maybe String -> Api.Request ()
postJobLastBuildStop name_path jenkinsCrumb_header =
    Api.request
        "POST"
        "/job/{name}/lastBuild/stop"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        Nothing
        (Json.Decode.succeed ())

{-| Update view configuration
-}
postViewConfig : String -> Maybe String -> String -> Api.Request ()
postViewConfig name_path jenkinsCrumb_header body_body =
    Api.request
        "POST"
        "/view/{name}/config.xml"
        [ ( "name", identity name_path ) ]
        []
        [ ( "Jenkins-Crumb", Maybe.map identity jenkinsCrumb_header ) ]
        (Maybe.map Http.jsonBody (Just (Json.Encode.string body_body)))
        (Json.Decode.succeed ())

