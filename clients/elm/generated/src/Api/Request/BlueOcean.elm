{-
   Swaggy Jenkins
   Jenkins API clients generated from Swagger / Open API specification

   The version of the OpenAPI document: 3.0.2-pre.0
   Contact: blah+oapicf@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.BlueOcean exposing
    ( deletePipelineQueueItem
    , getAuthenticatedUser
    , getClasses
    , getJsonWebKey
    , getJsonWebToken
    , getOrganisation
    , getOrganisations
    , getPipeline
    , getPipelineActivities
    , getPipelineBranch
    , getPipelineBranchRun
    , getPipelineBranches
    , getPipelineFolder
    , getPipelineFolderPipeline
    , getPipelineQueue
    , getPipelineRun
    , getPipelineRunLog
    , getPipelineRunNode
    , getPipelineRunNodeStep
    , getPipelineRunNodeStepLog
    , getPipelineRunNodeSteps
    , getPipelineRunNodes
    , getPipelineRuns
    , getPipelines
    , getSCM
    , getSCMOrganisationRepositories
    , getSCMOrganisationRepository
    , getSCMOrganisations
    , getUser
    , getUserFavorites
    , getUsers
    , postPipelineRun
    , postPipelineRuns
    , putPipelineFavorite
    , putPipelineRun
    , search
    , searchClasses
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Delete queue item from an organization pipeline queue
-}
deletePipelineQueueItem : String -> String -> String -> Api.Request ()
deletePipelineQueueItem organization_path pipeline_path queue_path =
    Api.request
        "DELETE"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "queue", identity queue_path ) ]
        []
        []
        Nothing
        (Json.Decode.succeed ())

{-| Retrieve authenticated user details for an organization
-}
getAuthenticatedUser : String -> Api.Request Api.Data.User
getAuthenticatedUser organization_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/user/"
        [ ( "organization", identity organization_path ) ]
        []
        []
        Nothing
        Api.Data.userDecoder

{-| Get a list of class names supported by a given class
-}
getClasses : String -> Api.Request String
getClasses class_path =
    Api.request
        "GET"
        "/blue/rest/classes/{class}"
        [ ( "class", identity class_path ) ]
        []
        []
        Nothing
        Json.Decode.string

{-| Retrieve JSON Web Key
-}
getJsonWebKey : Int -> Api.Request String
getJsonWebKey key_path =
    Api.request
        "GET"
        "/jwt-auth/jwks/{key}"
        [ ( "key", String.fromInt key_path ) ]
        []
        []
        Nothing
        Json.Decode.string

{-| Retrieve JSON Web Token
-}
getJsonWebToken : Maybe Int -> Maybe Int -> Api.Request String
getJsonWebToken expiryTimeInMins_query maxExpiryTimeInMins_query =
    Api.request
        "GET"
        "/jwt-auth/token"
        []
        [ ( "expiryTimeInMins", Maybe.map String.fromInt expiryTimeInMins_query ), ( "maxExpiryTimeInMins", Maybe.map String.fromInt maxExpiryTimeInMins_query ) ]
        []
        Nothing
        Json.Decode.string

{-| Retrieve organization details
-}
getOrganisation : String -> Api.Request Api.Data.Organisation
getOrganisation organization_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}"
        [ ( "organization", identity organization_path ) ]
        []
        []
        Nothing
        Api.Data.organisationDecoder

{-| Retrieve all organizations details
-}
getOrganisations : Api.Request (List Api.Data.Organisation)
getOrganisations =
    Api.request
        "GET"
        "/blue/rest/organizations/"
        []
        []
        []
        Nothing
        (Json.Decode.list Api.Data.organisationDecoder)

{-| Retrieve pipeline details for an organization
-}
getPipeline : String -> String -> Api.Request Api.Data.Pipeline
getPipeline organization_path pipeline_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineDecoder

{-| Retrieve all activities details for an organization pipeline
-}
getPipelineActivities : String -> String -> Api.Request (List Api.Data.PipelineActivity)
getPipelineActivities organization_path pipeline_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/activities"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.pipelineActivityDecoder)

{-| Retrieve branch details for an organization pipeline
-}
getPipelineBranch : String -> String -> String -> Api.Request Api.Data.BranchImpl
getPipelineBranch organization_path pipeline_path branch_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "branch", identity branch_path ) ]
        []
        []
        Nothing
        Api.Data.branchImplDecoder

{-| Retrieve branch run details for an organization pipeline
-}
getPipelineBranchRun : String -> String -> String -> String -> Api.Request Api.Data.PipelineRun
getPipelineBranchRun organization_path pipeline_path branch_path run_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "branch", identity branch_path ), ( "run", identity run_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineRunDecoder

{-| Retrieve all branches details for an organization pipeline
-}
getPipelineBranches : String -> String -> Api.Request Api.Data.MultibranchPipeline
getPipelineBranches organization_path pipeline_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        Api.Data.multibranchPipelineDecoder

{-| Retrieve pipeline folder for an organization
-}
getPipelineFolder : String -> String -> Api.Request Api.Data.PipelineFolderImpl
getPipelineFolder organization_path folder_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{folder}/"
        [ ( "organization", identity organization_path ), ( "folder", identity folder_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineFolderImplDecoder

{-| Retrieve pipeline details for an organization folder
-}
getPipelineFolderPipeline : String -> String -> String -> Api.Request Api.Data.PipelineImpl
getPipelineFolderPipeline organization_path pipeline_path folder_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "folder", identity folder_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineImplDecoder

{-| Retrieve queue details for an organization pipeline
-}
getPipelineQueue : String -> String -> Api.Request (List Api.Data.QueueItemImpl)
getPipelineQueue organization_path pipeline_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.queueItemImplDecoder)

{-| Retrieve run details for an organization pipeline
-}
getPipelineRun : String -> String -> String -> Api.Request Api.Data.PipelineRun
getPipelineRun organization_path pipeline_path run_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineRunDecoder

{-| Get log for a pipeline run
-}
getPipelineRunLog : String -> String -> String -> Maybe Int -> Maybe Bool -> Api.Request String
getPipelineRunLog organization_path pipeline_path run_path start_query download_query =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ) ]
        [ ( "start", Maybe.map String.fromInt start_query ), ( "download", Maybe.map (\val -> if val then "true" else "false") download_query ) ]
        []
        Nothing
        Json.Decode.string

{-| Retrieve run node details for an organization pipeline
-}
getPipelineRunNode : String -> String -> String -> String -> Api.Request Api.Data.PipelineRunNode
getPipelineRunNode organization_path pipeline_path run_path node_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ), ( "node", identity node_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineRunNodeDecoder

{-| Retrieve run node details for an organization pipeline
-}
getPipelineRunNodeStep : String -> String -> String -> String -> String -> Api.Request Api.Data.PipelineStepImpl
getPipelineRunNodeStep organization_path pipeline_path run_path node_path step_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ), ( "node", identity node_path ), ( "step", identity step_path ) ]
        []
        []
        Nothing
        Api.Data.pipelineStepImplDecoder

{-| Get log for a pipeline run node step
-}
getPipelineRunNodeStepLog : String -> String -> String -> String -> String -> Api.Request String
getPipelineRunNodeStepLog organization_path pipeline_path run_path node_path step_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ), ( "node", identity node_path ), ( "step", identity step_path ) ]
        []
        []
        Nothing
        Json.Decode.string

{-| Retrieve run node steps details for an organization pipeline
-}
getPipelineRunNodeSteps : String -> String -> String -> String -> Api.Request (List Api.Data.PipelineStepImpl)
getPipelineRunNodeSteps organization_path pipeline_path run_path node_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ), ( "node", identity node_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.pipelineStepImplDecoder)

{-| Retrieve run nodes details for an organization pipeline
-}
getPipelineRunNodes : String -> String -> String -> Api.Request (List Api.Data.PipelineRunNode)
getPipelineRunNodes organization_path pipeline_path run_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.pipelineRunNodeDecoder)

{-| Retrieve all runs details for an organization pipeline
-}
getPipelineRuns : String -> String -> Api.Request (List Api.Data.PipelineRun)
getPipelineRuns organization_path pipeline_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.pipelineRunDecoder)

{-| Retrieve all pipelines details for an organization
-}
getPipelines : String -> Api.Request (List Api.Data.Pipeline)
getPipelines organization_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/pipelines/"
        [ ( "organization", identity organization_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.pipelineDecoder)

{-| Retrieve SCM details for an organization
-}
getSCM : String -> String -> Api.Request Api.Data.GithubScm
getSCM organization_path scm_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/scm/{scm}"
        [ ( "organization", identity organization_path ), ( "scm", identity scm_path ) ]
        []
        []
        Nothing
        Api.Data.githubScmDecoder

{-| Retrieve SCM organization repositories details for an organization
-}
getSCMOrganisationRepositories : String -> String -> String -> Maybe String -> Maybe Int -> Maybe Int -> Api.Request (List Api.Data.GithubOrganization)
getSCMOrganisationRepositories organization_path scm_path scmOrganisation_path credentialId_query pageSize_query pageNumber_query =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories"
        [ ( "organization", identity organization_path ), ( "scm", identity scm_path ), ( "scmOrganisation", identity scmOrganisation_path ) ]
        [ ( "credentialId", Maybe.map identity credentialId_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ), ( "pageNumber", Maybe.map String.fromInt pageNumber_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.githubOrganizationDecoder)

{-| Retrieve SCM organization repository details for an organization
-}
getSCMOrganisationRepository : String -> String -> String -> String -> Maybe String -> Api.Request (List Api.Data.GithubOrganization)
getSCMOrganisationRepository organization_path scm_path scmOrganisation_path repository_path credentialId_query =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}"
        [ ( "organization", identity organization_path ), ( "scm", identity scm_path ), ( "scmOrganisation", identity scmOrganisation_path ), ( "repository", identity repository_path ) ]
        [ ( "credentialId", Maybe.map identity credentialId_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.githubOrganizationDecoder)

{-| Retrieve SCM organizations details for an organization
-}
getSCMOrganisations : String -> String -> Maybe String -> Api.Request (List Api.Data.GithubOrganization)
getSCMOrganisations organization_path scm_path credentialId_query =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/scm/{scm}/organizations"
        [ ( "organization", identity organization_path ), ( "scm", identity scm_path ) ]
        [ ( "credentialId", Maybe.map identity credentialId_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.githubOrganizationDecoder)

{-| Retrieve user details for an organization
-}
getUser : String -> String -> Api.Request Api.Data.User
getUser organization_path user_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/users/{user}"
        [ ( "organization", identity organization_path ), ( "user", identity user_path ) ]
        []
        []
        Nothing
        Api.Data.userDecoder

{-| Retrieve user favorites details for an organization
-}
getUserFavorites : String -> Api.Request (List Api.Data.FavoriteImpl)
getUserFavorites user_path =
    Api.request
        "GET"
        "/blue/rest/users/{user}/favorites"
        [ ( "user", identity user_path ) ]
        []
        []
        Nothing
        (Json.Decode.list Api.Data.favoriteImplDecoder)

{-| Retrieve users details for an organization
-}
getUsers : String -> Api.Request Api.Data.User
getUsers organization_path =
    Api.request
        "GET"
        "/blue/rest/organizations/{organization}/users/"
        [ ( "organization", identity organization_path ) ]
        []
        []
        Nothing
        Api.Data.userDecoder

{-| Replay an organization pipeline run
-}
postPipelineRun : String -> String -> String -> Api.Request Api.Data.QueueItemImpl
postPipelineRun organization_path pipeline_path run_path =
    Api.request
        "POST"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ) ]
        []
        []
        Nothing
        Api.Data.queueItemImplDecoder

{-| Start a build for an organization pipeline
-}
postPipelineRuns : String -> String -> Api.Request Api.Data.QueueItemImpl
postPipelineRuns organization_path pipeline_path =
    Api.request
        "POST"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        Nothing
        Api.Data.queueItemImplDecoder

{-| Favorite/unfavorite a pipeline
-}
putPipelineFavorite : String -> String -> Bool -> Api.Request Api.Data.FavoriteImpl
putPipelineFavorite organization_path pipeline_path body_body =
    Api.request
        "PUT"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Json.Encode.bool body_body)))
        Api.Data.favoriteImplDecoder

{-| Stop a build of an organization pipeline
-}
putPipelineRun : String -> String -> String -> Maybe String -> Maybe Int -> Api.Request Api.Data.PipelineRun
putPipelineRun organization_path pipeline_path run_path blocking_query timeOutInSecs_query =
    Api.request
        "PUT"
        "/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop"
        [ ( "organization", identity organization_path ), ( "pipeline", identity pipeline_path ), ( "run", identity run_path ) ]
        [ ( "blocking", Maybe.map identity blocking_query ), ( "timeOutInSecs", Maybe.map String.fromInt timeOutInSecs_query ) ]
        []
        Nothing
        Api.Data.pipelineRunDecoder

{-| Search for any resource details
-}
search : String -> Api.Request String
search q_query =
    Api.request
        "GET"
        "/blue/rest/search/"
        []
        [ ( "q", Just <| identity q_query ) ]
        []
        Nothing
        Json.Decode.string

{-| Get classes details
-}
searchClasses : String -> Api.Request String
searchClasses q_query =
    Api.request
        "GET"
        "/blue/rest/classes/"
        []
        [ ( "q", Just <| identity q_query ) ]
        []
        Nothing
        Json.Decode.string

