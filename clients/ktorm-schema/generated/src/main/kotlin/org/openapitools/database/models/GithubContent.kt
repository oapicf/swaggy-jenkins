/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 3.0.2-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param name 
 * @param sha 
 * @param propertyClass 
 * @param repo 
 * @param propertySize 
 * @param owner 
 * @param path 
 * @param base64Data 
 */
object GithubContents : BaseTable<GithubContent>("GithubContent") {
    val name = text("name") /* null */
    val sha = text("sha") /* null */
    val propertyClass = text("_class") /* null */
    val repo = text("repo") /* null */
    val propertySize = int("size") /* null */
    val owner = text("owner") /* null */
    val path = text("path") /* null */
    val base64Data = text("base64Data") /* null */

    /**
     * Create an entity of type GithubContent from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GithubContent(
        name = row[name]  /* kotlin.String? */,
        sha = row[sha]  /* kotlin.String? */,
        propertyClass = row[propertyClass]  /* kotlin.String? */,
        repo = row[repo]  /* kotlin.String? */,
        propertySize = row[propertySize]  /* kotlin.Int? */,
        owner = row[owner]  /* kotlin.String? */,
        path = row[path]  /* kotlin.String? */,
        base64Data = row[base64Data]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type GithubContent to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GithubContent()
    * database.update(GithubContents, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GithubContent) {
        this.apply {
            set(GithubContents.name, entity.name)
            set(GithubContents.sha, entity.sha)
            set(GithubContents.propertyClass, entity.propertyClass)
            set(GithubContents.repo, entity.repo)
            set(GithubContents.propertySize, entity.propertySize)
            set(GithubContents.owner, entity.owner)
            set(GithubContents.path, entity.path)
            set(GithubContents.base64Data, entity.base64Data)
        }
    }

}


