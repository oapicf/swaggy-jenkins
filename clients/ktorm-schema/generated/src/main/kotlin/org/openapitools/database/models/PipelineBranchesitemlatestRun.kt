/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 2.0.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param durationInMillis 
 * @param estimatedDurationInMillis 
 * @param enQueueTime 
 * @param endTime 
 * @param id 
 * @param organization 
 * @param pipeline 
 * @param result 
 * @param runSummary 
 * @param startTime 
 * @param state 
 * @param type 
 * @param commitId 
 * @param propertyClass 
 */
object PipelineBranchesitemlatestRuns : BaseTable<PipelineBranchesitemlatestRun>("PipelineBranchesitemlatestRun") {
    val durationInMillis = int("durationInMillis") /* null */
    val estimatedDurationInMillis = int("estimatedDurationInMillis") /* null */
    val enQueueTime = text("enQueueTime") /* null */
    val endTime = text("endTime") /* null */
    val id = text("id") /* null */
    val organization = text("organization") /* null */
    val pipeline = text("pipeline") /* null */
    val result = text("result") /* null */
    val runSummary = text("runSummary") /* null */
    val startTime = text("startTime") /* null */
    val state = text("state") /* null */
    val type = text("type") /* null */
    val commitId = text("commitId") /* null */
    val propertyClass = text("_class") /* null */

    /**
     * Create an entity of type PipelineBranchesitemlatestRun from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PipelineBranchesitemlatestRun(
        durationInMillis = row[durationInMillis]  /* kotlin.Int? */,
        estimatedDurationInMillis = row[estimatedDurationInMillis]  /* kotlin.Int? */,
        enQueueTime = row[enQueueTime]  /* kotlin.String? */,
        endTime = row[endTime]  /* kotlin.String? */,
        id = row[id]  /* kotlin.String? */,
        organization = row[organization]  /* kotlin.String? */,
        pipeline = row[pipeline]  /* kotlin.String? */,
        result = row[result]  /* kotlin.String? */,
        runSummary = row[runSummary]  /* kotlin.String? */,
        startTime = row[startTime]  /* kotlin.String? */,
        state = row[state]  /* kotlin.String? */,
        type = row[type]  /* kotlin.String? */,
        commitId = row[commitId]  /* kotlin.String? */,
        propertyClass = row[propertyClass]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type PipelineBranchesitemlatestRun to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PipelineBranchesitemlatestRun()
    * database.update(PipelineBranchesitemlatestRuns, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PipelineBranchesitemlatestRun) {
        this.apply {
            set(PipelineBranchesitemlatestRuns.durationInMillis, entity.durationInMillis)
            set(PipelineBranchesitemlatestRuns.estimatedDurationInMillis, entity.estimatedDurationInMillis)
            set(PipelineBranchesitemlatestRuns.enQueueTime, entity.enQueueTime)
            set(PipelineBranchesitemlatestRuns.endTime, entity.endTime)
            set(PipelineBranchesitemlatestRuns.id, entity.id)
            set(PipelineBranchesitemlatestRuns.organization, entity.organization)
            set(PipelineBranchesitemlatestRuns.pipeline, entity.pipeline)
            set(PipelineBranchesitemlatestRuns.result, entity.result)
            set(PipelineBranchesitemlatestRuns.runSummary, entity.runSummary)
            set(PipelineBranchesitemlatestRuns.startTime, entity.startTime)
            set(PipelineBranchesitemlatestRuns.state, entity.state)
            set(PipelineBranchesitemlatestRuns.type, entity.type)
            set(PipelineBranchesitemlatestRuns.commitId, entity.commitId)
            set(PipelineBranchesitemlatestRuns.propertyClass, entity.propertyClass)
        }
    }

}


