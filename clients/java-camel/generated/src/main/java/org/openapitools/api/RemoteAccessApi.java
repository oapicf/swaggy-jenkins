/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class RemoteAccessApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        GET /computer/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/computer/api/json")
                .description("")
                .id("getComputerApi")
                .produces("application/json")
                .outType(ComputerSet.class)
                .param()
                    .name("depth")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Recursion depth in response model")
                .endParam()
                .to("direct:getComputer");
        

        /**
        GET /api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/api/json")
                .description("")
                .id("getJenkinsApi")
                .produces("application/json")
                .outType(Hudson.class)
                .to("direct:getJenkins");
        

        /**
        GET /job/{name}/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/job/{name}/api/json")
                .description("")
                .id("getJobApi")
                .produces("application/json")
                .outType(FreeStyleProject.class)
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .to("direct:getJob");
        

        /**
        GET /job/{name}/config.xml
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/job/{name}/config.xml")
                .description("")
                .id("getJobConfigApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("text/xml")
                .outType(String.class)
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .to("direct:getJobConfig");
        

        /**
        GET /job/{name}/lastBuild/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/job/{name}/lastBuild/api/json")
                .description("")
                .id("getJobLastBuildApi")
                .produces("application/json")
                .outType(FreeStyleBuild.class)
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .to("direct:getJobLastBuild");
        

        /**
        GET /job/{name}/{number}/logText/progressiveText
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/job/{name}/{number}/logText/progressiveText")
                .description("")
                .id("getJobProgressiveTextApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("number")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Build number")
                .endParam()
                .param()
                    .name("start")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Starting point of progressive text output")
                .endParam()
                .to("direct:getJobProgressiveText");
        

        /**
        GET /queue/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/queue/api/json")
                .description("")
                .id("getQueueApi")
                .produces("application/json")
                .outType(Queue.class)
                .to("direct:getQueue");
        

        /**
        GET /queue/item/{number}/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/queue/item/{number}/api/json")
                .description("")
                .id("getQueueItemApi")
                .produces("application/json")
                .outType(Queue.class)
                .param()
                    .name("number")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Queue number")
                .endParam()
                .to("direct:getQueueItem");
        

        /**
        GET /view/{name}/api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/view/{name}/api/json")
                .description("")
                .id("getViewApi")
                .produces("application/json")
                .outType(ListView.class)
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the view")
                .endParam()
                .to("direct:getView");
        

        /**
        GET /view/{name}/config.xml
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/view/{name}/config.xml")
                .description("")
                .id("getViewConfigApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("text/xml")
                .outType(String.class)
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the view")
                .endParam()
                .to("direct:getViewConfig");
        

        /**
        HEAD /api/json
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .head("/api/json")
                .description("")
                .id("headJenkinsApi")
                .to("direct:headJenkins");
        

        /**
        POST /createItem
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/createItem")
                .description("")
                .id("postCreateItemApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("*/*")
                .outType(Void.class)
                .consumes("application/json")
                
                .param()
                    .name("name")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Name of the new job")
                .endParam()
                .param()
                    .name("from")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Existing job to copy from")
                .endParam()
                .param()
                    .name("mode")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Set to 'copy' for copying an existing job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .param()
                    .name("contentType")
                    .type(RestParamType.header)
                    .required(false)
                    .description("Content type header application/xml")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(false)
                    .description("Job configuration in config.xml format")
                .endParam()
                .to("direct:postCreateItem");
        

        /**
        POST /createView
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/createView")
                .description("")
                .id("postCreateViewApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("*/*")
                .outType(Void.class)
                .consumes("application/json")
                
                .param()
                    .name("name")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Name of the new view")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .param()
                    .name("contentType")
                    .type(RestParamType.header)
                    .required(false)
                    .description("Content type header application/xml")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(false)
                    .description("View configuration in config.xml format")
                .endParam()
                .to("direct:postCreateView");
        

        /**
        POST /job/{name}/build
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/build")
                .description("")
                .id("postJobBuildApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("json")
                    .type(RestParamType.query)
                    .required(true)
                .endParam()
                .param()
                    .name("token")
                    .type(RestParamType.query)
                    .required(false)
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .to("direct:postJobBuild");
        

        /**
        POST /job/{name}/config.xml
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/config.xml")
                .description("")
                .id("postJobConfigApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("*/*")
                .outType(Void.class)
                .consumes("application/json")
                
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Job configuration in config.xml format")
                .endParam()
                .to("direct:postJobConfig");
        

        /**
        POST /job/{name}/doDelete
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/doDelete")
                .description("")
                .id("postJobDeleteApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .to("direct:postJobDelete");
        

        /**
        POST /job/{name}/disable
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/disable")
                .description("")
                .id("postJobDisableApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .to("direct:postJobDisable");
        

        /**
        POST /job/{name}/enable
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/enable")
                .description("")
                .id("postJobEnableApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .to("direct:postJobEnable");
        

        /**
        POST /job/{name}/lastBuild/stop
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/job/{name}/lastBuild/stop")
                .description("")
                .id("postJobLastBuildStopApi")
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the job")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .to("direct:postJobLastBuildStop");
        

        /**
        POST /view/{name}/config.xml
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/view/{name}/config.xml")
                .description("")
                .id("postViewConfigApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.off)
                .produces("*/*")
                .outType(Void.class)
                .consumes("application/json")
                
                .param()
                    .name("name")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the view")
                .endParam()
                .param()
                    .name("jenkinsCrumb")
                    .type(RestParamType.header)
                    .required(false)
                    .description("CSRF protection token")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("View configuration in config.xml format")
                .endParam()
                .to("direct:postViewConfig");
        
    }
}
