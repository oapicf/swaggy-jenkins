/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class BlueOceanApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        DELETE /blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .delete("/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}")
                .description("")
                .id("deletePipelineQueueItemApi")
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("queue")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the queue item")
                .endParam()
                .to("direct:deletePipelineQueueItem");
        

        /**
        GET /blue/rest/organizations/{organization}/user/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/user/")
                .description("")
                .id("getAuthenticatedUserApi")
                .produces("application/json")
                .outType(User.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .to("direct:getAuthenticatedUser");
        

        /**
        GET /blue/rest/classes/{class}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/classes/{class}")
                .description("")
                .id("getClassesApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("propertyClass")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the class")
                .endParam()
                .to("direct:getClasses");
        

        /**
        GET /jwt-auth/jwks/{key}
        **/
        rest()
            .get("/jwt-auth/jwks/{key}")
                .description("")
                .id("getJsonWebKeyApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("key")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Key ID received as part of JWT header field kid")
                .endParam()
                .to("direct:getJsonWebKey");
        

        /**
        GET /jwt-auth/token
        **/
        rest()
            .get("/jwt-auth/token")
                .description("")
                .id("getJsonWebTokenApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("expiryTimeInMins")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Token expiry time in minutes, default: 30 minutes")
                .endParam()
                .param()
                    .name("maxExpiryTimeInMins")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum token expiry time in minutes, default: 480 minutes")
                .endParam()
                .to("direct:getJsonWebToken");
        

        /**
        GET /blue/rest/organizations/{organization}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}")
                .description("")
                .id("getOrganisationApi")
                .produces("application/json")
                .outType(Organisation.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .to("direct:getOrganisation");
        

        /**
        GET /blue/rest/organizations/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/")
                .description("")
                .id("getOrganisationsApi")
                .produces("application/json")
                .outType(Organisation[].class)
                .to("direct:getOrganisations");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}")
                .description("")
                .id("getPipelineApi")
                .produces("application/json")
                .outType(Pipeline.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:getPipeline");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/activities
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/activities")
                .description("")
                .id("getPipelineActivitiesApi")
                .produces("application/json")
                .outType(PipelineActivity[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:getPipelineActivities");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/")
                .description("")
                .id("getPipelineBranchApi")
                .produces("application/json")
                .outType(BranchImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("branch")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the branch")
                .endParam()
                .to("direct:getPipelineBranch");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}")
                .description("")
                .id("getPipelineBranchRunApi")
                .produces("application/json")
                .outType(PipelineRun.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("branch")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the branch")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .to("direct:getPipelineBranchRun");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/branches
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches")
                .description("")
                .id("getPipelineBranchesApi")
                .produces("application/json")
                .outType(MultibranchPipeline.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:getPipelineBranches");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{folder}/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{folder}/")
                .description("")
                .id("getPipelineFolderApi")
                .produces("application/json")
                .outType(PipelineFolderImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("folder")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the folder")
                .endParam()
                .to("direct:getPipelineFolder");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}")
                .description("")
                .id("getPipelineFolderPipelineApi")
                .produces("application/json")
                .outType(PipelineImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("folder")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the folder")
                .endParam()
                .to("direct:getPipelineFolderPipeline");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/queue
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue")
                .description("")
                .id("getPipelineQueueApi")
                .produces("application/json")
                .outType(QueueItemImpl[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:getPipelineQueue");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}")
                .description("")
                .id("getPipelineRunApi")
                .produces("application/json")
                .outType(PipelineRun.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .to("direct:getPipelineRun");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log")
                .description("")
                .id("getPipelineRunLogApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("start")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Start position of the log")
                .endParam()
                .param()
                    .name("download")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Set to true in order to download the file, otherwise it's passed as a response body")
                .endParam()
                .to("direct:getPipelineRunLog");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}")
                .description("")
                .id("getPipelineRunNodeApi")
                .produces("application/json")
                .outType(PipelineRunNode.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("node")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the node")
                .endParam()
                .to("direct:getPipelineRunNode");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}")
                .description("")
                .id("getPipelineRunNodeStepApi")
                .produces("application/json")
                .outType(PipelineStepImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("node")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the node")
                .endParam()
                .param()
                    .name("step")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the step")
                .endParam()
                .to("direct:getPipelineRunNodeStep");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log")
                .description("")
                .id("getPipelineRunNodeStepLogApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("node")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the node")
                .endParam()
                .param()
                    .name("step")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the step")
                .endParam()
                .to("direct:getPipelineRunNodeStepLog");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps")
                .description("")
                .id("getPipelineRunNodeStepsApi")
                .produces("application/json")
                .outType(PipelineStepImpl[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("node")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the node")
                .endParam()
                .to("direct:getPipelineRunNodeSteps");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes")
                .description("")
                .id("getPipelineRunNodesApi")
                .produces("application/json")
                .outType(PipelineRunNode[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .to("direct:getPipelineRunNodes");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs")
                .description("")
                .id("getPipelineRunsApi")
                .produces("application/json")
                .outType(PipelineRun[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:getPipelineRuns");
        

        /**
        GET /blue/rest/organizations/{organization}/pipelines/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/pipelines/")
                .description("")
                .id("getPipelinesApi")
                .produces("application/json")
                .outType(Pipeline[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .to("direct:getPipelines");
        

        /**
        GET /blue/rest/organizations/{organization}/scm/{scm}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/scm/{scm}")
                .description("")
                .id("getSCMApi")
                .produces("application/json")
                .outType(GithubScm.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("scm")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of SCM")
                .endParam()
                .to("direct:getSCM");
        

        /**
        GET /blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories")
                .description("")
                .id("getSCMOrganisationRepositoriesApi")
                .produces("application/json")
                .outType(GithubOrganization[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("scm")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of SCM")
                .endParam()
                .param()
                    .name("scmOrganisation")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the SCM organization")
                .endParam()
                .param()
                    .name("credentialId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Credential ID")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Number of items in a page")
                .endParam()
                .param()
                    .name("pageNumber")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Page number")
                .endParam()
                .to("direct:getSCMOrganisationRepositories");
        

        /**
        GET /blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}")
                .description("")
                .id("getSCMOrganisationRepositoryApi")
                .produces("application/json")
                .outType(GithubOrganization[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("scm")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of SCM")
                .endParam()
                .param()
                    .name("scmOrganisation")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the SCM organization")
                .endParam()
                .param()
                    .name("repository")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the SCM repository")
                .endParam()
                .param()
                    .name("credentialId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Credential ID")
                .endParam()
                .to("direct:getSCMOrganisationRepository");
        

        /**
        GET /blue/rest/organizations/{organization}/scm/{scm}/organizations
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/scm/{scm}/organizations")
                .description("")
                .id("getSCMOrganisationsApi")
                .produces("application/json")
                .outType(GithubOrganization[].class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("scm")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of SCM")
                .endParam()
                .param()
                    .name("credentialId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Credential ID")
                .endParam()
                .to("direct:getSCMOrganisations");
        

        /**
        GET /blue/rest/organizations/{organization}/users/{user}
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/users/{user}")
                .description("")
                .id("getUserApi")
                .produces("application/json")
                .outType(User.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("user")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the user")
                .endParam()
                .to("direct:getUser");
        

        /**
        GET /blue/rest/users/{user}/favorites
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/users/{user}/favorites")
                .description("")
                .id("getUserFavoritesApi")
                .produces("application/json")
                .outType(FavoriteImpl[].class)
                .param()
                    .name("user")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the user")
                .endParam()
                .to("direct:getUserFavorites");
        

        /**
        GET /blue/rest/organizations/{organization}/users/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/organizations/{organization}/users/")
                .description("")
                .id("getUsersApi")
                .produces("application/json")
                .outType(User.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .to("direct:getUsers");
        

        /**
        POST /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay")
                .description("")
                .id("postPipelineRunApi")
                .produces("application/json")
                .outType(QueueItemImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .to("direct:postPipelineRun");
        

        /**
        POST /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .post("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs")
                .description("")
                .id("postPipelineRunsApi")
                .produces("application/json")
                .outType(QueueItemImpl.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .to("direct:postPipelineRuns");
        

        /**
        PUT /blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .put("/blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite")
                .description("")
                .id("putPipelineFavoriteApi")
                .produces("application/json")
                .outType(FavoriteImpl.class)
                .consumes("application/json")
                
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("body")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Set JSON string body to {\"favorite\": true} to favorite, set value to false to unfavorite")
                .endParam()
                .to("direct:putPipelineFavorite");
        

        /**
        PUT /blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .put("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop")
                .description("")
                .id("putPipelineRunApi")
                .produces("application/json")
                .outType(PipelineRun.class)
                .param()
                    .name("organization")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the organization")
                .endParam()
                .param()
                    .name("pipeline")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the pipeline")
                .endParam()
                .param()
                    .name("run")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Name of the run")
                .endParam()
                .param()
                    .name("blocking")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Set to true to make blocking stop, default: false")
                .endParam()
                .param()
                    .name("timeOutInSecs")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Timeout in seconds, default: 10 seconds")
                .endParam()
                .to("direct:putPipelineRun");
        

        /**
        GET /blue/rest/search/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/search/")
                .description("")
                .id("searchApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("q")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Query string")
                .endParam()
                .to("direct:search");
        

        /**
        GET /blue/rest/classes/
        **/
        rest()
            .securityDefinitions()
                .basicAuth("jenkins_auth").end()
            .get("/blue/rest/classes/")
                .description("")
                .id("searchClassesApi")
                .produces("application/json")
                .outType(String.class)
                .param()
                    .name("q")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Query string containing an array of class names")
                .endParam()
                .to("direct:searchClasses");
        
    }
}
