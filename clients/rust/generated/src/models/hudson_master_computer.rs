/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HudsonMasterComputer {
    #[serde(rename = "_class", skip_serializing_if = "Option::is_none")]
    pub _class: Option<String>,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "executors", skip_serializing_if = "Option::is_none")]
    pub executors: Option<Vec<models::HudsonMasterComputerexecutors>>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    #[serde(rename = "iconClassName", skip_serializing_if = "Option::is_none")]
    pub icon_class_name: Option<String>,
    #[serde(rename = "idle", skip_serializing_if = "Option::is_none")]
    pub idle: Option<bool>,
    #[serde(rename = "jnlpAgent", skip_serializing_if = "Option::is_none")]
    pub jnlp_agent: Option<bool>,
    #[serde(rename = "launchSupported", skip_serializing_if = "Option::is_none")]
    pub launch_supported: Option<bool>,
    #[serde(rename = "loadStatistics", skip_serializing_if = "Option::is_none")]
    pub load_statistics: Option<Box<models::Label1>>,
    #[serde(rename = "manualLaunchAllowed", skip_serializing_if = "Option::is_none")]
    pub manual_launch_allowed: Option<bool>,
    #[serde(rename = "monitorData", skip_serializing_if = "Option::is_none")]
    pub monitor_data: Option<Box<models::HudsonMasterComputermonitorData>>,
    #[serde(rename = "numExecutors", skip_serializing_if = "Option::is_none")]
    pub num_executors: Option<i32>,
    #[serde(rename = "offline", skip_serializing_if = "Option::is_none")]
    pub offline: Option<bool>,
    #[serde(rename = "offlineCause", skip_serializing_if = "Option::is_none")]
    pub offline_cause: Option<String>,
    #[serde(rename = "offlineCauseReason", skip_serializing_if = "Option::is_none")]
    pub offline_cause_reason: Option<String>,
    #[serde(rename = "temporarilyOffline", skip_serializing_if = "Option::is_none")]
    pub temporarily_offline: Option<bool>,
}

impl HudsonMasterComputer {
    pub fn new() -> HudsonMasterComputer {
        HudsonMasterComputer {
            _class: None,
            display_name: None,
            executors: None,
            icon: None,
            icon_class_name: None,
            idle: None,
            jnlp_agent: None,
            launch_supported: None,
            load_statistics: None,
            manual_launch_allowed: None,
            monitor_data: None,
            num_executors: None,
            offline: None,
            offline_cause: None,
            offline_cause_reason: None,
            temporarily_offline: None,
        }
    }
}

