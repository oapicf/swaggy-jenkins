<?php
/**
 * Hudson
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Hudson model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Hudson 
{
        /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $class = null;

    /**
     * @var HudsonassignedLabels[]|null
     * @SerializedName("assignedLabels")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\HudsonassignedLabels")
     * })
     * @Type("array<OpenAPI\Server\Model\HudsonassignedLabels>")
     */
    protected ?array $assignedLabels = null;

    /**
     * @var string|null
     * @SerializedName("mode")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $mode = null;

    /**
     * @var string|null
     * @SerializedName("nodeDescription")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $nodeDescription = null;

    /**
     * @var string|null
     * @SerializedName("nodeName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $nodeName = null;

    /**
     * @var int|null
     * @SerializedName("numExecutors")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $numExecutors = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $description = null;

    /**
     * @var FreeStyleProject[]|null
     * @SerializedName("jobs")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\FreeStyleProject")
     * })
     * @Type("array<OpenAPI\Server\Model\FreeStyleProject>")
     */
    protected ?array $jobs = null;

    /**
     * @var AllView|null
     * @SerializedName("primaryView")
     * @Assert\Type("OpenAPI\Server\Model\AllView")
     * @Type("OpenAPI\Server\Model\AllView")
     */
    protected ?AllView $primaryView = null;

    /**
     * @var bool|null
     * @SerializedName("quietingDown")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $quietingDown = null;

    /**
     * @var int|null
     * @SerializedName("slaveAgentPort")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $slaveAgentPort = null;

    /**
     * @var UnlabeledLoadStatistics|null
     * @SerializedName("unlabeledLoad")
     * @Assert\Type("OpenAPI\Server\Model\UnlabeledLoadStatistics")
     * @Type("OpenAPI\Server\Model\UnlabeledLoadStatistics")
     */
    protected ?UnlabeledLoadStatistics $unlabeledLoad = null;

    /**
     * @var bool|null
     * @SerializedName("useCrumbs")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $useCrumbs = null;

    /**
     * @var bool|null
     * @SerializedName("useSecurity")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $useSecurity = null;

    /**
     * @var AllView[]|null
     * @SerializedName("views")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\AllView")
     * })
     * @Type("array<OpenAPI\Server\Model\AllView>")
     */
    protected ?array $views = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
            $this->assignedLabels = array_key_exists('assignedLabels', $data) ? $data['assignedLabels'] : $this->assignedLabels;
            $this->mode = array_key_exists('mode', $data) ? $data['mode'] : $this->mode;
            $this->nodeDescription = array_key_exists('nodeDescription', $data) ? $data['nodeDescription'] : $this->nodeDescription;
            $this->nodeName = array_key_exists('nodeName', $data) ? $data['nodeName'] : $this->nodeName;
            $this->numExecutors = array_key_exists('numExecutors', $data) ? $data['numExecutors'] : $this->numExecutors;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->jobs = array_key_exists('jobs', $data) ? $data['jobs'] : $this->jobs;
            $this->primaryView = array_key_exists('primaryView', $data) ? $data['primaryView'] : $this->primaryView;
            $this->quietingDown = array_key_exists('quietingDown', $data) ? $data['quietingDown'] : $this->quietingDown;
            $this->slaveAgentPort = array_key_exists('slaveAgentPort', $data) ? $data['slaveAgentPort'] : $this->slaveAgentPort;
            $this->unlabeledLoad = array_key_exists('unlabeledLoad', $data) ? $data['unlabeledLoad'] : $this->unlabeledLoad;
            $this->useCrumbs = array_key_exists('useCrumbs', $data) ? $data['useCrumbs'] : $this->useCrumbs;
            $this->useSecurity = array_key_exists('useSecurity', $data) ? $data['useSecurity'] : $this->useSecurity;
            $this->views = array_key_exists('views', $data) ? $data['views'] : $this->views;
        }
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }



    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }

    /**
     * Gets assignedLabels.
     *
     * @return HudsonassignedLabels[]|null
     */
    public function getAssignedLabels(): ?array
    {
        return $this->assignedLabels;
    }



    /**
     * Sets assignedLabels.
     *
     * @param HudsonassignedLabels[]|null $assignedLabels
     *
     * @return $this
     */
    public function setAssignedLabels(?array $assignedLabels = null): self
    {
        $this->assignedLabels = $assignedLabels;

        return $this;
    }

    /**
     * Gets mode.
     *
     * @return string|null
     */
    public function getMode(): ?string
    {
        return $this->mode;
    }



    /**
     * Sets mode.
     *
     * @param string|null $mode
     *
     * @return $this
     */
    public function setMode(?string $mode = null): self
    {
        $this->mode = $mode;

        return $this;
    }

    /**
     * Gets nodeDescription.
     *
     * @return string|null
     */
    public function getNodeDescription(): ?string
    {
        return $this->nodeDescription;
    }



    /**
     * Sets nodeDescription.
     *
     * @param string|null $nodeDescription
     *
     * @return $this
     */
    public function setNodeDescription(?string $nodeDescription = null): self
    {
        $this->nodeDescription = $nodeDescription;

        return $this;
    }

    /**
     * Gets nodeName.
     *
     * @return string|null
     */
    public function getNodeName(): ?string
    {
        return $this->nodeName;
    }



    /**
     * Sets nodeName.
     *
     * @param string|null $nodeName
     *
     * @return $this
     */
    public function setNodeName(?string $nodeName = null): self
    {
        $this->nodeName = $nodeName;

        return $this;
    }

    /**
     * Gets numExecutors.
     *
     * @return int|null
     */
    public function getNumExecutors(): ?int
    {
        return $this->numExecutors;
    }



    /**
     * Sets numExecutors.
     *
     * @param int|null $numExecutors
     *
     * @return $this
     */
    public function setNumExecutors(?int $numExecutors = null): self
    {
        $this->numExecutors = $numExecutors;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }



    /**
     * Sets description.
     *
     * @param string|null $description
     *
     * @return $this
     */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets jobs.
     *
     * @return FreeStyleProject[]|null
     */
    public function getJobs(): ?array
    {
        return $this->jobs;
    }



    /**
     * Sets jobs.
     *
     * @param FreeStyleProject[]|null $jobs
     *
     * @return $this
     */
    public function setJobs(?array $jobs = null): self
    {
        $this->jobs = $jobs;

        return $this;
    }

    /**
     * Gets primaryView.
     *
     * @return AllView|null
     */
    public function getPrimaryView(): ?AllView
    {
        return $this->primaryView;
    }



    /**
     * Sets primaryView.
     *
     * @param AllView|null $primaryView
     *
     * @return $this
     */
    public function setPrimaryView(?AllView $primaryView = null): self
    {
        $this->primaryView = $primaryView;

        return $this;
    }

    /**
     * Gets quietingDown.
     *
     * @return bool|null
     */
    public function isQuietingDown(): ?bool
    {
        return $this->quietingDown;
    }



    /**
     * Sets quietingDown.
     *
     * @param bool|null $quietingDown
     *
     * @return $this
     */
    public function setQuietingDown(?bool $quietingDown = null): self
    {
        $this->quietingDown = $quietingDown;

        return $this;
    }

    /**
     * Gets slaveAgentPort.
     *
     * @return int|null
     */
    public function getSlaveAgentPort(): ?int
    {
        return $this->slaveAgentPort;
    }



    /**
     * Sets slaveAgentPort.
     *
     * @param int|null $slaveAgentPort
     *
     * @return $this
     */
    public function setSlaveAgentPort(?int $slaveAgentPort = null): self
    {
        $this->slaveAgentPort = $slaveAgentPort;

        return $this;
    }

    /**
     * Gets unlabeledLoad.
     *
     * @return UnlabeledLoadStatistics|null
     */
    public function getUnlabeledLoad(): ?UnlabeledLoadStatistics
    {
        return $this->unlabeledLoad;
    }



    /**
     * Sets unlabeledLoad.
     *
     * @param UnlabeledLoadStatistics|null $unlabeledLoad
     *
     * @return $this
     */
    public function setUnlabeledLoad(?UnlabeledLoadStatistics $unlabeledLoad = null): self
    {
        $this->unlabeledLoad = $unlabeledLoad;

        return $this;
    }

    /**
     * Gets useCrumbs.
     *
     * @return bool|null
     */
    public function isUseCrumbs(): ?bool
    {
        return $this->useCrumbs;
    }



    /**
     * Sets useCrumbs.
     *
     * @param bool|null $useCrumbs
     *
     * @return $this
     */
    public function setUseCrumbs(?bool $useCrumbs = null): self
    {
        $this->useCrumbs = $useCrumbs;

        return $this;
    }

    /**
     * Gets useSecurity.
     *
     * @return bool|null
     */
    public function isUseSecurity(): ?bool
    {
        return $this->useSecurity;
    }



    /**
     * Sets useSecurity.
     *
     * @param bool|null $useSecurity
     *
     * @return $this
     */
    public function setUseSecurity(?bool $useSecurity = null): self
    {
        $this->useSecurity = $useSecurity;

        return $this;
    }

    /**
     * Gets views.
     *
     * @return AllView[]|null
     */
    public function getViews(): ?array
    {
        return $this->views;
    }



    /**
     * Sets views.
     *
     * @param AllView[]|null $views
     *
     * @return $this
     */
    public function setViews(?array $views = null): self
    {
        $this->views = $views;

        return $this;
    }
}


