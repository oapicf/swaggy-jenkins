<?php
/**
 * FreeStyleBuild
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FreeStyleBuild model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FreeStyleBuild 
{
        /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $class = null;

    /**
     * @var int|null
     * @SerializedName("number")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $number = null;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $url = null;

    /**
     * @var CauseAction[]|null
     * @SerializedName("actions")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\CauseAction")
     * })
     * @Type("array<OpenAPI\Server\Model\CauseAction>")
     */
    protected ?array $actions = null;

    /**
     * @var bool|null
     * @SerializedName("building")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $building = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $description = null;

    /**
     * @var string|null
     * @SerializedName("displayName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $displayName = null;

    /**
     * @var int|null
     * @SerializedName("duration")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $duration = null;

    /**
     * @var int|null
     * @SerializedName("estimatedDuration")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $estimatedDuration = null;

    /**
     * @var string|null
     * @SerializedName("executor")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $executor = null;

    /**
     * @var string|null
     * @SerializedName("fullDisplayName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $fullDisplayName = null;

    /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id = null;

    /**
     * @var bool|null
     * @SerializedName("keepLog")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $keepLog = null;

    /**
     * @var int|null
     * @SerializedName("queueId")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $queueId = null;

    /**
     * @var string|null
     * @SerializedName("result")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $result = null;

    /**
     * @var int|null
     * @SerializedName("timestamp")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $timestamp = null;

    /**
     * @var string|null
     * @SerializedName("builtOn")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $builtOn = null;

    /**
     * @var EmptyChangeLogSet|null
     * @SerializedName("changeSet")
     * @Assert\Type("OpenAPI\Server\Model\EmptyChangeLogSet")
     * @Type("OpenAPI\Server\Model\EmptyChangeLogSet")
     */
    protected ?EmptyChangeLogSet $changeSet = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
            $this->number = array_key_exists('number', $data) ? $data['number'] : $this->number;
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
            $this->actions = array_key_exists('actions', $data) ? $data['actions'] : $this->actions;
            $this->building = array_key_exists('building', $data) ? $data['building'] : $this->building;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->displayName = array_key_exists('displayName', $data) ? $data['displayName'] : $this->displayName;
            $this->duration = array_key_exists('duration', $data) ? $data['duration'] : $this->duration;
            $this->estimatedDuration = array_key_exists('estimatedDuration', $data) ? $data['estimatedDuration'] : $this->estimatedDuration;
            $this->executor = array_key_exists('executor', $data) ? $data['executor'] : $this->executor;
            $this->fullDisplayName = array_key_exists('fullDisplayName', $data) ? $data['fullDisplayName'] : $this->fullDisplayName;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->keepLog = array_key_exists('keepLog', $data) ? $data['keepLog'] : $this->keepLog;
            $this->queueId = array_key_exists('queueId', $data) ? $data['queueId'] : $this->queueId;
            $this->result = array_key_exists('result', $data) ? $data['result'] : $this->result;
            $this->timestamp = array_key_exists('timestamp', $data) ? $data['timestamp'] : $this->timestamp;
            $this->builtOn = array_key_exists('builtOn', $data) ? $data['builtOn'] : $this->builtOn;
            $this->changeSet = array_key_exists('changeSet', $data) ? $data['changeSet'] : $this->changeSet;
        }
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }



    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }

    /**
     * Gets number.
     *
     * @return int|null
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }



    /**
     * Sets number.
     *
     * @param int|null $number
     *
     * @return $this
     */
    public function setNumber(?int $number = null): self
    {
        $this->number = $number;

        return $this;
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }



    /**
     * Sets url.
     *
     * @param string|null $url
     *
     * @return $this
     */
    public function setUrl(?string $url = null): self
    {
        $this->url = $url;

        return $this;
    }

    /**
     * Gets actions.
     *
     * @return CauseAction[]|null
     */
    public function getActions(): ?array
    {
        return $this->actions;
    }



    /**
     * Sets actions.
     *
     * @param CauseAction[]|null $actions
     *
     * @return $this
     */
    public function setActions(?array $actions = null): self
    {
        $this->actions = $actions;

        return $this;
    }

    /**
     * Gets building.
     *
     * @return bool|null
     */
    public function isBuilding(): ?bool
    {
        return $this->building;
    }



    /**
     * Sets building.
     *
     * @param bool|null $building
     *
     * @return $this
     */
    public function setBuilding(?bool $building = null): self
    {
        $this->building = $building;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }



    /**
     * Sets description.
     *
     * @param string|null $description
     *
     * @return $this
     */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets displayName.
     *
     * @return string|null
     */
    public function getDisplayName(): ?string
    {
        return $this->displayName;
    }



    /**
     * Sets displayName.
     *
     * @param string|null $displayName
     *
     * @return $this
     */
    public function setDisplayName(?string $displayName = null): self
    {
        $this->displayName = $displayName;

        return $this;
    }

    /**
     * Gets duration.
     *
     * @return int|null
     */
    public function getDuration(): ?int
    {
        return $this->duration;
    }



    /**
     * Sets duration.
     *
     * @param int|null $duration
     *
     * @return $this
     */
    public function setDuration(?int $duration = null): self
    {
        $this->duration = $duration;

        return $this;
    }

    /**
     * Gets estimatedDuration.
     *
     * @return int|null
     */
    public function getEstimatedDuration(): ?int
    {
        return $this->estimatedDuration;
    }



    /**
     * Sets estimatedDuration.
     *
     * @param int|null $estimatedDuration
     *
     * @return $this
     */
    public function setEstimatedDuration(?int $estimatedDuration = null): self
    {
        $this->estimatedDuration = $estimatedDuration;

        return $this;
    }

    /**
     * Gets executor.
     *
     * @return string|null
     */
    public function getExecutor(): ?string
    {
        return $this->executor;
    }



    /**
     * Sets executor.
     *
     * @param string|null $executor
     *
     * @return $this
     */
    public function setExecutor(?string $executor = null): self
    {
        $this->executor = $executor;

        return $this;
    }

    /**
     * Gets fullDisplayName.
     *
     * @return string|null
     */
    public function getFullDisplayName(): ?string
    {
        return $this->fullDisplayName;
    }



    /**
     * Sets fullDisplayName.
     *
     * @param string|null $fullDisplayName
     *
     * @return $this
     */
    public function setFullDisplayName(?string $fullDisplayName = null): self
    {
        $this->fullDisplayName = $fullDisplayName;

        return $this;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }



    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets keepLog.
     *
     * @return bool|null
     */
    public function isKeepLog(): ?bool
    {
        return $this->keepLog;
    }



    /**
     * Sets keepLog.
     *
     * @param bool|null $keepLog
     *
     * @return $this
     */
    public function setKeepLog(?bool $keepLog = null): self
    {
        $this->keepLog = $keepLog;

        return $this;
    }

    /**
     * Gets queueId.
     *
     * @return int|null
     */
    public function getQueueId(): ?int
    {
        return $this->queueId;
    }



    /**
     * Sets queueId.
     *
     * @param int|null $queueId
     *
     * @return $this
     */
    public function setQueueId(?int $queueId = null): self
    {
        $this->queueId = $queueId;

        return $this;
    }

    /**
     * Gets result.
     *
     * @return string|null
     */
    public function getResult(): ?string
    {
        return $this->result;
    }



    /**
     * Sets result.
     *
     * @param string|null $result
     *
     * @return $this
     */
    public function setResult(?string $result = null): self
    {
        $this->result = $result;

        return $this;
    }

    /**
     * Gets timestamp.
     *
     * @return int|null
     */
    public function getTimestamp(): ?int
    {
        return $this->timestamp;
    }



    /**
     * Sets timestamp.
     *
     * @param int|null $timestamp
     *
     * @return $this
     */
    public function setTimestamp(?int $timestamp = null): self
    {
        $this->timestamp = $timestamp;

        return $this;
    }

    /**
     * Gets builtOn.
     *
     * @return string|null
     */
    public function getBuiltOn(): ?string
    {
        return $this->builtOn;
    }



    /**
     * Sets builtOn.
     *
     * @param string|null $builtOn
     *
     * @return $this
     */
    public function setBuiltOn(?string $builtOn = null): self
    {
        $this->builtOn = $builtOn;

        return $this;
    }

    /**
     * Gets changeSet.
     *
     * @return EmptyChangeLogSet|null
     */
    public function getChangeSet(): ?EmptyChangeLogSet
    {
        return $this->changeSet;
    }



    /**
     * Sets changeSet.
     *
     * @param EmptyChangeLogSet|null $changeSet
     *
     * @return $this
     */
    public function setChangeSet(?EmptyChangeLogSet $changeSet = null): self
    {
        $this->changeSet = $changeSet;

        return $this;
    }
}


