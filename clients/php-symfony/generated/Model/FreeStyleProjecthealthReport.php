<?php
/**
 * FreeStyleProjecthealthReport
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FreeStyleProjecthealthReport model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FreeStyleProjecthealthReport 
{
        /**
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $description = null;

    /**
     * @var string|null
     * @SerializedName("iconClassName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $iconClassName = null;

    /**
     * @var string|null
     * @SerializedName("iconUrl")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $iconUrl = null;

    /**
     * @var int|null
     * @SerializedName("score")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $score = null;

    /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $class = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->iconClassName = array_key_exists('iconClassName', $data) ? $data['iconClassName'] : $this->iconClassName;
            $this->iconUrl = array_key_exists('iconUrl', $data) ? $data['iconUrl'] : $this->iconUrl;
            $this->score = array_key_exists('score', $data) ? $data['score'] : $this->score;
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
        }
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }



    /**
     * Sets description.
     *
     * @param string|null $description
     *
     * @return $this
     */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets iconClassName.
     *
     * @return string|null
     */
    public function getIconClassName(): ?string
    {
        return $this->iconClassName;
    }



    /**
     * Sets iconClassName.
     *
     * @param string|null $iconClassName
     *
     * @return $this
     */
    public function setIconClassName(?string $iconClassName = null): self
    {
        $this->iconClassName = $iconClassName;

        return $this;
    }

    /**
     * Gets iconUrl.
     *
     * @return string|null
     */
    public function getIconUrl(): ?string
    {
        return $this->iconUrl;
    }



    /**
     * Sets iconUrl.
     *
     * @param string|null $iconUrl
     *
     * @return $this
     */
    public function setIconUrl(?string $iconUrl = null): self
    {
        $this->iconUrl = $iconUrl;

        return $this;
    }

    /**
     * Gets score.
     *
     * @return int|null
     */
    public function getScore(): ?int
    {
        return $this->score;
    }



    /**
     * Sets score.
     *
     * @param int|null $score
     *
     * @return $this
     */
    public function setScore(?int $score = null): self
    {
        $this->score = $score;

        return $this;
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }



    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }
}


