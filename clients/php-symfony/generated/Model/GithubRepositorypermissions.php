<?php
/**
 * GithubRepositorypermissions
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GithubRepositorypermissions model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GithubRepositorypermissions 
{
        /**
     * @var bool|null
     * @SerializedName("admin")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $admin = null;

    /**
     * @var bool|null
     * @SerializedName("push")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $push = null;

    /**
     * @var bool|null
     * @SerializedName("pull")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected ?bool $pull = null;

    /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $class = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->admin = array_key_exists('admin', $data) ? $data['admin'] : $this->admin;
            $this->push = array_key_exists('push', $data) ? $data['push'] : $this->push;
            $this->pull = array_key_exists('pull', $data) ? $data['pull'] : $this->pull;
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
        }
    }

    /**
     * Gets admin.
     *
     * @return bool|null
     */
    public function isAdmin(): ?bool
    {
        return $this->admin;
    }



    /**
     * Sets admin.
     *
     * @param bool|null $admin
     *
     * @return $this
     */
    public function setAdmin(?bool $admin = null): self
    {
        $this->admin = $admin;

        return $this;
    }

    /**
     * Gets push.
     *
     * @return bool|null
     */
    public function isPush(): ?bool
    {
        return $this->push;
    }



    /**
     * Sets push.
     *
     * @param bool|null $push
     *
     * @return $this
     */
    public function setPush(?bool $push = null): self
    {
        $this->push = $push;

        return $this;
    }

    /**
     * Gets pull.
     *
     * @return bool|null
     */
    public function isPull(): ?bool
    {
        return $this->pull;
    }



    /**
     * Sets pull.
     *
     * @param bool|null $pull
     *
     * @return $this
     */
    public function setPull(?bool $pull = null): self
    {
        $this->pull = $pull;

        return $this;
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }



    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }
}


