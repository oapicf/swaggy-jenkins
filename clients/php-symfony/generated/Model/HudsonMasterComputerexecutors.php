<?php
/**
 * HudsonMasterComputerexecutors
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the HudsonMasterComputerexecutors model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class HudsonMasterComputerexecutors 
{
        /**
     * @var FreeStyleBuild|null
     * @SerializedName("currentExecutable")
     * @Type("OpenAPI\Server\Model\FreeStyleBuild")
    */
    #[Assert\Type("OpenAPI\Server\Model\FreeStyleBuild")]
    protected ?FreeStyleBuild $currentExecutable = null;

    /**
     * @var bool|null
     * @SerializedName("idle")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $idle = null;

    /**
     * @var bool|null
     * @SerializedName("likelyStuck")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $likelyStuck = null;

    /**
     * @var int|null
     * @SerializedName("number")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $number = null;

    /**
     * @var int|null
     * @SerializedName("progress")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $progress = null;

    /**
     * @var string|null
     * @SerializedName("_class")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $class = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(?array $data = null)
    {
        if (is_array($data)) {
            $this->currentExecutable = array_key_exists('currentExecutable', $data) ? $data['currentExecutable'] : $this->currentExecutable;
            $this->idle = array_key_exists('idle', $data) ? $data['idle'] : $this->idle;
            $this->likelyStuck = array_key_exists('likelyStuck', $data) ? $data['likelyStuck'] : $this->likelyStuck;
            $this->number = array_key_exists('number', $data) ? $data['number'] : $this->number;
            $this->progress = array_key_exists('progress', $data) ? $data['progress'] : $this->progress;
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
        }
    }

    /**
     * Gets currentExecutable.
     *
     * @return FreeStyleBuild|null
     */
    public function getCurrentExecutable(): ?FreeStyleBuild
    {
        return $this->currentExecutable;
    }

    /**
    * Sets currentExecutable.
    *
    * @param FreeStyleBuild|null $currentExecutable
    *
    * @return $this
    */
    public function setCurrentExecutable(?FreeStyleBuild $currentExecutable = null): self
    {
        $this->currentExecutable = $currentExecutable;

        return $this;
    }




    /**
     * Gets idle.
     *
     * @return bool|null
     */
    public function isIdle(): ?bool
    {
        return $this->idle;
    }

    /**
    * Sets idle.
    *
    * @param bool|null $idle
    *
    * @return $this
    */
    public function setIdle(?bool $idle = null): self
    {
        $this->idle = $idle;

        return $this;
    }




    /**
     * Gets likelyStuck.
     *
     * @return bool|null
     */
    public function isLikelyStuck(): ?bool
    {
        return $this->likelyStuck;
    }

    /**
    * Sets likelyStuck.
    *
    * @param bool|null $likelyStuck
    *
    * @return $this
    */
    public function setLikelyStuck(?bool $likelyStuck = null): self
    {
        $this->likelyStuck = $likelyStuck;

        return $this;
    }




    /**
     * Gets number.
     *
     * @return int|null
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }

    /**
    * Sets number.
    *
    * @param int|null $number
    *
    * @return $this
    */
    public function setNumber(?int $number = null): self
    {
        $this->number = $number;

        return $this;
    }




    /**
     * Gets progress.
     *
     * @return int|null
     */
    public function getProgress(): ?int
    {
        return $this->progress;
    }

    /**
    * Sets progress.
    *
    * @param int|null $progress
    *
    * @return $this
    */
    public function setProgress(?int $progress = null): self
    {
        $this->progress = $progress;

        return $this;
    }




    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }

    /**
    * Sets class.
    *
    * @param string|null $class
    *
    * @return $this
    */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }



}


