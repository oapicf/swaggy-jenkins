<?php
/**
 * ListView
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ListView model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ListView 
{
        /**
     * @var string|null
     * @SerializedName("_class")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $class = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * @var FreeStyleProject[]|null
     * @SerializedName("jobs")
     * @Type("array<OpenAPI\Server\Model\FreeStyleProject>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\FreeStyleProject"),
    ])]
    protected ?array $jobs = null;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $url = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(?array $data = null)
    {
        if (is_array($data)) {
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->jobs = array_key_exists('jobs', $data) ? $data['jobs'] : $this->jobs;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
        }
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }

    /**
    * Sets class.
    *
    * @param string|null $class
    *
    * @return $this
    */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets jobs.
     *
     * @return FreeStyleProject[]|null
     */
    public function getJobs(): ?array
    {
        return $this->jobs;
    }

    /**
    * Sets jobs.
    *
    * @param FreeStyleProject[]|null $jobs
    *
    * @return $this
    */
    public function setJobs(?array $jobs = null): self
    {
        $this->jobs = $jobs;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
    * Sets url.
    *
    * @param string|null $url
    *
    * @return $this
    */
    public function setUrl(?string $url = null): self
    {
        $this->url = $url;

        return $this;
    }



}


