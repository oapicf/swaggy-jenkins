<?php
/**
 * PipelineRunNode
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PipelineRunNode model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PipelineRunNode 
{
        /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $class = null;

    /**
     * @var string|null
     * @SerializedName("displayName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $displayName = null;

    /**
     * @var int|null
     * @SerializedName("durationInMillis")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $durationInMillis = null;

    /**
     * @var PipelineRunNodeedges[]|null
     * @SerializedName("edges")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\PipelineRunNodeedges")
     * })
     * @Type("array<OpenAPI\Server\Model\PipelineRunNodeedges>")
     */
    protected ?array $edges = null;

    /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $id = null;

    /**
     * @var string|null
     * @SerializedName("result")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $result = null;

    /**
     * @var string|null
     * @SerializedName("startTime")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $startTime = null;

    /**
     * @var string|null
     * @SerializedName("state")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $state = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->class = array_key_exists('class', $data) ? $data['class'] : $this->class;
            $this->displayName = array_key_exists('displayName', $data) ? $data['displayName'] : $this->displayName;
            $this->durationInMillis = array_key_exists('durationInMillis', $data) ? $data['durationInMillis'] : $this->durationInMillis;
            $this->edges = array_key_exists('edges', $data) ? $data['edges'] : $this->edges;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->result = array_key_exists('result', $data) ? $data['result'] : $this->result;
            $this->startTime = array_key_exists('startTime', $data) ? $data['startTime'] : $this->startTime;
            $this->state = array_key_exists('state', $data) ? $data['state'] : $this->state;
        }
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass(): ?string
    {
        return $this->class;
    }



    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass(?string $class = null): self
    {
        $this->class = $class;

        return $this;
    }

    /**
     * Gets displayName.
     *
     * @return string|null
     */
    public function getDisplayName(): ?string
    {
        return $this->displayName;
    }



    /**
     * Sets displayName.
     *
     * @param string|null $displayName
     *
     * @return $this
     */
    public function setDisplayName(?string $displayName = null): self
    {
        $this->displayName = $displayName;

        return $this;
    }

    /**
     * Gets durationInMillis.
     *
     * @return int|null
     */
    public function getDurationInMillis(): ?int
    {
        return $this->durationInMillis;
    }



    /**
     * Sets durationInMillis.
     *
     * @param int|null $durationInMillis
     *
     * @return $this
     */
    public function setDurationInMillis(?int $durationInMillis = null): self
    {
        $this->durationInMillis = $durationInMillis;

        return $this;
    }

    /**
     * Gets edges.
     *
     * @return PipelineRunNodeedges[]|null
     */
    public function getEdges(): ?array
    {
        return $this->edges;
    }



    /**
     * Sets edges.
     *
     * @param PipelineRunNodeedges[]|null $edges
     *
     * @return $this
     */
    public function setEdges(?array $edges = null): self
    {
        $this->edges = $edges;

        return $this;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }



    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets result.
     *
     * @return string|null
     */
    public function getResult(): ?string
    {
        return $this->result;
    }



    /**
     * Sets result.
     *
     * @param string|null $result
     *
     * @return $this
     */
    public function setResult(?string $result = null): self
    {
        $this->result = $result;

        return $this;
    }

    /**
     * Gets startTime.
     *
     * @return string|null
     */
    public function getStartTime(): ?string
    {
        return $this->startTime;
    }



    /**
     * Sets startTime.
     *
     * @param string|null $startTime
     *
     * @return $this
     */
    public function setStartTime(?string $startTime = null): self
    {
        $this->startTime = $startTime;

        return $this;
    }

    /**
     * Gets state.
     *
     * @return string|null
     */
    public function getState(): ?string
    {
        return $this->state;
    }



    /**
     * Sets state.
     *
     * @param string|null $state
     *
     * @return $this
     */
    public function setState(?string $state = null): self
    {
        $this->state = $state;

        return $this;
    }
}


