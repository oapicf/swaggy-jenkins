<?php
/**
 * BlueOceanApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\BranchImpl;
use OpenAPI\Server\Model\FavoriteImpl;
use OpenAPI\Server\Model\GithubOrganization;
use OpenAPI\Server\Model\GithubScm;
use OpenAPI\Server\Model\MultibranchPipeline;
use OpenAPI\Server\Model\Organisation;
use OpenAPI\Server\Model\Pipeline;
use OpenAPI\Server\Model\PipelineActivity;
use OpenAPI\Server\Model\PipelineFolderImpl;
use OpenAPI\Server\Model\PipelineImpl;
use OpenAPI\Server\Model\PipelineRun;
use OpenAPI\Server\Model\PipelineRunNode;
use OpenAPI\Server\Model\PipelineStepImpl;
use OpenAPI\Server\Model\QueueItemImpl;
use OpenAPI\Server\Model\User;

/**
 * BlueOceanApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface BlueOceanApiInterface
{

    /**
     * Sets authentication method jenkins_auth
     *
     * @param string|null $value Value of the jenkins_auth authentication method.
     *
     * @return void
     */
    public function setjenkins_auth(?string $value): void;

    /**
     * Operation deletePipelineQueueItem
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $queue  Name of the queue item (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deletePipelineQueueItem(
        string $organization,
        string $pipeline,
        string $queue,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation getAuthenticatedUser
     *
     * @param  string $organization  Name of the organization (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getAuthenticatedUser(
        string $organization,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getClasses
     *
     * @param  string $class  Name of the class (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getClasses(
        string $class,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJsonWebKey
     *
     * @param  int $key  Key ID received as part of JWT header field kid (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJsonWebKey(
        int $key,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJsonWebToken
     *
     * @param  int|null $expiryTimeInMins  Token expiry time in minutes, default: 30 minutes (optional)
     * @param  int|null $maxExpiryTimeInMins  Maximum token expiry time in minutes, default: 480 minutes (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJsonWebToken(
        ?int $expiryTimeInMins,
        ?int $maxExpiryTimeInMins,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getOrganisation
     *
     * @param  string $organization  Name of the organization (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getOrganisation(
        string $organization,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getOrganisations
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getOrganisations(
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipeline
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipeline(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineActivities
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineActivities(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineBranch
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $branch  Name of the branch (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineBranch(
        string $organization,
        string $pipeline,
        string $branch,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineBranchRun
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $branch  Name of the branch (required)
     * @param  string $run  Name of the run (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineBranchRun(
        string $organization,
        string $pipeline,
        string $branch,
        string $run,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineBranches
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineBranches(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineFolder
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $folder  Name of the folder (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineFolder(
        string $organization,
        string $folder,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineFolderPipeline
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $folder  Name of the folder (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineFolderPipeline(
        string $organization,
        string $pipeline,
        string $folder,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineQueue
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineQueue(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRun
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRun(
        string $organization,
        string $pipeline,
        string $run,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunLog
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  int|null $start  Start position of the log (optional)
     * @param  bool|null $download  Set to true in order to download the file, otherwise it&#39;s passed as a response body (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunLog(
        string $organization,
        string $pipeline,
        string $run,
        ?int $start,
        ?bool $download,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunNode
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  string $node  Name of the node (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunNode(
        string $organization,
        string $pipeline,
        string $run,
        string $node,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunNodeStep
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  string $node  Name of the node (required)
     * @param  string $step  Name of the step (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunNodeStep(
        string $organization,
        string $pipeline,
        string $run,
        string $node,
        string $step,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunNodeStepLog
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  string $node  Name of the node (required)
     * @param  string $step  Name of the step (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunNodeStepLog(
        string $organization,
        string $pipeline,
        string $run,
        string $node,
        string $step,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunNodeSteps
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  string $node  Name of the node (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunNodeSteps(
        string $organization,
        string $pipeline,
        string $run,
        string $node,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRunNodes
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRunNodes(
        string $organization,
        string $pipeline,
        string $run,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelineRuns
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelineRuns(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPipelines
     *
     * @param  string $organization  Name of the organization (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPipelines(
        string $organization,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getSCM
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $scm  Name of SCM (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSCM(
        string $organization,
        string $scm,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getSCMOrganisationRepositories
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $scm  Name of SCM (required)
     * @param  string $scmOrganisation  Name of the SCM organization (required)
     * @param  string|null $credentialId  Credential ID (optional)
     * @param  int|null $pageSize  Number of items in a page (optional)
     * @param  int|null $pageNumber  Page number (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSCMOrganisationRepositories(
        string $organization,
        string $scm,
        string $scmOrganisation,
        ?string $credentialId,
        ?int $pageSize,
        ?int $pageNumber,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getSCMOrganisationRepository
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $scm  Name of SCM (required)
     * @param  string $scmOrganisation  Name of the SCM organization (required)
     * @param  string $repository  Name of the SCM repository (required)
     * @param  string|null $credentialId  Credential ID (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSCMOrganisationRepository(
        string $organization,
        string $scm,
        string $scmOrganisation,
        string $repository,
        ?string $credentialId,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getSCMOrganisations
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $scm  Name of SCM (required)
     * @param  string|null $credentialId  Credential ID (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getSCMOrganisations(
        string $organization,
        string $scm,
        ?string $credentialId,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getUser
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $user  Name of the user (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUser(
        string $organization,
        string $user,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getUserFavorites
     *
     * @param  string $user  Name of the user (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUserFavorites(
        string $user,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getUsers
     *
     * @param  string $organization  Name of the organization (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getUsers(
        string $organization,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation postPipelineRun
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function postPipelineRun(
        string $organization,
        string $pipeline,
        string $run,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation postPipelineRuns
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function postPipelineRuns(
        string $organization,
        string $pipeline,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation putPipelineFavorite
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  bool $body  Set JSON string body to {\&quot;favorite\&quot;: true} to favorite, set value to false to unfavorite (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function putPipelineFavorite(
        string $organization,
        string $pipeline,
        bool $body,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation putPipelineRun
     *
     * @param  string $organization  Name of the organization (required)
     * @param  string $pipeline  Name of the pipeline (required)
     * @param  string $run  Name of the run (required)
     * @param  string|null $blocking  Set to true to make blocking stop, default: false (optional)
     * @param  int|null $timeOutInSecs  Timeout in seconds, default: 10 seconds (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function putPipelineRun(
        string $organization,
        string $pipeline,
        string $run,
        ?string $blocking,
        ?int $timeOutInSecs,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation search
     *
     * @param  string $q  Query string (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function search(
        string $q,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation searchClasses
     *
     * @param  string $q  Query string containing an array of class names (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function searchClasses(
        string $q,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;
}
