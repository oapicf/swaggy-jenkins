<?php
/**
 * RemoteAccessApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ComputerSet;
use OpenAPI\Server\Model\FreeStyleBuild;
use OpenAPI\Server\Model\FreeStyleProject;
use OpenAPI\Server\Model\Hudson;
use OpenAPI\Server\Model\ListView;
use OpenAPI\Server\Model\Queue;

/**
 * RemoteAccessApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface RemoteAccessApiInterface
{

    /**
     * Sets authentication method jenkins_auth
     *
     * @param string|null $value Value of the jenkins_auth authentication method.
     *
     * @return void
     */
    public function setjenkins_auth(?string $value): void;

    /**
     * Operation getComputer
     *
     * @param  int $depth  Recursion depth in response model (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getComputer(
        int $depth,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJenkins
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJenkins(
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJob
     *
     * @param  string $name  Name of the job (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJob(
        string $name,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJobConfig
     *
     * @param  string $name  Name of the job (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJobConfig(
        string $name,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJobLastBuild
     *
     * @param  string $name  Name of the job (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getJobLastBuild(
        string $name,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getJobProgressiveText
     *
     * @param  string $name  Name of the job (required)
     * @param  string $number  Build number (required)
     * @param  string $start  Starting point of progressive text output (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function getJobProgressiveText(
        string $name,
        string $number,
        string $start,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation getQueue
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getQueue(
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getQueueItem
     *
     * @param  string $number  Queue number (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getQueueItem(
        string $number,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getView
     *
     * @param  string $name  Name of the view (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getView(
        string $name,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getViewConfig
     *
     * @param  string $name  Name of the view (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getViewConfig(
        string $name,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation headJenkins
     *
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function headJenkins(
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postCreateItem
     *
     * @param  string $name  Name of the new job (required)
     * @param  string|null $from  Existing job to copy from (optional)
     * @param  string|null $mode  Set to &#39;copy&#39; for copying an existing job (optional)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  string|null $contentType  Content type header application/xml (optional)
     * @param  string|null $body  Job configuration in config.xml format (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postCreateItem(
        string $name,
        ?string $from,
        ?string $mode,
        ?string $jenkinsCrumb,
        ?string $contentType,
        ?string $body,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postCreateView
     *
     * @param  string $name  Name of the new view (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  string|null $contentType  Content type header application/xml (optional)
     * @param  string|null $body  View configuration in config.xml format (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postCreateView(
        string $name,
        ?string $jenkinsCrumb,
        ?string $contentType,
        ?string $body,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobBuild
     *
     * @param  string $name  Name of the job (required)
     * @param  string $json   (required)
     * @param  string|null $token   (optional)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobBuild(
        string $name,
        string $json,
        ?string $token,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobConfig
     *
     * @param  string $name  Name of the job (required)
     * @param  string $body  Job configuration in config.xml format (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobConfig(
        string $name,
        string $body,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobDelete
     *
     * @param  string $name  Name of the job (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobDelete(
        string $name,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobDisable
     *
     * @param  string $name  Name of the job (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobDisable(
        string $name,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobEnable
     *
     * @param  string $name  Name of the job (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobEnable(
        string $name,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postJobLastBuildStop
     *
     * @param  string $name  Name of the job (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postJobLastBuildStop(
        string $name,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation postViewConfig
     *
     * @param  string $name  Name of the view (required)
     * @param  string $body  View configuration in config.xml format (required)
     * @param  string|null $jenkinsCrumb  CSRF protection token (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function postViewConfig(
        string $name,
        string $body,
        ?string $jenkinsCrumb,
        int &$responseCode,
        array &$responseHeaders
    ): void;
}
