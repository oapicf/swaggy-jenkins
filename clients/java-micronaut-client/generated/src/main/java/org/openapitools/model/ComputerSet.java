/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.HudsonMasterComputer;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * ComputerSet
 */
@JsonPropertyOrder({
  ComputerSet.JSON_PROPERTY_PROPERTY_CLASS,
  ComputerSet.JSON_PROPERTY_BUSY_EXECUTORS,
  ComputerSet.JSON_PROPERTY_COMPUTER,
  ComputerSet.JSON_PROPERTY_DISPLAY_NAME,
  ComputerSet.JSON_PROPERTY_TOTAL_EXECUTORS
})
@JsonTypeName("ComputerSet")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-03-15T14:11:59.582308919Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class ComputerSet {
    public static final String JSON_PROPERTY_PROPERTY_CLASS = "_class";
    private String propertyClass;

    public static final String JSON_PROPERTY_BUSY_EXECUTORS = "busyExecutors";
    private Integer busyExecutors;

    public static final String JSON_PROPERTY_COMPUTER = "computer";
    private List<@Valid HudsonMasterComputer> computer = null;

    public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
    private String displayName;

    public static final String JSON_PROPERTY_TOTAL_EXECUTORS = "totalExecutors";
    private Integer totalExecutors;

    public ComputerSet() {
    }

    public ComputerSet propertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
        return this;
    }

    /**
     * Get propertyClass
     * @return propertyClass
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPropertyClass() {
        return propertyClass;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPropertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
    }

    public ComputerSet busyExecutors(Integer busyExecutors) {
        this.busyExecutors = busyExecutors;
        return this;
    }

    /**
     * Get busyExecutors
     * @return busyExecutors
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUSY_EXECUTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getBusyExecutors() {
        return busyExecutors;
    }

    @JsonProperty(JSON_PROPERTY_BUSY_EXECUTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBusyExecutors(Integer busyExecutors) {
        this.busyExecutors = busyExecutors;
    }

    public ComputerSet computer(List<@Valid HudsonMasterComputer> computer) {
        this.computer = computer;
        return this;
    }

    public ComputerSet addComputerItem(HudsonMasterComputer computerItem) {
        if (this.computer == null) {
            this.computer = new ArrayList<>();
        }
        this.computer.add(computerItem);
        return this;
    }

    /**
     * Get computer
     * @return computer
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPUTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid HudsonMasterComputer> getComputer() {
        return computer;
    }

    @JsonProperty(JSON_PROPERTY_COMPUTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComputer(List<@Valid HudsonMasterComputer> computer) {
        this.computer = computer;
    }

    public ComputerSet displayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get displayName
     * @return displayName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDisplayName() {
        return displayName;
    }

    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public ComputerSet totalExecutors(Integer totalExecutors) {
        this.totalExecutors = totalExecutors;
        return this;
    }

    /**
     * Get totalExecutors
     * @return totalExecutors
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL_EXECUTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getTotalExecutors() {
        return totalExecutors;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_EXECUTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalExecutors(Integer totalExecutors) {
        this.totalExecutors = totalExecutors;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComputerSet computerSet = (ComputerSet) o;
        return Objects.equals(this.propertyClass, computerSet.propertyClass) &&
            Objects.equals(this.busyExecutors, computerSet.busyExecutors) &&
            Objects.equals(this.computer, computerSet.computer) &&
            Objects.equals(this.displayName, computerSet.displayName) &&
            Objects.equals(this.totalExecutors, computerSet.totalExecutors);
    }

    @Override
    public int hashCode() {
        return Objects.hash(propertyClass, busyExecutors, computer, displayName, totalExecutors);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComputerSet {\n");
        sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
        sb.append("    busyExecutors: ").append(toIndentedString(busyExecutors)).append("\n");
        sb.append("    computer: ").append(toIndentedString(computer)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    totalExecutors: ").append(toIndentedString(totalExecutors)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

