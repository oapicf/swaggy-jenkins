/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * GithubContent
 */
@JsonPropertyOrder({
  GithubContent.JSON_PROPERTY_NAME,
  GithubContent.JSON_PROPERTY_SHA,
  GithubContent.JSON_PROPERTY_PROPERTY_CLASS,
  GithubContent.JSON_PROPERTY_REPO,
  GithubContent.JSON_PROPERTY_SIZE,
  GithubContent.JSON_PROPERTY_OWNER,
  GithubContent.JSON_PROPERTY_PATH,
  GithubContent.JSON_PROPERTY_BASE64_DATA
})
@JsonTypeName("GithubContent")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-05-10T02:40:03.838053081Z[Etc/UTC]", comments = "Generator version: 7.12.0")
@Introspected
public class GithubContent {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_SHA = "sha";
    private String sha;

    public static final String JSON_PROPERTY_PROPERTY_CLASS = "_class";
    private String propertyClass;

    public static final String JSON_PROPERTY_REPO = "repo";
    private String repo;

    public static final String JSON_PROPERTY_SIZE = "size";
    private Integer size;

    public static final String JSON_PROPERTY_OWNER = "owner";
    private String owner;

    public static final String JSON_PROPERTY_PATH = "path";
    private String path;

    public static final String JSON_PROPERTY_BASE64_DATA = "base64Data";
    private String base64Data;

    public GithubContent() {
    }

    public GithubContent name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public GithubContent sha(String sha) {
        this.sha = sha;
        return this;
    }

    /**
     * Get sha
     * @return sha
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SHA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSha() {
        return sha;
    }

    @JsonProperty(JSON_PROPERTY_SHA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSha(String sha) {
        this.sha = sha;
    }

    public GithubContent propertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
        return this;
    }

    /**
     * Get propertyClass
     * @return propertyClass
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPropertyClass() {
        return propertyClass;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPropertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
    }

    public GithubContent repo(String repo) {
        this.repo = repo;
        return this;
    }

    /**
     * Get repo
     * @return repo
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_REPO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRepo() {
        return repo;
    }

    @JsonProperty(JSON_PROPERTY_REPO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRepo(String repo) {
        this.repo = repo;
    }

    public GithubContent size(Integer size) {
        this.size = size;
        return this;
    }

    /**
     * Get size
     * @return size
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SIZE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSize() {
        return size;
    }

    @JsonProperty(JSON_PROPERTY_SIZE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSize(Integer size) {
        this.size = size;
    }

    public GithubContent owner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Get owner
     * @return owner
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOwner() {
        return owner;
    }

    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwner(String owner) {
        this.owner = owner;
    }

    public GithubContent path(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get path
     * @return path
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPath() {
        return path;
    }

    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPath(String path) {
        this.path = path;
    }

    public GithubContent base64Data(String base64Data) {
        this.base64Data = base64Data;
        return this;
    }

    /**
     * Get base64Data
     * @return base64Data
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BASE64_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBase64Data() {
        return base64Data;
    }

    @JsonProperty(JSON_PROPERTY_BASE64_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBase64Data(String base64Data) {
        this.base64Data = base64Data;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GithubContent githubContent = (GithubContent) o;
        return Objects.equals(this.name, githubContent.name) &&
            Objects.equals(this.sha, githubContent.sha) &&
            Objects.equals(this.propertyClass, githubContent.propertyClass) &&
            Objects.equals(this.repo, githubContent.repo) &&
            Objects.equals(this.size, githubContent.size) &&
            Objects.equals(this.owner, githubContent.owner) &&
            Objects.equals(this.path, githubContent.path) &&
            Objects.equals(this.base64Data, githubContent.base64Data);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, sha, propertyClass, repo, size, owner, path, base64Data);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GithubContent {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    sha: ").append(toIndentedString(sha)).append("\n");
        sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
        sb.append("    repo: ").append(toIndentedString(repo)).append("\n");
        sb.append("    size: ").append(toIndentedString(size)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    base64Data: ").append(toIndentedString(base64Data)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

