/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.GithubRepositorylinks;
import org.openapitools.model.GithubRepositorypermissions;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * GithubRepository
 */
@JsonPropertyOrder({
  GithubRepository.JSON_PROPERTY_PROPERTY_CLASS,
  GithubRepository.JSON_PROPERTY_LINKS,
  GithubRepository.JSON_PROPERTY_DEFAULT_BRANCH,
  GithubRepository.JSON_PROPERTY_DESCRIPTION,
  GithubRepository.JSON_PROPERTY_NAME,
  GithubRepository.JSON_PROPERTY_PERMISSIONS,
  GithubRepository.JSON_PROPERTY_PRIVATE,
  GithubRepository.JSON_PROPERTY_FULL_NAME
})
@JsonTypeName("GithubRepository")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-05-10T02:40:03.838053081Z[Etc/UTC]", comments = "Generator version: 7.12.0")
@Introspected
public class GithubRepository {
    public static final String JSON_PROPERTY_PROPERTY_CLASS = "_class";
    private String propertyClass;

    public static final String JSON_PROPERTY_LINKS = "_links";
    private GithubRepositorylinks links;

    public static final String JSON_PROPERTY_DEFAULT_BRANCH = "defaultBranch";
    private String defaultBranch;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
    private GithubRepositorypermissions permissions;

    public static final String JSON_PROPERTY_PRIVATE = "private";
    private Boolean _private;

    public static final String JSON_PROPERTY_FULL_NAME = "fullName";
    private String fullName;

    public GithubRepository() {
    }

    public GithubRepository propertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
        return this;
    }

    /**
     * Get propertyClass
     * @return propertyClass
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPropertyClass() {
        return propertyClass;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPropertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
    }

    public GithubRepository links(GithubRepositorylinks links) {
        this.links = links;
        return this;
    }

    /**
     * Get links
     * @return links
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public GithubRepositorylinks getLinks() {
        return links;
    }

    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLinks(GithubRepositorylinks links) {
        this.links = links;
    }

    public GithubRepository defaultBranch(String defaultBranch) {
        this.defaultBranch = defaultBranch;
        return this;
    }

    /**
     * Get defaultBranch
     * @return defaultBranch
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEFAULT_BRANCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDefaultBranch() {
        return defaultBranch;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_BRANCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDefaultBranch(String defaultBranch) {
        this.defaultBranch = defaultBranch;
    }

    public GithubRepository description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public GithubRepository name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public GithubRepository permissions(GithubRepositorypermissions permissions) {
        this.permissions = permissions;
        return this;
    }

    /**
     * Get permissions
     * @return permissions
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_PERMISSIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public GithubRepositorypermissions getPermissions() {
        return permissions;
    }

    @JsonProperty(JSON_PROPERTY_PERMISSIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPermissions(GithubRepositorypermissions permissions) {
        this.permissions = permissions;
    }

    public GithubRepository _private(Boolean _private) {
        this._private = _private;
        return this;
    }

    /**
     * Get _private
     * @return _private
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRIVATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getPrivate() {
        return _private;
    }

    @JsonProperty(JSON_PROPERTY_PRIVATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrivate(Boolean _private) {
        this._private = _private;
    }

    public GithubRepository fullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get fullName
     * @return fullName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFullName() {
        return fullName;
    }

    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GithubRepository githubRepository = (GithubRepository) o;
        return Objects.equals(this.propertyClass, githubRepository.propertyClass) &&
            Objects.equals(this.links, githubRepository.links) &&
            Objects.equals(this.defaultBranch, githubRepository.defaultBranch) &&
            Objects.equals(this.description, githubRepository.description) &&
            Objects.equals(this.name, githubRepository.name) &&
            Objects.equals(this.permissions, githubRepository.permissions) &&
            Objects.equals(this._private, githubRepository._private) &&
            Objects.equals(this.fullName, githubRepository.fullName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(propertyClass, links, defaultBranch, description, name, permissions, _private, fullName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GithubRepository {\n");
        sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    defaultBranch: ").append(toIndentedString(defaultBranch)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
        sb.append("    _private: ").append(toIndentedString(_private)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

