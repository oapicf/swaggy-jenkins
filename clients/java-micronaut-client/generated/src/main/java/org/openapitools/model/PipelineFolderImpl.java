/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * PipelineFolderImpl
 */
@JsonPropertyOrder({
  PipelineFolderImpl.JSON_PROPERTY_PROPERTY_CLASS,
  PipelineFolderImpl.JSON_PROPERTY_DISPLAY_NAME,
  PipelineFolderImpl.JSON_PROPERTY_FULL_NAME,
  PipelineFolderImpl.JSON_PROPERTY_NAME,
  PipelineFolderImpl.JSON_PROPERTY_ORGANIZATION,
  PipelineFolderImpl.JSON_PROPERTY_NUMBER_OF_FOLDERS,
  PipelineFolderImpl.JSON_PROPERTY_NUMBER_OF_PIPELINES
})
@JsonTypeName("PipelineFolderImpl")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2025-04-27T08:09:17.647353387Z[Etc/UTC]", comments = "Generator version: 7.12.0")
@Introspected
public class PipelineFolderImpl {
    public static final String JSON_PROPERTY_PROPERTY_CLASS = "_class";
    private String propertyClass;

    public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
    private String displayName;

    public static final String JSON_PROPERTY_FULL_NAME = "fullName";
    private String fullName;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_ORGANIZATION = "organization";
    private String organization;

    public static final String JSON_PROPERTY_NUMBER_OF_FOLDERS = "numberOfFolders";
    private Integer numberOfFolders;

    public static final String JSON_PROPERTY_NUMBER_OF_PIPELINES = "numberOfPipelines";
    private Integer numberOfPipelines;

    public PipelineFolderImpl() {
    }

    public PipelineFolderImpl propertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
        return this;
    }

    /**
     * Get propertyClass
     * @return propertyClass
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPropertyClass() {
        return propertyClass;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPropertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
    }

    public PipelineFolderImpl displayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get displayName
     * @return displayName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDisplayName() {
        return displayName;
    }

    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public PipelineFolderImpl fullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get fullName
     * @return fullName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFullName() {
        return fullName;
    }

    @JsonProperty(JSON_PROPERTY_FULL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public PipelineFolderImpl name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public PipelineFolderImpl organization(String organization) {
        this.organization = organization;
        return this;
    }

    /**
     * Get organization
     * @return organization
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOrganization() {
        return organization;
    }

    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrganization(String organization) {
        this.organization = organization;
    }

    public PipelineFolderImpl numberOfFolders(Integer numberOfFolders) {
        this.numberOfFolders = numberOfFolders;
        return this;
    }

    /**
     * Get numberOfFolders
     * @return numberOfFolders
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NUMBER_OF_FOLDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getNumberOfFolders() {
        return numberOfFolders;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER_OF_FOLDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNumberOfFolders(Integer numberOfFolders) {
        this.numberOfFolders = numberOfFolders;
    }

    public PipelineFolderImpl numberOfPipelines(Integer numberOfPipelines) {
        this.numberOfPipelines = numberOfPipelines;
        return this;
    }

    /**
     * Get numberOfPipelines
     * @return numberOfPipelines
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NUMBER_OF_PIPELINES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getNumberOfPipelines() {
        return numberOfPipelines;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER_OF_PIPELINES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNumberOfPipelines(Integer numberOfPipelines) {
        this.numberOfPipelines = numberOfPipelines;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PipelineFolderImpl pipelineFolderImpl = (PipelineFolderImpl) o;
        return Objects.equals(this.propertyClass, pipelineFolderImpl.propertyClass) &&
            Objects.equals(this.displayName, pipelineFolderImpl.displayName) &&
            Objects.equals(this.fullName, pipelineFolderImpl.fullName) &&
            Objects.equals(this.name, pipelineFolderImpl.name) &&
            Objects.equals(this.organization, pipelineFolderImpl.organization) &&
            Objects.equals(this.numberOfFolders, pipelineFolderImpl.numberOfFolders) &&
            Objects.equals(this.numberOfPipelines, pipelineFolderImpl.numberOfPipelines);
    }

    @Override
    public int hashCode() {
        return Objects.hash(propertyClass, displayName, fullName, name, organization, numberOfFolders, numberOfPipelines);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PipelineFolderImpl {\n");
        sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
        sb.append("    numberOfFolders: ").append(toIndentedString(numberOfFolders)).append("\n");
        sb.append("    numberOfPipelines: ").append(toIndentedString(numberOfPipelines)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

