// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * API version: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi




type BranchImpl struct {

	Class string `json:"_class,omitempty"`

	DisplayName string `json:"displayName,omitempty"`

	EstimatedDurationInMillis int32 `json:"estimatedDurationInMillis,omitempty"`

	FullDisplayName string `json:"fullDisplayName,omitempty"`

	FullName string `json:"fullName,omitempty"`

	Name string `json:"name,omitempty"`

	Organization string `json:"organization,omitempty"`

	Parameters []StringParameterDefinition `json:"parameters,omitempty"`

	Permissions BranchImplpermissions `json:"permissions,omitempty"`

	WeatherScore int32 `json:"weatherScore,omitempty"`

	PullRequest string `json:"pullRequest,omitempty"`

	Links BranchImpllinks `json:"_links,omitempty"`

	LatestRun PipelineRunImpl `json:"latestRun,omitempty"`
}

// AssertBranchImplRequired checks if the required fields are not zero-ed
func AssertBranchImplRequired(obj BranchImpl) error {
	for _, el := range obj.Parameters {
		if err := AssertStringParameterDefinitionRequired(el); err != nil {
			return err
		}
	}
	if err := AssertBranchImplpermissionsRequired(obj.Permissions); err != nil {
		return err
	}
	if err := AssertBranchImpllinksRequired(obj.Links); err != nil {
		return err
	}
	if err := AssertPipelineRunImplRequired(obj.LatestRun); err != nil {
		return err
	}
	return nil
}

// AssertBranchImplConstraints checks if the values respects the defined constraints
func AssertBranchImplConstraints(obj BranchImpl) error {
	for _, el := range obj.Parameters {
		if err := AssertStringParameterDefinitionConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertBranchImplpermissionsConstraints(obj.Permissions); err != nil {
		return err
	}
	if err := AssertBranchImpllinksConstraints(obj.Links); err != nil {
		return err
	}
	if err := AssertPipelineRunImplConstraints(obj.LatestRun); err != nil {
		return err
	}
	return nil
}
