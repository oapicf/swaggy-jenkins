// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * API version: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi




type HudsonMasterComputer struct {

	Class string `json:"_class,omitempty"`

	DisplayName string `json:"displayName,omitempty"`

	Executors []HudsonMasterComputerexecutors `json:"executors,omitempty"`

	Icon string `json:"icon,omitempty"`

	IconClassName string `json:"iconClassName,omitempty"`

	Idle bool `json:"idle,omitempty"`

	JnlpAgent bool `json:"jnlpAgent,omitempty"`

	LaunchSupported bool `json:"launchSupported,omitempty"`

	LoadStatistics Label1 `json:"loadStatistics,omitempty"`

	ManualLaunchAllowed bool `json:"manualLaunchAllowed,omitempty"`

	MonitorData HudsonMasterComputermonitorData `json:"monitorData,omitempty"`

	NumExecutors int32 `json:"numExecutors,omitempty"`

	Offline bool `json:"offline,omitempty"`

	OfflineCause string `json:"offlineCause,omitempty"`

	OfflineCauseReason string `json:"offlineCauseReason,omitempty"`

	TemporarilyOffline bool `json:"temporarilyOffline,omitempty"`
}

// AssertHudsonMasterComputerRequired checks if the required fields are not zero-ed
func AssertHudsonMasterComputerRequired(obj HudsonMasterComputer) error {
	for _, el := range obj.Executors {
		if err := AssertHudsonMasterComputerexecutorsRequired(el); err != nil {
			return err
		}
	}
	if err := AssertLabel1Required(obj.LoadStatistics); err != nil {
		return err
	}
	if err := AssertHudsonMasterComputermonitorDataRequired(obj.MonitorData); err != nil {
		return err
	}
	return nil
}

// AssertHudsonMasterComputerConstraints checks if the values respects the defined constraints
func AssertHudsonMasterComputerConstraints(obj HudsonMasterComputer) error {
	for _, el := range obj.Executors {
		if err := AssertHudsonMasterComputerexecutorsConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertLabel1Constraints(obj.LoadStatistics); err != nil {
		return err
	}
	if err := AssertHudsonMasterComputermonitorDataConstraints(obj.MonitorData); err != nil {
		return err
	}
	return nil
}
