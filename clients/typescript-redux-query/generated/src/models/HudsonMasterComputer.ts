// tslint:disable
/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HudsonMasterComputerexecutors,
    HudsonMasterComputerexecutorsFromJSON,
    HudsonMasterComputerexecutorsToJSON,
    HudsonMasterComputermonitorData,
    HudsonMasterComputermonitorDataFromJSON,
    HudsonMasterComputermonitorDataToJSON,
    Label1,
    Label1FromJSON,
    Label1ToJSON,
} from './';

/**
 * 
 * @export
 * @interface HudsonMasterComputer
 */
export interface HudsonMasterComputer  {
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    _class?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    displayName?: string;
    /**
     * 
     * @type {Array<HudsonMasterComputerexecutors>}
     * @memberof HudsonMasterComputer
     */
    executors?: Array<HudsonMasterComputerexecutors>;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    icon?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    iconClassName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    idle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    jnlpAgent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    launchSupported?: boolean;
    /**
     * 
     * @type {Label1}
     * @memberof HudsonMasterComputer
     */
    loadStatistics?: Label1;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    manualLaunchAllowed?: boolean;
    /**
     * 
     * @type {HudsonMasterComputermonitorData}
     * @memberof HudsonMasterComputer
     */
    monitorData?: HudsonMasterComputermonitorData;
    /**
     * 
     * @type {number}
     * @memberof HudsonMasterComputer
     */
    numExecutors?: number;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    offline?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    offlineCause?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    offlineCauseReason?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    temporarilyOffline?: boolean;
}

export function HudsonMasterComputerFromJSON(json: any): HudsonMasterComputer {
    return {
        '_class': !exists(json, '_class') ? undefined : json['_class'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'executors': !exists(json, 'executors') ? undefined : (json['executors'] as Array<any>).map(HudsonMasterComputerexecutorsFromJSON),
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'iconClassName': !exists(json, 'iconClassName') ? undefined : json['iconClassName'],
        'idle': !exists(json, 'idle') ? undefined : json['idle'],
        'jnlpAgent': !exists(json, 'jnlpAgent') ? undefined : json['jnlpAgent'],
        'launchSupported': !exists(json, 'launchSupported') ? undefined : json['launchSupported'],
        'loadStatistics': !exists(json, 'loadStatistics') ? undefined : Label1FromJSON(json['loadStatistics']),
        'manualLaunchAllowed': !exists(json, 'manualLaunchAllowed') ? undefined : json['manualLaunchAllowed'],
        'monitorData': !exists(json, 'monitorData') ? undefined : HudsonMasterComputermonitorDataFromJSON(json['monitorData']),
        'numExecutors': !exists(json, 'numExecutors') ? undefined : json['numExecutors'],
        'offline': !exists(json, 'offline') ? undefined : json['offline'],
        'offlineCause': !exists(json, 'offlineCause') ? undefined : json['offlineCause'],
        'offlineCauseReason': !exists(json, 'offlineCauseReason') ? undefined : json['offlineCauseReason'],
        'temporarilyOffline': !exists(json, 'temporarilyOffline') ? undefined : json['temporarilyOffline'],
    };
}

export function HudsonMasterComputerToJSON(value?: HudsonMasterComputer): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        '_class': value._class,
        'displayName': value.displayName,
        'executors': value.executors === undefined ? undefined : (value.executors as Array<any>).map(HudsonMasterComputerexecutorsToJSON),
        'icon': value.icon,
        'iconClassName': value.iconClassName,
        'idle': value.idle,
        'jnlpAgent': value.jnlpAgent,
        'launchSupported': value.launchSupported,
        'loadStatistics': Label1ToJSON(value.loadStatistics),
        'manualLaunchAllowed': value.manualLaunchAllowed,
        'monitorData': HudsonMasterComputermonitorDataToJSON(value.monitorData),
        'numExecutors': value.numExecutors,
        'offline': value.offline,
        'offlineCause': value.offlineCause,
        'offlineCauseReason': value.offlineCauseReason,
        'temporarilyOffline': value.temporarilyOffline,
    };
}


