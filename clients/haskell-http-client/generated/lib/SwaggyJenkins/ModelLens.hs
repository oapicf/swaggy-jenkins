{-
   Swaggy Jenkins

   Jenkins API clients generated from Swagger / Open API specification

   OpenAPI Version: 3.0.0
   Swaggy Jenkins API version: 2.0.1-pre.0
   Contact: blah+oapicf@cliffano.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : SwaggyJenkins.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module SwaggyJenkins.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import SwaggyJenkins.Model
import SwaggyJenkins.Core


-- * AllView

-- | 'allViewClass' Lens
allViewClassL :: Lens_' AllView (Maybe Text)
allViewClassL f AllView{..} = (\allViewClass -> AllView { allViewClass, ..} ) <$> f allViewClass
{-# INLINE allViewClassL #-}

-- | 'allViewName' Lens
allViewNameL :: Lens_' AllView (Maybe Text)
allViewNameL f AllView{..} = (\allViewName -> AllView { allViewName, ..} ) <$> f allViewName
{-# INLINE allViewNameL #-}

-- | 'allViewUrl' Lens
allViewUrlL :: Lens_' AllView (Maybe Text)
allViewUrlL f AllView{..} = (\allViewUrl -> AllView { allViewUrl, ..} ) <$> f allViewUrl
{-# INLINE allViewUrlL #-}



-- * BranchImpl

-- | 'branchImplClass' Lens
branchImplClassL :: Lens_' BranchImpl (Maybe Text)
branchImplClassL f BranchImpl{..} = (\branchImplClass -> BranchImpl { branchImplClass, ..} ) <$> f branchImplClass
{-# INLINE branchImplClassL #-}

-- | 'branchImplDisplayName' Lens
branchImplDisplayNameL :: Lens_' BranchImpl (Maybe Text)
branchImplDisplayNameL f BranchImpl{..} = (\branchImplDisplayName -> BranchImpl { branchImplDisplayName, ..} ) <$> f branchImplDisplayName
{-# INLINE branchImplDisplayNameL #-}

-- | 'branchImplEstimatedDurationInMillis' Lens
branchImplEstimatedDurationInMillisL :: Lens_' BranchImpl (Maybe Int)
branchImplEstimatedDurationInMillisL f BranchImpl{..} = (\branchImplEstimatedDurationInMillis -> BranchImpl { branchImplEstimatedDurationInMillis, ..} ) <$> f branchImplEstimatedDurationInMillis
{-# INLINE branchImplEstimatedDurationInMillisL #-}

-- | 'branchImplFullDisplayName' Lens
branchImplFullDisplayNameL :: Lens_' BranchImpl (Maybe Text)
branchImplFullDisplayNameL f BranchImpl{..} = (\branchImplFullDisplayName -> BranchImpl { branchImplFullDisplayName, ..} ) <$> f branchImplFullDisplayName
{-# INLINE branchImplFullDisplayNameL #-}

-- | 'branchImplFullName' Lens
branchImplFullNameL :: Lens_' BranchImpl (Maybe Text)
branchImplFullNameL f BranchImpl{..} = (\branchImplFullName -> BranchImpl { branchImplFullName, ..} ) <$> f branchImplFullName
{-# INLINE branchImplFullNameL #-}

-- | 'branchImplName' Lens
branchImplNameL :: Lens_' BranchImpl (Maybe Text)
branchImplNameL f BranchImpl{..} = (\branchImplName -> BranchImpl { branchImplName, ..} ) <$> f branchImplName
{-# INLINE branchImplNameL #-}

-- | 'branchImplOrganization' Lens
branchImplOrganizationL :: Lens_' BranchImpl (Maybe Text)
branchImplOrganizationL f BranchImpl{..} = (\branchImplOrganization -> BranchImpl { branchImplOrganization, ..} ) <$> f branchImplOrganization
{-# INLINE branchImplOrganizationL #-}

-- | 'branchImplParameters' Lens
branchImplParametersL :: Lens_' BranchImpl (Maybe [StringParameterDefinition])
branchImplParametersL f BranchImpl{..} = (\branchImplParameters -> BranchImpl { branchImplParameters, ..} ) <$> f branchImplParameters
{-# INLINE branchImplParametersL #-}

-- | 'branchImplPermissions' Lens
branchImplPermissionsL :: Lens_' BranchImpl (Maybe BranchImplpermissions)
branchImplPermissionsL f BranchImpl{..} = (\branchImplPermissions -> BranchImpl { branchImplPermissions, ..} ) <$> f branchImplPermissions
{-# INLINE branchImplPermissionsL #-}

-- | 'branchImplWeatherScore' Lens
branchImplWeatherScoreL :: Lens_' BranchImpl (Maybe Int)
branchImplWeatherScoreL f BranchImpl{..} = (\branchImplWeatherScore -> BranchImpl { branchImplWeatherScore, ..} ) <$> f branchImplWeatherScore
{-# INLINE branchImplWeatherScoreL #-}

-- | 'branchImplPullRequest' Lens
branchImplPullRequestL :: Lens_' BranchImpl (Maybe Text)
branchImplPullRequestL f BranchImpl{..} = (\branchImplPullRequest -> BranchImpl { branchImplPullRequest, ..} ) <$> f branchImplPullRequest
{-# INLINE branchImplPullRequestL #-}

-- | 'branchImplLinks' Lens
branchImplLinksL :: Lens_' BranchImpl (Maybe BranchImpllinks)
branchImplLinksL f BranchImpl{..} = (\branchImplLinks -> BranchImpl { branchImplLinks, ..} ) <$> f branchImplLinks
{-# INLINE branchImplLinksL #-}

-- | 'branchImplLatestRun' Lens
branchImplLatestRunL :: Lens_' BranchImpl (Maybe PipelineRunImpl)
branchImplLatestRunL f BranchImpl{..} = (\branchImplLatestRun -> BranchImpl { branchImplLatestRun, ..} ) <$> f branchImplLatestRun
{-# INLINE branchImplLatestRunL #-}



-- * BranchImpllinks

-- | 'branchImpllinksSelf' Lens
branchImpllinksSelfL :: Lens_' BranchImpllinks (Maybe Link)
branchImpllinksSelfL f BranchImpllinks{..} = (\branchImpllinksSelf -> BranchImpllinks { branchImpllinksSelf, ..} ) <$> f branchImpllinksSelf
{-# INLINE branchImpllinksSelfL #-}

-- | 'branchImpllinksActions' Lens
branchImpllinksActionsL :: Lens_' BranchImpllinks (Maybe Link)
branchImpllinksActionsL f BranchImpllinks{..} = (\branchImpllinksActions -> BranchImpllinks { branchImpllinksActions, ..} ) <$> f branchImpllinksActions
{-# INLINE branchImpllinksActionsL #-}

-- | 'branchImpllinksRuns' Lens
branchImpllinksRunsL :: Lens_' BranchImpllinks (Maybe Link)
branchImpllinksRunsL f BranchImpllinks{..} = (\branchImpllinksRuns -> BranchImpllinks { branchImpllinksRuns, ..} ) <$> f branchImpllinksRuns
{-# INLINE branchImpllinksRunsL #-}

-- | 'branchImpllinksQueue' Lens
branchImpllinksQueueL :: Lens_' BranchImpllinks (Maybe Link)
branchImpllinksQueueL f BranchImpllinks{..} = (\branchImpllinksQueue -> BranchImpllinks { branchImpllinksQueue, ..} ) <$> f branchImpllinksQueue
{-# INLINE branchImpllinksQueueL #-}

-- | 'branchImpllinksClass' Lens
branchImpllinksClassL :: Lens_' BranchImpllinks (Maybe Text)
branchImpllinksClassL f BranchImpllinks{..} = (\branchImpllinksClass -> BranchImpllinks { branchImpllinksClass, ..} ) <$> f branchImpllinksClass
{-# INLINE branchImpllinksClassL #-}



-- * BranchImplpermissions

-- | 'branchImplpermissionsCreate' Lens
branchImplpermissionsCreateL :: Lens_' BranchImplpermissions (Maybe Bool)
branchImplpermissionsCreateL f BranchImplpermissions{..} = (\branchImplpermissionsCreate -> BranchImplpermissions { branchImplpermissionsCreate, ..} ) <$> f branchImplpermissionsCreate
{-# INLINE branchImplpermissionsCreateL #-}

-- | 'branchImplpermissionsRead' Lens
branchImplpermissionsReadL :: Lens_' BranchImplpermissions (Maybe Bool)
branchImplpermissionsReadL f BranchImplpermissions{..} = (\branchImplpermissionsRead -> BranchImplpermissions { branchImplpermissionsRead, ..} ) <$> f branchImplpermissionsRead
{-# INLINE branchImplpermissionsReadL #-}

-- | 'branchImplpermissionsStart' Lens
branchImplpermissionsStartL :: Lens_' BranchImplpermissions (Maybe Bool)
branchImplpermissionsStartL f BranchImplpermissions{..} = (\branchImplpermissionsStart -> BranchImplpermissions { branchImplpermissionsStart, ..} ) <$> f branchImplpermissionsStart
{-# INLINE branchImplpermissionsStartL #-}

-- | 'branchImplpermissionsStop' Lens
branchImplpermissionsStopL :: Lens_' BranchImplpermissions (Maybe Bool)
branchImplpermissionsStopL f BranchImplpermissions{..} = (\branchImplpermissionsStop -> BranchImplpermissions { branchImplpermissionsStop, ..} ) <$> f branchImplpermissionsStop
{-# INLINE branchImplpermissionsStopL #-}

-- | 'branchImplpermissionsClass' Lens
branchImplpermissionsClassL :: Lens_' BranchImplpermissions (Maybe Text)
branchImplpermissionsClassL f BranchImplpermissions{..} = (\branchImplpermissionsClass -> BranchImplpermissions { branchImplpermissionsClass, ..} ) <$> f branchImplpermissionsClass
{-# INLINE branchImplpermissionsClassL #-}



-- * CauseAction

-- | 'causeActionClass' Lens
causeActionClassL :: Lens_' CauseAction (Maybe Text)
causeActionClassL f CauseAction{..} = (\causeActionClass -> CauseAction { causeActionClass, ..} ) <$> f causeActionClass
{-# INLINE causeActionClassL #-}

-- | 'causeActionCauses' Lens
causeActionCausesL :: Lens_' CauseAction (Maybe [CauseUserIdCause])
causeActionCausesL f CauseAction{..} = (\causeActionCauses -> CauseAction { causeActionCauses, ..} ) <$> f causeActionCauses
{-# INLINE causeActionCausesL #-}



-- * CauseUserIdCause

-- | 'causeUserIdCauseClass' Lens
causeUserIdCauseClassL :: Lens_' CauseUserIdCause (Maybe Text)
causeUserIdCauseClassL f CauseUserIdCause{..} = (\causeUserIdCauseClass -> CauseUserIdCause { causeUserIdCauseClass, ..} ) <$> f causeUserIdCauseClass
{-# INLINE causeUserIdCauseClassL #-}

-- | 'causeUserIdCauseShortDescription' Lens
causeUserIdCauseShortDescriptionL :: Lens_' CauseUserIdCause (Maybe Text)
causeUserIdCauseShortDescriptionL f CauseUserIdCause{..} = (\causeUserIdCauseShortDescription -> CauseUserIdCause { causeUserIdCauseShortDescription, ..} ) <$> f causeUserIdCauseShortDescription
{-# INLINE causeUserIdCauseShortDescriptionL #-}

-- | 'causeUserIdCauseUserId' Lens
causeUserIdCauseUserIdL :: Lens_' CauseUserIdCause (Maybe Text)
causeUserIdCauseUserIdL f CauseUserIdCause{..} = (\causeUserIdCauseUserId -> CauseUserIdCause { causeUserIdCauseUserId, ..} ) <$> f causeUserIdCauseUserId
{-# INLINE causeUserIdCauseUserIdL #-}

-- | 'causeUserIdCauseUserName' Lens
causeUserIdCauseUserNameL :: Lens_' CauseUserIdCause (Maybe Text)
causeUserIdCauseUserNameL f CauseUserIdCause{..} = (\causeUserIdCauseUserName -> CauseUserIdCause { causeUserIdCauseUserName, ..} ) <$> f causeUserIdCauseUserName
{-# INLINE causeUserIdCauseUserNameL #-}



-- * ClassesByClass

-- | 'classesByClassClasses' Lens
classesByClassClassesL :: Lens_' ClassesByClass (Maybe [Text])
classesByClassClassesL f ClassesByClass{..} = (\classesByClassClasses -> ClassesByClass { classesByClassClasses, ..} ) <$> f classesByClassClasses
{-# INLINE classesByClassClassesL #-}

-- | 'classesByClassClass' Lens
classesByClassClassL :: Lens_' ClassesByClass (Maybe Text)
classesByClassClassL f ClassesByClass{..} = (\classesByClassClass -> ClassesByClass { classesByClassClass, ..} ) <$> f classesByClassClass
{-# INLINE classesByClassClassL #-}



-- * ClockDifference

-- | 'clockDifferenceClass' Lens
clockDifferenceClassL :: Lens_' ClockDifference (Maybe Text)
clockDifferenceClassL f ClockDifference{..} = (\clockDifferenceClass -> ClockDifference { clockDifferenceClass, ..} ) <$> f clockDifferenceClass
{-# INLINE clockDifferenceClassL #-}

-- | 'clockDifferenceDiff' Lens
clockDifferenceDiffL :: Lens_' ClockDifference (Maybe Int)
clockDifferenceDiffL f ClockDifference{..} = (\clockDifferenceDiff -> ClockDifference { clockDifferenceDiff, ..} ) <$> f clockDifferenceDiff
{-# INLINE clockDifferenceDiffL #-}



-- * ComputerSet

-- | 'computerSetClass' Lens
computerSetClassL :: Lens_' ComputerSet (Maybe Text)
computerSetClassL f ComputerSet{..} = (\computerSetClass -> ComputerSet { computerSetClass, ..} ) <$> f computerSetClass
{-# INLINE computerSetClassL #-}

-- | 'computerSetBusyExecutors' Lens
computerSetBusyExecutorsL :: Lens_' ComputerSet (Maybe Int)
computerSetBusyExecutorsL f ComputerSet{..} = (\computerSetBusyExecutors -> ComputerSet { computerSetBusyExecutors, ..} ) <$> f computerSetBusyExecutors
{-# INLINE computerSetBusyExecutorsL #-}

-- | 'computerSetComputer' Lens
computerSetComputerL :: Lens_' ComputerSet (Maybe [HudsonMasterComputer])
computerSetComputerL f ComputerSet{..} = (\computerSetComputer -> ComputerSet { computerSetComputer, ..} ) <$> f computerSetComputer
{-# INLINE computerSetComputerL #-}

-- | 'computerSetDisplayName' Lens
computerSetDisplayNameL :: Lens_' ComputerSet (Maybe Text)
computerSetDisplayNameL f ComputerSet{..} = (\computerSetDisplayName -> ComputerSet { computerSetDisplayName, ..} ) <$> f computerSetDisplayName
{-# INLINE computerSetDisplayNameL #-}

-- | 'computerSetTotalExecutors' Lens
computerSetTotalExecutorsL :: Lens_' ComputerSet (Maybe Int)
computerSetTotalExecutorsL f ComputerSet{..} = (\computerSetTotalExecutors -> ComputerSet { computerSetTotalExecutors, ..} ) <$> f computerSetTotalExecutors
{-# INLINE computerSetTotalExecutorsL #-}



-- * DefaultCrumbIssuer

-- | 'defaultCrumbIssuerClass' Lens
defaultCrumbIssuerClassL :: Lens_' DefaultCrumbIssuer (Maybe Text)
defaultCrumbIssuerClassL f DefaultCrumbIssuer{..} = (\defaultCrumbIssuerClass -> DefaultCrumbIssuer { defaultCrumbIssuerClass, ..} ) <$> f defaultCrumbIssuerClass
{-# INLINE defaultCrumbIssuerClassL #-}

-- | 'defaultCrumbIssuerCrumb' Lens
defaultCrumbIssuerCrumbL :: Lens_' DefaultCrumbIssuer (Maybe Text)
defaultCrumbIssuerCrumbL f DefaultCrumbIssuer{..} = (\defaultCrumbIssuerCrumb -> DefaultCrumbIssuer { defaultCrumbIssuerCrumb, ..} ) <$> f defaultCrumbIssuerCrumb
{-# INLINE defaultCrumbIssuerCrumbL #-}

-- | 'defaultCrumbIssuerCrumbRequestField' Lens
defaultCrumbIssuerCrumbRequestFieldL :: Lens_' DefaultCrumbIssuer (Maybe Text)
defaultCrumbIssuerCrumbRequestFieldL f DefaultCrumbIssuer{..} = (\defaultCrumbIssuerCrumbRequestField -> DefaultCrumbIssuer { defaultCrumbIssuerCrumbRequestField, ..} ) <$> f defaultCrumbIssuerCrumbRequestField
{-# INLINE defaultCrumbIssuerCrumbRequestFieldL #-}



-- * DiskSpaceMonitorDescriptorDiskSpace

-- | 'diskSpaceMonitorDescriptorDiskSpaceClass' Lens
diskSpaceMonitorDescriptorDiskSpaceClassL :: Lens_' DiskSpaceMonitorDescriptorDiskSpace (Maybe Text)
diskSpaceMonitorDescriptorDiskSpaceClassL f DiskSpaceMonitorDescriptorDiskSpace{..} = (\diskSpaceMonitorDescriptorDiskSpaceClass -> DiskSpaceMonitorDescriptorDiskSpace { diskSpaceMonitorDescriptorDiskSpaceClass, ..} ) <$> f diskSpaceMonitorDescriptorDiskSpaceClass
{-# INLINE diskSpaceMonitorDescriptorDiskSpaceClassL #-}

-- | 'diskSpaceMonitorDescriptorDiskSpaceTimestamp' Lens
diskSpaceMonitorDescriptorDiskSpaceTimestampL :: Lens_' DiskSpaceMonitorDescriptorDiskSpace (Maybe Int)
diskSpaceMonitorDescriptorDiskSpaceTimestampL f DiskSpaceMonitorDescriptorDiskSpace{..} = (\diskSpaceMonitorDescriptorDiskSpaceTimestamp -> DiskSpaceMonitorDescriptorDiskSpace { diskSpaceMonitorDescriptorDiskSpaceTimestamp, ..} ) <$> f diskSpaceMonitorDescriptorDiskSpaceTimestamp
{-# INLINE diskSpaceMonitorDescriptorDiskSpaceTimestampL #-}

-- | 'diskSpaceMonitorDescriptorDiskSpacePath' Lens
diskSpaceMonitorDescriptorDiskSpacePathL :: Lens_' DiskSpaceMonitorDescriptorDiskSpace (Maybe Text)
diskSpaceMonitorDescriptorDiskSpacePathL f DiskSpaceMonitorDescriptorDiskSpace{..} = (\diskSpaceMonitorDescriptorDiskSpacePath -> DiskSpaceMonitorDescriptorDiskSpace { diskSpaceMonitorDescriptorDiskSpacePath, ..} ) <$> f diskSpaceMonitorDescriptorDiskSpacePath
{-# INLINE diskSpaceMonitorDescriptorDiskSpacePathL #-}

-- | 'diskSpaceMonitorDescriptorDiskSpaceSize' Lens
diskSpaceMonitorDescriptorDiskSpaceSizeL :: Lens_' DiskSpaceMonitorDescriptorDiskSpace (Maybe Int)
diskSpaceMonitorDescriptorDiskSpaceSizeL f DiskSpaceMonitorDescriptorDiskSpace{..} = (\diskSpaceMonitorDescriptorDiskSpaceSize -> DiskSpaceMonitorDescriptorDiskSpace { diskSpaceMonitorDescriptorDiskSpaceSize, ..} ) <$> f diskSpaceMonitorDescriptorDiskSpaceSize
{-# INLINE diskSpaceMonitorDescriptorDiskSpaceSizeL #-}



-- * EmptyChangeLogSet

-- | 'emptyChangeLogSetClass' Lens
emptyChangeLogSetClassL :: Lens_' EmptyChangeLogSet (Maybe Text)
emptyChangeLogSetClassL f EmptyChangeLogSet{..} = (\emptyChangeLogSetClass -> EmptyChangeLogSet { emptyChangeLogSetClass, ..} ) <$> f emptyChangeLogSetClass
{-# INLINE emptyChangeLogSetClassL #-}

-- | 'emptyChangeLogSetKind' Lens
emptyChangeLogSetKindL :: Lens_' EmptyChangeLogSet (Maybe Text)
emptyChangeLogSetKindL f EmptyChangeLogSet{..} = (\emptyChangeLogSetKind -> EmptyChangeLogSet { emptyChangeLogSetKind, ..} ) <$> f emptyChangeLogSetKind
{-# INLINE emptyChangeLogSetKindL #-}



-- * ExtensionClassContainerImpl1

-- | 'extensionClassContainerImpl1Class' Lens
extensionClassContainerImpl1ClassL :: Lens_' ExtensionClassContainerImpl1 (Maybe Text)
extensionClassContainerImpl1ClassL f ExtensionClassContainerImpl1{..} = (\extensionClassContainerImpl1Class -> ExtensionClassContainerImpl1 { extensionClassContainerImpl1Class, ..} ) <$> f extensionClassContainerImpl1Class
{-# INLINE extensionClassContainerImpl1ClassL #-}

-- | 'extensionClassContainerImpl1Links' Lens
extensionClassContainerImpl1LinksL :: Lens_' ExtensionClassContainerImpl1 (Maybe ExtensionClassContainerImpl1links)
extensionClassContainerImpl1LinksL f ExtensionClassContainerImpl1{..} = (\extensionClassContainerImpl1Links -> ExtensionClassContainerImpl1 { extensionClassContainerImpl1Links, ..} ) <$> f extensionClassContainerImpl1Links
{-# INLINE extensionClassContainerImpl1LinksL #-}

-- | 'extensionClassContainerImpl1Map' Lens
extensionClassContainerImpl1MapL :: Lens_' ExtensionClassContainerImpl1 (Maybe ExtensionClassContainerImpl1map)
extensionClassContainerImpl1MapL f ExtensionClassContainerImpl1{..} = (\extensionClassContainerImpl1Map -> ExtensionClassContainerImpl1 { extensionClassContainerImpl1Map, ..} ) <$> f extensionClassContainerImpl1Map
{-# INLINE extensionClassContainerImpl1MapL #-}



-- * ExtensionClassContainerImpl1links

-- | 'extensionClassContainerImpl1linksSelf' Lens
extensionClassContainerImpl1linksSelfL :: Lens_' ExtensionClassContainerImpl1links (Maybe Link)
extensionClassContainerImpl1linksSelfL f ExtensionClassContainerImpl1links{..} = (\extensionClassContainerImpl1linksSelf -> ExtensionClassContainerImpl1links { extensionClassContainerImpl1linksSelf, ..} ) <$> f extensionClassContainerImpl1linksSelf
{-# INLINE extensionClassContainerImpl1linksSelfL #-}

-- | 'extensionClassContainerImpl1linksClass' Lens
extensionClassContainerImpl1linksClassL :: Lens_' ExtensionClassContainerImpl1links (Maybe Text)
extensionClassContainerImpl1linksClassL f ExtensionClassContainerImpl1links{..} = (\extensionClassContainerImpl1linksClass -> ExtensionClassContainerImpl1links { extensionClassContainerImpl1linksClass, ..} ) <$> f extensionClassContainerImpl1linksClass
{-# INLINE extensionClassContainerImpl1linksClassL #-}



-- * ExtensionClassContainerImpl1map

-- | 'extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl' Lens
extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImplL :: Lens_' ExtensionClassContainerImpl1map (Maybe ExtensionClassImpl)
extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImplL f ExtensionClassContainerImpl1map{..} = (\extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl -> ExtensionClassContainerImpl1map { extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl, ..} ) <$> f extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl
{-# INLINE extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestPipelineImplL #-}

-- | 'extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl' Lens
extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImplL :: Lens_' ExtensionClassContainerImpl1map (Maybe ExtensionClassImpl)
extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImplL f ExtensionClassContainerImpl1map{..} = (\extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl -> ExtensionClassContainerImpl1map { extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl, ..} ) <$> f extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl
{-# INLINE extensionClassContainerImpl1mapIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImplL #-}

-- | 'extensionClassContainerImpl1mapClass' Lens
extensionClassContainerImpl1mapClassL :: Lens_' ExtensionClassContainerImpl1map (Maybe Text)
extensionClassContainerImpl1mapClassL f ExtensionClassContainerImpl1map{..} = (\extensionClassContainerImpl1mapClass -> ExtensionClassContainerImpl1map { extensionClassContainerImpl1mapClass, ..} ) <$> f extensionClassContainerImpl1mapClass
{-# INLINE extensionClassContainerImpl1mapClassL #-}



-- * ExtensionClassImpl

-- | 'extensionClassImplClass' Lens
extensionClassImplClassL :: Lens_' ExtensionClassImpl (Maybe Text)
extensionClassImplClassL f ExtensionClassImpl{..} = (\extensionClassImplClass -> ExtensionClassImpl { extensionClassImplClass, ..} ) <$> f extensionClassImplClass
{-# INLINE extensionClassImplClassL #-}

-- | 'extensionClassImplLinks' Lens
extensionClassImplLinksL :: Lens_' ExtensionClassImpl (Maybe ExtensionClassImpllinks)
extensionClassImplLinksL f ExtensionClassImpl{..} = (\extensionClassImplLinks -> ExtensionClassImpl { extensionClassImplLinks, ..} ) <$> f extensionClassImplLinks
{-# INLINE extensionClassImplLinksL #-}

-- | 'extensionClassImplClasses' Lens
extensionClassImplClassesL :: Lens_' ExtensionClassImpl (Maybe [Text])
extensionClassImplClassesL f ExtensionClassImpl{..} = (\extensionClassImplClasses -> ExtensionClassImpl { extensionClassImplClasses, ..} ) <$> f extensionClassImplClasses
{-# INLINE extensionClassImplClassesL #-}



-- * ExtensionClassImpllinks

-- | 'extensionClassImpllinksSelf' Lens
extensionClassImpllinksSelfL :: Lens_' ExtensionClassImpllinks (Maybe Link)
extensionClassImpllinksSelfL f ExtensionClassImpllinks{..} = (\extensionClassImpllinksSelf -> ExtensionClassImpllinks { extensionClassImpllinksSelf, ..} ) <$> f extensionClassImpllinksSelf
{-# INLINE extensionClassImpllinksSelfL #-}

-- | 'extensionClassImpllinksClass' Lens
extensionClassImpllinksClassL :: Lens_' ExtensionClassImpllinks (Maybe Text)
extensionClassImpllinksClassL f ExtensionClassImpllinks{..} = (\extensionClassImpllinksClass -> ExtensionClassImpllinks { extensionClassImpllinksClass, ..} ) <$> f extensionClassImpllinksClass
{-# INLINE extensionClassImpllinksClassL #-}



-- * FavoriteImpl

-- | 'favoriteImplClass' Lens
favoriteImplClassL :: Lens_' FavoriteImpl (Maybe Text)
favoriteImplClassL f FavoriteImpl{..} = (\favoriteImplClass -> FavoriteImpl { favoriteImplClass, ..} ) <$> f favoriteImplClass
{-# INLINE favoriteImplClassL #-}

-- | 'favoriteImplLinks' Lens
favoriteImplLinksL :: Lens_' FavoriteImpl (Maybe FavoriteImpllinks)
favoriteImplLinksL f FavoriteImpl{..} = (\favoriteImplLinks -> FavoriteImpl { favoriteImplLinks, ..} ) <$> f favoriteImplLinks
{-# INLINE favoriteImplLinksL #-}

-- | 'favoriteImplItem' Lens
favoriteImplItemL :: Lens_' FavoriteImpl (Maybe PipelineImpl)
favoriteImplItemL f FavoriteImpl{..} = (\favoriteImplItem -> FavoriteImpl { favoriteImplItem, ..} ) <$> f favoriteImplItem
{-# INLINE favoriteImplItemL #-}



-- * FavoriteImpllinks

-- | 'favoriteImpllinksSelf' Lens
favoriteImpllinksSelfL :: Lens_' FavoriteImpllinks (Maybe Link)
favoriteImpllinksSelfL f FavoriteImpllinks{..} = (\favoriteImpllinksSelf -> FavoriteImpllinks { favoriteImpllinksSelf, ..} ) <$> f favoriteImpllinksSelf
{-# INLINE favoriteImpllinksSelfL #-}

-- | 'favoriteImpllinksClass' Lens
favoriteImpllinksClassL :: Lens_' FavoriteImpllinks (Maybe Text)
favoriteImpllinksClassL f FavoriteImpllinks{..} = (\favoriteImpllinksClass -> FavoriteImpllinks { favoriteImpllinksClass, ..} ) <$> f favoriteImpllinksClass
{-# INLINE favoriteImpllinksClassL #-}



-- * FreeStyleBuild

-- | 'freeStyleBuildClass' Lens
freeStyleBuildClassL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildClassL f FreeStyleBuild{..} = (\freeStyleBuildClass -> FreeStyleBuild { freeStyleBuildClass, ..} ) <$> f freeStyleBuildClass
{-# INLINE freeStyleBuildClassL #-}

-- | 'freeStyleBuildNumber' Lens
freeStyleBuildNumberL :: Lens_' FreeStyleBuild (Maybe Int)
freeStyleBuildNumberL f FreeStyleBuild{..} = (\freeStyleBuildNumber -> FreeStyleBuild { freeStyleBuildNumber, ..} ) <$> f freeStyleBuildNumber
{-# INLINE freeStyleBuildNumberL #-}

-- | 'freeStyleBuildUrl' Lens
freeStyleBuildUrlL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildUrlL f FreeStyleBuild{..} = (\freeStyleBuildUrl -> FreeStyleBuild { freeStyleBuildUrl, ..} ) <$> f freeStyleBuildUrl
{-# INLINE freeStyleBuildUrlL #-}

-- | 'freeStyleBuildActions' Lens
freeStyleBuildActionsL :: Lens_' FreeStyleBuild (Maybe [CauseAction])
freeStyleBuildActionsL f FreeStyleBuild{..} = (\freeStyleBuildActions -> FreeStyleBuild { freeStyleBuildActions, ..} ) <$> f freeStyleBuildActions
{-# INLINE freeStyleBuildActionsL #-}

-- | 'freeStyleBuildBuilding' Lens
freeStyleBuildBuildingL :: Lens_' FreeStyleBuild (Maybe Bool)
freeStyleBuildBuildingL f FreeStyleBuild{..} = (\freeStyleBuildBuilding -> FreeStyleBuild { freeStyleBuildBuilding, ..} ) <$> f freeStyleBuildBuilding
{-# INLINE freeStyleBuildBuildingL #-}

-- | 'freeStyleBuildDescription' Lens
freeStyleBuildDescriptionL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildDescriptionL f FreeStyleBuild{..} = (\freeStyleBuildDescription -> FreeStyleBuild { freeStyleBuildDescription, ..} ) <$> f freeStyleBuildDescription
{-# INLINE freeStyleBuildDescriptionL #-}

-- | 'freeStyleBuildDisplayName' Lens
freeStyleBuildDisplayNameL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildDisplayNameL f FreeStyleBuild{..} = (\freeStyleBuildDisplayName -> FreeStyleBuild { freeStyleBuildDisplayName, ..} ) <$> f freeStyleBuildDisplayName
{-# INLINE freeStyleBuildDisplayNameL #-}

-- | 'freeStyleBuildDuration' Lens
freeStyleBuildDurationL :: Lens_' FreeStyleBuild (Maybe Int)
freeStyleBuildDurationL f FreeStyleBuild{..} = (\freeStyleBuildDuration -> FreeStyleBuild { freeStyleBuildDuration, ..} ) <$> f freeStyleBuildDuration
{-# INLINE freeStyleBuildDurationL #-}

-- | 'freeStyleBuildEstimatedDuration' Lens
freeStyleBuildEstimatedDurationL :: Lens_' FreeStyleBuild (Maybe Int)
freeStyleBuildEstimatedDurationL f FreeStyleBuild{..} = (\freeStyleBuildEstimatedDuration -> FreeStyleBuild { freeStyleBuildEstimatedDuration, ..} ) <$> f freeStyleBuildEstimatedDuration
{-# INLINE freeStyleBuildEstimatedDurationL #-}

-- | 'freeStyleBuildExecutor' Lens
freeStyleBuildExecutorL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildExecutorL f FreeStyleBuild{..} = (\freeStyleBuildExecutor -> FreeStyleBuild { freeStyleBuildExecutor, ..} ) <$> f freeStyleBuildExecutor
{-# INLINE freeStyleBuildExecutorL #-}

-- | 'freeStyleBuildFullDisplayName' Lens
freeStyleBuildFullDisplayNameL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildFullDisplayNameL f FreeStyleBuild{..} = (\freeStyleBuildFullDisplayName -> FreeStyleBuild { freeStyleBuildFullDisplayName, ..} ) <$> f freeStyleBuildFullDisplayName
{-# INLINE freeStyleBuildFullDisplayNameL #-}

-- | 'freeStyleBuildId' Lens
freeStyleBuildIdL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildIdL f FreeStyleBuild{..} = (\freeStyleBuildId -> FreeStyleBuild { freeStyleBuildId, ..} ) <$> f freeStyleBuildId
{-# INLINE freeStyleBuildIdL #-}

-- | 'freeStyleBuildKeepLog' Lens
freeStyleBuildKeepLogL :: Lens_' FreeStyleBuild (Maybe Bool)
freeStyleBuildKeepLogL f FreeStyleBuild{..} = (\freeStyleBuildKeepLog -> FreeStyleBuild { freeStyleBuildKeepLog, ..} ) <$> f freeStyleBuildKeepLog
{-# INLINE freeStyleBuildKeepLogL #-}

-- | 'freeStyleBuildQueueId' Lens
freeStyleBuildQueueIdL :: Lens_' FreeStyleBuild (Maybe Int)
freeStyleBuildQueueIdL f FreeStyleBuild{..} = (\freeStyleBuildQueueId -> FreeStyleBuild { freeStyleBuildQueueId, ..} ) <$> f freeStyleBuildQueueId
{-# INLINE freeStyleBuildQueueIdL #-}

-- | 'freeStyleBuildResult' Lens
freeStyleBuildResultL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildResultL f FreeStyleBuild{..} = (\freeStyleBuildResult -> FreeStyleBuild { freeStyleBuildResult, ..} ) <$> f freeStyleBuildResult
{-# INLINE freeStyleBuildResultL #-}

-- | 'freeStyleBuildTimestamp' Lens
freeStyleBuildTimestampL :: Lens_' FreeStyleBuild (Maybe Int)
freeStyleBuildTimestampL f FreeStyleBuild{..} = (\freeStyleBuildTimestamp -> FreeStyleBuild { freeStyleBuildTimestamp, ..} ) <$> f freeStyleBuildTimestamp
{-# INLINE freeStyleBuildTimestampL #-}

-- | 'freeStyleBuildBuiltOn' Lens
freeStyleBuildBuiltOnL :: Lens_' FreeStyleBuild (Maybe Text)
freeStyleBuildBuiltOnL f FreeStyleBuild{..} = (\freeStyleBuildBuiltOn -> FreeStyleBuild { freeStyleBuildBuiltOn, ..} ) <$> f freeStyleBuildBuiltOn
{-# INLINE freeStyleBuildBuiltOnL #-}

-- | 'freeStyleBuildChangeSet' Lens
freeStyleBuildChangeSetL :: Lens_' FreeStyleBuild (Maybe EmptyChangeLogSet)
freeStyleBuildChangeSetL f FreeStyleBuild{..} = (\freeStyleBuildChangeSet -> FreeStyleBuild { freeStyleBuildChangeSet, ..} ) <$> f freeStyleBuildChangeSet
{-# INLINE freeStyleBuildChangeSetL #-}



-- * FreeStyleProject

-- | 'freeStyleProjectClass' Lens
freeStyleProjectClassL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectClassL f FreeStyleProject{..} = (\freeStyleProjectClass -> FreeStyleProject { freeStyleProjectClass, ..} ) <$> f freeStyleProjectClass
{-# INLINE freeStyleProjectClassL #-}

-- | 'freeStyleProjectName' Lens
freeStyleProjectNameL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectNameL f FreeStyleProject{..} = (\freeStyleProjectName -> FreeStyleProject { freeStyleProjectName, ..} ) <$> f freeStyleProjectName
{-# INLINE freeStyleProjectNameL #-}

-- | 'freeStyleProjectUrl' Lens
freeStyleProjectUrlL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectUrlL f FreeStyleProject{..} = (\freeStyleProjectUrl -> FreeStyleProject { freeStyleProjectUrl, ..} ) <$> f freeStyleProjectUrl
{-# INLINE freeStyleProjectUrlL #-}

-- | 'freeStyleProjectColor' Lens
freeStyleProjectColorL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectColorL f FreeStyleProject{..} = (\freeStyleProjectColor -> FreeStyleProject { freeStyleProjectColor, ..} ) <$> f freeStyleProjectColor
{-# INLINE freeStyleProjectColorL #-}

-- | 'freeStyleProjectActions' Lens
freeStyleProjectActionsL :: Lens_' FreeStyleProject (Maybe [FreeStyleProjectactions])
freeStyleProjectActionsL f FreeStyleProject{..} = (\freeStyleProjectActions -> FreeStyleProject { freeStyleProjectActions, ..} ) <$> f freeStyleProjectActions
{-# INLINE freeStyleProjectActionsL #-}

-- | 'freeStyleProjectDescription' Lens
freeStyleProjectDescriptionL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectDescriptionL f FreeStyleProject{..} = (\freeStyleProjectDescription -> FreeStyleProject { freeStyleProjectDescription, ..} ) <$> f freeStyleProjectDescription
{-# INLINE freeStyleProjectDescriptionL #-}

-- | 'freeStyleProjectDisplayName' Lens
freeStyleProjectDisplayNameL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectDisplayNameL f FreeStyleProject{..} = (\freeStyleProjectDisplayName -> FreeStyleProject { freeStyleProjectDisplayName, ..} ) <$> f freeStyleProjectDisplayName
{-# INLINE freeStyleProjectDisplayNameL #-}

-- | 'freeStyleProjectDisplayNameOrNull' Lens
freeStyleProjectDisplayNameOrNullL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectDisplayNameOrNullL f FreeStyleProject{..} = (\freeStyleProjectDisplayNameOrNull -> FreeStyleProject { freeStyleProjectDisplayNameOrNull, ..} ) <$> f freeStyleProjectDisplayNameOrNull
{-# INLINE freeStyleProjectDisplayNameOrNullL #-}

-- | 'freeStyleProjectFullDisplayName' Lens
freeStyleProjectFullDisplayNameL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectFullDisplayNameL f FreeStyleProject{..} = (\freeStyleProjectFullDisplayName -> FreeStyleProject { freeStyleProjectFullDisplayName, ..} ) <$> f freeStyleProjectFullDisplayName
{-# INLINE freeStyleProjectFullDisplayNameL #-}

-- | 'freeStyleProjectFullName' Lens
freeStyleProjectFullNameL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectFullNameL f FreeStyleProject{..} = (\freeStyleProjectFullName -> FreeStyleProject { freeStyleProjectFullName, ..} ) <$> f freeStyleProjectFullName
{-# INLINE freeStyleProjectFullNameL #-}

-- | 'freeStyleProjectBuildable' Lens
freeStyleProjectBuildableL :: Lens_' FreeStyleProject (Maybe Bool)
freeStyleProjectBuildableL f FreeStyleProject{..} = (\freeStyleProjectBuildable -> FreeStyleProject { freeStyleProjectBuildable, ..} ) <$> f freeStyleProjectBuildable
{-# INLINE freeStyleProjectBuildableL #-}

-- | 'freeStyleProjectBuilds' Lens
freeStyleProjectBuildsL :: Lens_' FreeStyleProject (Maybe [FreeStyleBuild])
freeStyleProjectBuildsL f FreeStyleProject{..} = (\freeStyleProjectBuilds -> FreeStyleProject { freeStyleProjectBuilds, ..} ) <$> f freeStyleProjectBuilds
{-# INLINE freeStyleProjectBuildsL #-}

-- | 'freeStyleProjectFirstBuild' Lens
freeStyleProjectFirstBuildL :: Lens_' FreeStyleProject (Maybe FreeStyleBuild)
freeStyleProjectFirstBuildL f FreeStyleProject{..} = (\freeStyleProjectFirstBuild -> FreeStyleProject { freeStyleProjectFirstBuild, ..} ) <$> f freeStyleProjectFirstBuild
{-# INLINE freeStyleProjectFirstBuildL #-}

-- | 'freeStyleProjectHealthReport' Lens
freeStyleProjectHealthReportL :: Lens_' FreeStyleProject (Maybe [FreeStyleProjecthealthReport])
freeStyleProjectHealthReportL f FreeStyleProject{..} = (\freeStyleProjectHealthReport -> FreeStyleProject { freeStyleProjectHealthReport, ..} ) <$> f freeStyleProjectHealthReport
{-# INLINE freeStyleProjectHealthReportL #-}

-- | 'freeStyleProjectInQueue' Lens
freeStyleProjectInQueueL :: Lens_' FreeStyleProject (Maybe Bool)
freeStyleProjectInQueueL f FreeStyleProject{..} = (\freeStyleProjectInQueue -> FreeStyleProject { freeStyleProjectInQueue, ..} ) <$> f freeStyleProjectInQueue
{-# INLINE freeStyleProjectInQueueL #-}

-- | 'freeStyleProjectKeepDependencies' Lens
freeStyleProjectKeepDependenciesL :: Lens_' FreeStyleProject (Maybe Bool)
freeStyleProjectKeepDependenciesL f FreeStyleProject{..} = (\freeStyleProjectKeepDependencies -> FreeStyleProject { freeStyleProjectKeepDependencies, ..} ) <$> f freeStyleProjectKeepDependencies
{-# INLINE freeStyleProjectKeepDependenciesL #-}

-- | 'freeStyleProjectLastBuild' Lens
freeStyleProjectLastBuildL :: Lens_' FreeStyleProject (Maybe FreeStyleBuild)
freeStyleProjectLastBuildL f FreeStyleProject{..} = (\freeStyleProjectLastBuild -> FreeStyleProject { freeStyleProjectLastBuild, ..} ) <$> f freeStyleProjectLastBuild
{-# INLINE freeStyleProjectLastBuildL #-}

-- | 'freeStyleProjectLastCompletedBuild' Lens
freeStyleProjectLastCompletedBuildL :: Lens_' FreeStyleProject (Maybe FreeStyleBuild)
freeStyleProjectLastCompletedBuildL f FreeStyleProject{..} = (\freeStyleProjectLastCompletedBuild -> FreeStyleProject { freeStyleProjectLastCompletedBuild, ..} ) <$> f freeStyleProjectLastCompletedBuild
{-# INLINE freeStyleProjectLastCompletedBuildL #-}

-- | 'freeStyleProjectLastFailedBuild' Lens
freeStyleProjectLastFailedBuildL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectLastFailedBuildL f FreeStyleProject{..} = (\freeStyleProjectLastFailedBuild -> FreeStyleProject { freeStyleProjectLastFailedBuild, ..} ) <$> f freeStyleProjectLastFailedBuild
{-# INLINE freeStyleProjectLastFailedBuildL #-}

-- | 'freeStyleProjectLastStableBuild' Lens
freeStyleProjectLastStableBuildL :: Lens_' FreeStyleProject (Maybe FreeStyleBuild)
freeStyleProjectLastStableBuildL f FreeStyleProject{..} = (\freeStyleProjectLastStableBuild -> FreeStyleProject { freeStyleProjectLastStableBuild, ..} ) <$> f freeStyleProjectLastStableBuild
{-# INLINE freeStyleProjectLastStableBuildL #-}

-- | 'freeStyleProjectLastSuccessfulBuild' Lens
freeStyleProjectLastSuccessfulBuildL :: Lens_' FreeStyleProject (Maybe FreeStyleBuild)
freeStyleProjectLastSuccessfulBuildL f FreeStyleProject{..} = (\freeStyleProjectLastSuccessfulBuild -> FreeStyleProject { freeStyleProjectLastSuccessfulBuild, ..} ) <$> f freeStyleProjectLastSuccessfulBuild
{-# INLINE freeStyleProjectLastSuccessfulBuildL #-}

-- | 'freeStyleProjectLastUnstableBuild' Lens
freeStyleProjectLastUnstableBuildL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectLastUnstableBuildL f FreeStyleProject{..} = (\freeStyleProjectLastUnstableBuild -> FreeStyleProject { freeStyleProjectLastUnstableBuild, ..} ) <$> f freeStyleProjectLastUnstableBuild
{-# INLINE freeStyleProjectLastUnstableBuildL #-}

-- | 'freeStyleProjectLastUnsuccessfulBuild' Lens
freeStyleProjectLastUnsuccessfulBuildL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectLastUnsuccessfulBuildL f FreeStyleProject{..} = (\freeStyleProjectLastUnsuccessfulBuild -> FreeStyleProject { freeStyleProjectLastUnsuccessfulBuild, ..} ) <$> f freeStyleProjectLastUnsuccessfulBuild
{-# INLINE freeStyleProjectLastUnsuccessfulBuildL #-}

-- | 'freeStyleProjectNextBuildNumber' Lens
freeStyleProjectNextBuildNumberL :: Lens_' FreeStyleProject (Maybe Int)
freeStyleProjectNextBuildNumberL f FreeStyleProject{..} = (\freeStyleProjectNextBuildNumber -> FreeStyleProject { freeStyleProjectNextBuildNumber, ..} ) <$> f freeStyleProjectNextBuildNumber
{-# INLINE freeStyleProjectNextBuildNumberL #-}

-- | 'freeStyleProjectQueueItem' Lens
freeStyleProjectQueueItemL :: Lens_' FreeStyleProject (Maybe Text)
freeStyleProjectQueueItemL f FreeStyleProject{..} = (\freeStyleProjectQueueItem -> FreeStyleProject { freeStyleProjectQueueItem, ..} ) <$> f freeStyleProjectQueueItem
{-# INLINE freeStyleProjectQueueItemL #-}

-- | 'freeStyleProjectConcurrentBuild' Lens
freeStyleProjectConcurrentBuildL :: Lens_' FreeStyleProject (Maybe Bool)
freeStyleProjectConcurrentBuildL f FreeStyleProject{..} = (\freeStyleProjectConcurrentBuild -> FreeStyleProject { freeStyleProjectConcurrentBuild, ..} ) <$> f freeStyleProjectConcurrentBuild
{-# INLINE freeStyleProjectConcurrentBuildL #-}

-- | 'freeStyleProjectScm' Lens
freeStyleProjectScmL :: Lens_' FreeStyleProject (Maybe NullSCM)
freeStyleProjectScmL f FreeStyleProject{..} = (\freeStyleProjectScm -> FreeStyleProject { freeStyleProjectScm, ..} ) <$> f freeStyleProjectScm
{-# INLINE freeStyleProjectScmL #-}



-- * FreeStyleProjectactions

-- | 'freeStyleProjectactionsClass' Lens
freeStyleProjectactionsClassL :: Lens_' FreeStyleProjectactions (Maybe Text)
freeStyleProjectactionsClassL f FreeStyleProjectactions{..} = (\freeStyleProjectactionsClass -> FreeStyleProjectactions { freeStyleProjectactionsClass, ..} ) <$> f freeStyleProjectactionsClass
{-# INLINE freeStyleProjectactionsClassL #-}



-- * FreeStyleProjecthealthReport

-- | 'freeStyleProjecthealthReportDescription' Lens
freeStyleProjecthealthReportDescriptionL :: Lens_' FreeStyleProjecthealthReport (Maybe Text)
freeStyleProjecthealthReportDescriptionL f FreeStyleProjecthealthReport{..} = (\freeStyleProjecthealthReportDescription -> FreeStyleProjecthealthReport { freeStyleProjecthealthReportDescription, ..} ) <$> f freeStyleProjecthealthReportDescription
{-# INLINE freeStyleProjecthealthReportDescriptionL #-}

-- | 'freeStyleProjecthealthReportIconClassName' Lens
freeStyleProjecthealthReportIconClassNameL :: Lens_' FreeStyleProjecthealthReport (Maybe Text)
freeStyleProjecthealthReportIconClassNameL f FreeStyleProjecthealthReport{..} = (\freeStyleProjecthealthReportIconClassName -> FreeStyleProjecthealthReport { freeStyleProjecthealthReportIconClassName, ..} ) <$> f freeStyleProjecthealthReportIconClassName
{-# INLINE freeStyleProjecthealthReportIconClassNameL #-}

-- | 'freeStyleProjecthealthReportIconUrl' Lens
freeStyleProjecthealthReportIconUrlL :: Lens_' FreeStyleProjecthealthReport (Maybe Text)
freeStyleProjecthealthReportIconUrlL f FreeStyleProjecthealthReport{..} = (\freeStyleProjecthealthReportIconUrl -> FreeStyleProjecthealthReport { freeStyleProjecthealthReportIconUrl, ..} ) <$> f freeStyleProjecthealthReportIconUrl
{-# INLINE freeStyleProjecthealthReportIconUrlL #-}

-- | 'freeStyleProjecthealthReportScore' Lens
freeStyleProjecthealthReportScoreL :: Lens_' FreeStyleProjecthealthReport (Maybe Int)
freeStyleProjecthealthReportScoreL f FreeStyleProjecthealthReport{..} = (\freeStyleProjecthealthReportScore -> FreeStyleProjecthealthReport { freeStyleProjecthealthReportScore, ..} ) <$> f freeStyleProjecthealthReportScore
{-# INLINE freeStyleProjecthealthReportScoreL #-}

-- | 'freeStyleProjecthealthReportClass' Lens
freeStyleProjecthealthReportClassL :: Lens_' FreeStyleProjecthealthReport (Maybe Text)
freeStyleProjecthealthReportClassL f FreeStyleProjecthealthReport{..} = (\freeStyleProjecthealthReportClass -> FreeStyleProjecthealthReport { freeStyleProjecthealthReportClass, ..} ) <$> f freeStyleProjecthealthReportClass
{-# INLINE freeStyleProjecthealthReportClassL #-}



-- * GenericResource

-- | 'genericResourceClass' Lens
genericResourceClassL :: Lens_' GenericResource (Maybe Text)
genericResourceClassL f GenericResource{..} = (\genericResourceClass -> GenericResource { genericResourceClass, ..} ) <$> f genericResourceClass
{-# INLINE genericResourceClassL #-}

-- | 'genericResourceDisplayName' Lens
genericResourceDisplayNameL :: Lens_' GenericResource (Maybe Text)
genericResourceDisplayNameL f GenericResource{..} = (\genericResourceDisplayName -> GenericResource { genericResourceDisplayName, ..} ) <$> f genericResourceDisplayName
{-# INLINE genericResourceDisplayNameL #-}

-- | 'genericResourceDurationInMillis' Lens
genericResourceDurationInMillisL :: Lens_' GenericResource (Maybe Int)
genericResourceDurationInMillisL f GenericResource{..} = (\genericResourceDurationInMillis -> GenericResource { genericResourceDurationInMillis, ..} ) <$> f genericResourceDurationInMillis
{-# INLINE genericResourceDurationInMillisL #-}

-- | 'genericResourceId' Lens
genericResourceIdL :: Lens_' GenericResource (Maybe Text)
genericResourceIdL f GenericResource{..} = (\genericResourceId -> GenericResource { genericResourceId, ..} ) <$> f genericResourceId
{-# INLINE genericResourceIdL #-}

-- | 'genericResourceResult' Lens
genericResourceResultL :: Lens_' GenericResource (Maybe Text)
genericResourceResultL f GenericResource{..} = (\genericResourceResult -> GenericResource { genericResourceResult, ..} ) <$> f genericResourceResult
{-# INLINE genericResourceResultL #-}

-- | 'genericResourceStartTime' Lens
genericResourceStartTimeL :: Lens_' GenericResource (Maybe Text)
genericResourceStartTimeL f GenericResource{..} = (\genericResourceStartTime -> GenericResource { genericResourceStartTime, ..} ) <$> f genericResourceStartTime
{-# INLINE genericResourceStartTimeL #-}



-- * GithubContent

-- | 'githubContentName' Lens
githubContentNameL :: Lens_' GithubContent (Maybe Text)
githubContentNameL f GithubContent{..} = (\githubContentName -> GithubContent { githubContentName, ..} ) <$> f githubContentName
{-# INLINE githubContentNameL #-}

-- | 'githubContentSha' Lens
githubContentShaL :: Lens_' GithubContent (Maybe Text)
githubContentShaL f GithubContent{..} = (\githubContentSha -> GithubContent { githubContentSha, ..} ) <$> f githubContentSha
{-# INLINE githubContentShaL #-}

-- | 'githubContentClass' Lens
githubContentClassL :: Lens_' GithubContent (Maybe Text)
githubContentClassL f GithubContent{..} = (\githubContentClass -> GithubContent { githubContentClass, ..} ) <$> f githubContentClass
{-# INLINE githubContentClassL #-}

-- | 'githubContentRepo' Lens
githubContentRepoL :: Lens_' GithubContent (Maybe Text)
githubContentRepoL f GithubContent{..} = (\githubContentRepo -> GithubContent { githubContentRepo, ..} ) <$> f githubContentRepo
{-# INLINE githubContentRepoL #-}

-- | 'githubContentSize' Lens
githubContentSizeL :: Lens_' GithubContent (Maybe Int)
githubContentSizeL f GithubContent{..} = (\githubContentSize -> GithubContent { githubContentSize, ..} ) <$> f githubContentSize
{-# INLINE githubContentSizeL #-}

-- | 'githubContentOwner' Lens
githubContentOwnerL :: Lens_' GithubContent (Maybe Text)
githubContentOwnerL f GithubContent{..} = (\githubContentOwner -> GithubContent { githubContentOwner, ..} ) <$> f githubContentOwner
{-# INLINE githubContentOwnerL #-}

-- | 'githubContentPath' Lens
githubContentPathL :: Lens_' GithubContent (Maybe Text)
githubContentPathL f GithubContent{..} = (\githubContentPath -> GithubContent { githubContentPath, ..} ) <$> f githubContentPath
{-# INLINE githubContentPathL #-}

-- | 'githubContentBase64Data' Lens
githubContentBase64DataL :: Lens_' GithubContent (Maybe Text)
githubContentBase64DataL f GithubContent{..} = (\githubContentBase64Data -> GithubContent { githubContentBase64Data, ..} ) <$> f githubContentBase64Data
{-# INLINE githubContentBase64DataL #-}



-- * GithubFile

-- | 'githubFileContent' Lens
githubFileContentL :: Lens_' GithubFile (Maybe GithubContent)
githubFileContentL f GithubFile{..} = (\githubFileContent -> GithubFile { githubFileContent, ..} ) <$> f githubFileContent
{-# INLINE githubFileContentL #-}

-- | 'githubFileClass' Lens
githubFileClassL :: Lens_' GithubFile (Maybe Text)
githubFileClassL f GithubFile{..} = (\githubFileClass -> GithubFile { githubFileClass, ..} ) <$> f githubFileClass
{-# INLINE githubFileClassL #-}



-- * GithubOrganization

-- | 'githubOrganizationClass' Lens
githubOrganizationClassL :: Lens_' GithubOrganization (Maybe Text)
githubOrganizationClassL f GithubOrganization{..} = (\githubOrganizationClass -> GithubOrganization { githubOrganizationClass, ..} ) <$> f githubOrganizationClass
{-# INLINE githubOrganizationClassL #-}

-- | 'githubOrganizationLinks' Lens
githubOrganizationLinksL :: Lens_' GithubOrganization (Maybe GithubOrganizationlinks)
githubOrganizationLinksL f GithubOrganization{..} = (\githubOrganizationLinks -> GithubOrganization { githubOrganizationLinks, ..} ) <$> f githubOrganizationLinks
{-# INLINE githubOrganizationLinksL #-}

-- | 'githubOrganizationJenkinsOrganizationPipeline' Lens
githubOrganizationJenkinsOrganizationPipelineL :: Lens_' GithubOrganization (Maybe Bool)
githubOrganizationJenkinsOrganizationPipelineL f GithubOrganization{..} = (\githubOrganizationJenkinsOrganizationPipeline -> GithubOrganization { githubOrganizationJenkinsOrganizationPipeline, ..} ) <$> f githubOrganizationJenkinsOrganizationPipeline
{-# INLINE githubOrganizationJenkinsOrganizationPipelineL #-}

-- | 'githubOrganizationName' Lens
githubOrganizationNameL :: Lens_' GithubOrganization (Maybe Text)
githubOrganizationNameL f GithubOrganization{..} = (\githubOrganizationName -> GithubOrganization { githubOrganizationName, ..} ) <$> f githubOrganizationName
{-# INLINE githubOrganizationNameL #-}



-- * GithubOrganizationlinks

-- | 'githubOrganizationlinksRepositories' Lens
githubOrganizationlinksRepositoriesL :: Lens_' GithubOrganizationlinks (Maybe Link)
githubOrganizationlinksRepositoriesL f GithubOrganizationlinks{..} = (\githubOrganizationlinksRepositories -> GithubOrganizationlinks { githubOrganizationlinksRepositories, ..} ) <$> f githubOrganizationlinksRepositories
{-# INLINE githubOrganizationlinksRepositoriesL #-}

-- | 'githubOrganizationlinksSelf' Lens
githubOrganizationlinksSelfL :: Lens_' GithubOrganizationlinks (Maybe Link)
githubOrganizationlinksSelfL f GithubOrganizationlinks{..} = (\githubOrganizationlinksSelf -> GithubOrganizationlinks { githubOrganizationlinksSelf, ..} ) <$> f githubOrganizationlinksSelf
{-# INLINE githubOrganizationlinksSelfL #-}

-- | 'githubOrganizationlinksClass' Lens
githubOrganizationlinksClassL :: Lens_' GithubOrganizationlinks (Maybe Text)
githubOrganizationlinksClassL f GithubOrganizationlinks{..} = (\githubOrganizationlinksClass -> GithubOrganizationlinks { githubOrganizationlinksClass, ..} ) <$> f githubOrganizationlinksClass
{-# INLINE githubOrganizationlinksClassL #-}



-- * GithubRepositories

-- | 'githubRepositoriesClass' Lens
githubRepositoriesClassL :: Lens_' GithubRepositories (Maybe Text)
githubRepositoriesClassL f GithubRepositories{..} = (\githubRepositoriesClass -> GithubRepositories { githubRepositoriesClass, ..} ) <$> f githubRepositoriesClass
{-# INLINE githubRepositoriesClassL #-}

-- | 'githubRepositoriesLinks' Lens
githubRepositoriesLinksL :: Lens_' GithubRepositories (Maybe GithubRepositorieslinks)
githubRepositoriesLinksL f GithubRepositories{..} = (\githubRepositoriesLinks -> GithubRepositories { githubRepositoriesLinks, ..} ) <$> f githubRepositoriesLinks
{-# INLINE githubRepositoriesLinksL #-}

-- | 'githubRepositoriesItems' Lens
githubRepositoriesItemsL :: Lens_' GithubRepositories (Maybe [GithubRepository])
githubRepositoriesItemsL f GithubRepositories{..} = (\githubRepositoriesItems -> GithubRepositories { githubRepositoriesItems, ..} ) <$> f githubRepositoriesItems
{-# INLINE githubRepositoriesItemsL #-}

-- | 'githubRepositoriesLastPage' Lens
githubRepositoriesLastPageL :: Lens_' GithubRepositories (Maybe Int)
githubRepositoriesLastPageL f GithubRepositories{..} = (\githubRepositoriesLastPage -> GithubRepositories { githubRepositoriesLastPage, ..} ) <$> f githubRepositoriesLastPage
{-# INLINE githubRepositoriesLastPageL #-}

-- | 'githubRepositoriesNextPage' Lens
githubRepositoriesNextPageL :: Lens_' GithubRepositories (Maybe Int)
githubRepositoriesNextPageL f GithubRepositories{..} = (\githubRepositoriesNextPage -> GithubRepositories { githubRepositoriesNextPage, ..} ) <$> f githubRepositoriesNextPage
{-# INLINE githubRepositoriesNextPageL #-}

-- | 'githubRepositoriesPageSize' Lens
githubRepositoriesPageSizeL :: Lens_' GithubRepositories (Maybe Int)
githubRepositoriesPageSizeL f GithubRepositories{..} = (\githubRepositoriesPageSize -> GithubRepositories { githubRepositoriesPageSize, ..} ) <$> f githubRepositoriesPageSize
{-# INLINE githubRepositoriesPageSizeL #-}



-- * GithubRepositorieslinks

-- | 'githubRepositorieslinksSelf' Lens
githubRepositorieslinksSelfL :: Lens_' GithubRepositorieslinks (Maybe Link)
githubRepositorieslinksSelfL f GithubRepositorieslinks{..} = (\githubRepositorieslinksSelf -> GithubRepositorieslinks { githubRepositorieslinksSelf, ..} ) <$> f githubRepositorieslinksSelf
{-# INLINE githubRepositorieslinksSelfL #-}

-- | 'githubRepositorieslinksClass' Lens
githubRepositorieslinksClassL :: Lens_' GithubRepositorieslinks (Maybe Text)
githubRepositorieslinksClassL f GithubRepositorieslinks{..} = (\githubRepositorieslinksClass -> GithubRepositorieslinks { githubRepositorieslinksClass, ..} ) <$> f githubRepositorieslinksClass
{-# INLINE githubRepositorieslinksClassL #-}



-- * GithubRepository

-- | 'githubRepositoryClass' Lens
githubRepositoryClassL :: Lens_' GithubRepository (Maybe Text)
githubRepositoryClassL f GithubRepository{..} = (\githubRepositoryClass -> GithubRepository { githubRepositoryClass, ..} ) <$> f githubRepositoryClass
{-# INLINE githubRepositoryClassL #-}

-- | 'githubRepositoryLinks' Lens
githubRepositoryLinksL :: Lens_' GithubRepository (Maybe GithubRepositorylinks)
githubRepositoryLinksL f GithubRepository{..} = (\githubRepositoryLinks -> GithubRepository { githubRepositoryLinks, ..} ) <$> f githubRepositoryLinks
{-# INLINE githubRepositoryLinksL #-}

-- | 'githubRepositoryDefaultBranch' Lens
githubRepositoryDefaultBranchL :: Lens_' GithubRepository (Maybe Text)
githubRepositoryDefaultBranchL f GithubRepository{..} = (\githubRepositoryDefaultBranch -> GithubRepository { githubRepositoryDefaultBranch, ..} ) <$> f githubRepositoryDefaultBranch
{-# INLINE githubRepositoryDefaultBranchL #-}

-- | 'githubRepositoryDescription' Lens
githubRepositoryDescriptionL :: Lens_' GithubRepository (Maybe Text)
githubRepositoryDescriptionL f GithubRepository{..} = (\githubRepositoryDescription -> GithubRepository { githubRepositoryDescription, ..} ) <$> f githubRepositoryDescription
{-# INLINE githubRepositoryDescriptionL #-}

-- | 'githubRepositoryName' Lens
githubRepositoryNameL :: Lens_' GithubRepository (Maybe Text)
githubRepositoryNameL f GithubRepository{..} = (\githubRepositoryName -> GithubRepository { githubRepositoryName, ..} ) <$> f githubRepositoryName
{-# INLINE githubRepositoryNameL #-}

-- | 'githubRepositoryPermissions' Lens
githubRepositoryPermissionsL :: Lens_' GithubRepository (Maybe GithubRepositorypermissions)
githubRepositoryPermissionsL f GithubRepository{..} = (\githubRepositoryPermissions -> GithubRepository { githubRepositoryPermissions, ..} ) <$> f githubRepositoryPermissions
{-# INLINE githubRepositoryPermissionsL #-}

-- | 'githubRepositoryPrivate' Lens
githubRepositoryPrivateL :: Lens_' GithubRepository (Maybe Bool)
githubRepositoryPrivateL f GithubRepository{..} = (\githubRepositoryPrivate -> GithubRepository { githubRepositoryPrivate, ..} ) <$> f githubRepositoryPrivate
{-# INLINE githubRepositoryPrivateL #-}

-- | 'githubRepositoryFullName' Lens
githubRepositoryFullNameL :: Lens_' GithubRepository (Maybe Text)
githubRepositoryFullNameL f GithubRepository{..} = (\githubRepositoryFullName -> GithubRepository { githubRepositoryFullName, ..} ) <$> f githubRepositoryFullName
{-# INLINE githubRepositoryFullNameL #-}



-- * GithubRepositorylinks

-- | 'githubRepositorylinksSelf' Lens
githubRepositorylinksSelfL :: Lens_' GithubRepositorylinks (Maybe Link)
githubRepositorylinksSelfL f GithubRepositorylinks{..} = (\githubRepositorylinksSelf -> GithubRepositorylinks { githubRepositorylinksSelf, ..} ) <$> f githubRepositorylinksSelf
{-# INLINE githubRepositorylinksSelfL #-}

-- | 'githubRepositorylinksClass' Lens
githubRepositorylinksClassL :: Lens_' GithubRepositorylinks (Maybe Text)
githubRepositorylinksClassL f GithubRepositorylinks{..} = (\githubRepositorylinksClass -> GithubRepositorylinks { githubRepositorylinksClass, ..} ) <$> f githubRepositorylinksClass
{-# INLINE githubRepositorylinksClassL #-}



-- * GithubRepositorypermissions

-- | 'githubRepositorypermissionsAdmin' Lens
githubRepositorypermissionsAdminL :: Lens_' GithubRepositorypermissions (Maybe Bool)
githubRepositorypermissionsAdminL f GithubRepositorypermissions{..} = (\githubRepositorypermissionsAdmin -> GithubRepositorypermissions { githubRepositorypermissionsAdmin, ..} ) <$> f githubRepositorypermissionsAdmin
{-# INLINE githubRepositorypermissionsAdminL #-}

-- | 'githubRepositorypermissionsPush' Lens
githubRepositorypermissionsPushL :: Lens_' GithubRepositorypermissions (Maybe Bool)
githubRepositorypermissionsPushL f GithubRepositorypermissions{..} = (\githubRepositorypermissionsPush -> GithubRepositorypermissions { githubRepositorypermissionsPush, ..} ) <$> f githubRepositorypermissionsPush
{-# INLINE githubRepositorypermissionsPushL #-}

-- | 'githubRepositorypermissionsPull' Lens
githubRepositorypermissionsPullL :: Lens_' GithubRepositorypermissions (Maybe Bool)
githubRepositorypermissionsPullL f GithubRepositorypermissions{..} = (\githubRepositorypermissionsPull -> GithubRepositorypermissions { githubRepositorypermissionsPull, ..} ) <$> f githubRepositorypermissionsPull
{-# INLINE githubRepositorypermissionsPullL #-}

-- | 'githubRepositorypermissionsClass' Lens
githubRepositorypermissionsClassL :: Lens_' GithubRepositorypermissions (Maybe Text)
githubRepositorypermissionsClassL f GithubRepositorypermissions{..} = (\githubRepositorypermissionsClass -> GithubRepositorypermissions { githubRepositorypermissionsClass, ..} ) <$> f githubRepositorypermissionsClass
{-# INLINE githubRepositorypermissionsClassL #-}



-- * GithubRespositoryContainer

-- | 'githubRespositoryContainerClass' Lens
githubRespositoryContainerClassL :: Lens_' GithubRespositoryContainer (Maybe Text)
githubRespositoryContainerClassL f GithubRespositoryContainer{..} = (\githubRespositoryContainerClass -> GithubRespositoryContainer { githubRespositoryContainerClass, ..} ) <$> f githubRespositoryContainerClass
{-# INLINE githubRespositoryContainerClassL #-}

-- | 'githubRespositoryContainerLinks' Lens
githubRespositoryContainerLinksL :: Lens_' GithubRespositoryContainer (Maybe GithubRespositoryContainerlinks)
githubRespositoryContainerLinksL f GithubRespositoryContainer{..} = (\githubRespositoryContainerLinks -> GithubRespositoryContainer { githubRespositoryContainerLinks, ..} ) <$> f githubRespositoryContainerLinks
{-# INLINE githubRespositoryContainerLinksL #-}

-- | 'githubRespositoryContainerRepositories' Lens
githubRespositoryContainerRepositoriesL :: Lens_' GithubRespositoryContainer (Maybe GithubRepositories)
githubRespositoryContainerRepositoriesL f GithubRespositoryContainer{..} = (\githubRespositoryContainerRepositories -> GithubRespositoryContainer { githubRespositoryContainerRepositories, ..} ) <$> f githubRespositoryContainerRepositories
{-# INLINE githubRespositoryContainerRepositoriesL #-}



-- * GithubRespositoryContainerlinks

-- | 'githubRespositoryContainerlinksSelf' Lens
githubRespositoryContainerlinksSelfL :: Lens_' GithubRespositoryContainerlinks (Maybe Link)
githubRespositoryContainerlinksSelfL f GithubRespositoryContainerlinks{..} = (\githubRespositoryContainerlinksSelf -> GithubRespositoryContainerlinks { githubRespositoryContainerlinksSelf, ..} ) <$> f githubRespositoryContainerlinksSelf
{-# INLINE githubRespositoryContainerlinksSelfL #-}

-- | 'githubRespositoryContainerlinksClass' Lens
githubRespositoryContainerlinksClassL :: Lens_' GithubRespositoryContainerlinks (Maybe Text)
githubRespositoryContainerlinksClassL f GithubRespositoryContainerlinks{..} = (\githubRespositoryContainerlinksClass -> GithubRespositoryContainerlinks { githubRespositoryContainerlinksClass, ..} ) <$> f githubRespositoryContainerlinksClass
{-# INLINE githubRespositoryContainerlinksClassL #-}



-- * GithubScm

-- | 'githubScmClass' Lens
githubScmClassL :: Lens_' GithubScm (Maybe Text)
githubScmClassL f GithubScm{..} = (\githubScmClass -> GithubScm { githubScmClass, ..} ) <$> f githubScmClass
{-# INLINE githubScmClassL #-}

-- | 'githubScmLinks' Lens
githubScmLinksL :: Lens_' GithubScm (Maybe GithubScmlinks)
githubScmLinksL f GithubScm{..} = (\githubScmLinks -> GithubScm { githubScmLinks, ..} ) <$> f githubScmLinks
{-# INLINE githubScmLinksL #-}

-- | 'githubScmCredentialId' Lens
githubScmCredentialIdL :: Lens_' GithubScm (Maybe Text)
githubScmCredentialIdL f GithubScm{..} = (\githubScmCredentialId -> GithubScm { githubScmCredentialId, ..} ) <$> f githubScmCredentialId
{-# INLINE githubScmCredentialIdL #-}

-- | 'githubScmId' Lens
githubScmIdL :: Lens_' GithubScm (Maybe Text)
githubScmIdL f GithubScm{..} = (\githubScmId -> GithubScm { githubScmId, ..} ) <$> f githubScmId
{-# INLINE githubScmIdL #-}

-- | 'githubScmUri' Lens
githubScmUriL :: Lens_' GithubScm (Maybe Text)
githubScmUriL f GithubScm{..} = (\githubScmUri -> GithubScm { githubScmUri, ..} ) <$> f githubScmUri
{-# INLINE githubScmUriL #-}



-- * GithubScmlinks

-- | 'githubScmlinksSelf' Lens
githubScmlinksSelfL :: Lens_' GithubScmlinks (Maybe Link)
githubScmlinksSelfL f GithubScmlinks{..} = (\githubScmlinksSelf -> GithubScmlinks { githubScmlinksSelf, ..} ) <$> f githubScmlinksSelf
{-# INLINE githubScmlinksSelfL #-}

-- | 'githubScmlinksClass' Lens
githubScmlinksClassL :: Lens_' GithubScmlinks (Maybe Text)
githubScmlinksClassL f GithubScmlinks{..} = (\githubScmlinksClass -> GithubScmlinks { githubScmlinksClass, ..} ) <$> f githubScmlinksClass
{-# INLINE githubScmlinksClassL #-}



-- * Hudson

-- | 'hudsonClass' Lens
hudsonClassL :: Lens_' Hudson (Maybe Text)
hudsonClassL f Hudson{..} = (\hudsonClass -> Hudson { hudsonClass, ..} ) <$> f hudsonClass
{-# INLINE hudsonClassL #-}

-- | 'hudsonAssignedLabels' Lens
hudsonAssignedLabelsL :: Lens_' Hudson (Maybe [HudsonassignedLabels])
hudsonAssignedLabelsL f Hudson{..} = (\hudsonAssignedLabels -> Hudson { hudsonAssignedLabels, ..} ) <$> f hudsonAssignedLabels
{-# INLINE hudsonAssignedLabelsL #-}

-- | 'hudsonMode' Lens
hudsonModeL :: Lens_' Hudson (Maybe Text)
hudsonModeL f Hudson{..} = (\hudsonMode -> Hudson { hudsonMode, ..} ) <$> f hudsonMode
{-# INLINE hudsonModeL #-}

-- | 'hudsonNodeDescription' Lens
hudsonNodeDescriptionL :: Lens_' Hudson (Maybe Text)
hudsonNodeDescriptionL f Hudson{..} = (\hudsonNodeDescription -> Hudson { hudsonNodeDescription, ..} ) <$> f hudsonNodeDescription
{-# INLINE hudsonNodeDescriptionL #-}

-- | 'hudsonNodeName' Lens
hudsonNodeNameL :: Lens_' Hudson (Maybe Text)
hudsonNodeNameL f Hudson{..} = (\hudsonNodeName -> Hudson { hudsonNodeName, ..} ) <$> f hudsonNodeName
{-# INLINE hudsonNodeNameL #-}

-- | 'hudsonNumExecutors' Lens
hudsonNumExecutorsL :: Lens_' Hudson (Maybe Int)
hudsonNumExecutorsL f Hudson{..} = (\hudsonNumExecutors -> Hudson { hudsonNumExecutors, ..} ) <$> f hudsonNumExecutors
{-# INLINE hudsonNumExecutorsL #-}

-- | 'hudsonDescription' Lens
hudsonDescriptionL :: Lens_' Hudson (Maybe Text)
hudsonDescriptionL f Hudson{..} = (\hudsonDescription -> Hudson { hudsonDescription, ..} ) <$> f hudsonDescription
{-# INLINE hudsonDescriptionL #-}

-- | 'hudsonJobs' Lens
hudsonJobsL :: Lens_' Hudson (Maybe [FreeStyleProject])
hudsonJobsL f Hudson{..} = (\hudsonJobs -> Hudson { hudsonJobs, ..} ) <$> f hudsonJobs
{-# INLINE hudsonJobsL #-}

-- | 'hudsonPrimaryView' Lens
hudsonPrimaryViewL :: Lens_' Hudson (Maybe AllView)
hudsonPrimaryViewL f Hudson{..} = (\hudsonPrimaryView -> Hudson { hudsonPrimaryView, ..} ) <$> f hudsonPrimaryView
{-# INLINE hudsonPrimaryViewL #-}

-- | 'hudsonQuietingDown' Lens
hudsonQuietingDownL :: Lens_' Hudson (Maybe Bool)
hudsonQuietingDownL f Hudson{..} = (\hudsonQuietingDown -> Hudson { hudsonQuietingDown, ..} ) <$> f hudsonQuietingDown
{-# INLINE hudsonQuietingDownL #-}

-- | 'hudsonSlaveAgentPort' Lens
hudsonSlaveAgentPortL :: Lens_' Hudson (Maybe Int)
hudsonSlaveAgentPortL f Hudson{..} = (\hudsonSlaveAgentPort -> Hudson { hudsonSlaveAgentPort, ..} ) <$> f hudsonSlaveAgentPort
{-# INLINE hudsonSlaveAgentPortL #-}

-- | 'hudsonUnlabeledLoad' Lens
hudsonUnlabeledLoadL :: Lens_' Hudson (Maybe UnlabeledLoadStatistics)
hudsonUnlabeledLoadL f Hudson{..} = (\hudsonUnlabeledLoad -> Hudson { hudsonUnlabeledLoad, ..} ) <$> f hudsonUnlabeledLoad
{-# INLINE hudsonUnlabeledLoadL #-}

-- | 'hudsonUseCrumbs' Lens
hudsonUseCrumbsL :: Lens_' Hudson (Maybe Bool)
hudsonUseCrumbsL f Hudson{..} = (\hudsonUseCrumbs -> Hudson { hudsonUseCrumbs, ..} ) <$> f hudsonUseCrumbs
{-# INLINE hudsonUseCrumbsL #-}

-- | 'hudsonUseSecurity' Lens
hudsonUseSecurityL :: Lens_' Hudson (Maybe Bool)
hudsonUseSecurityL f Hudson{..} = (\hudsonUseSecurity -> Hudson { hudsonUseSecurity, ..} ) <$> f hudsonUseSecurity
{-# INLINE hudsonUseSecurityL #-}

-- | 'hudsonViews' Lens
hudsonViewsL :: Lens_' Hudson (Maybe [AllView])
hudsonViewsL f Hudson{..} = (\hudsonViews -> Hudson { hudsonViews, ..} ) <$> f hudsonViews
{-# INLINE hudsonViewsL #-}



-- * HudsonMasterComputer

-- | 'hudsonMasterComputerClass' Lens
hudsonMasterComputerClassL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerClassL f HudsonMasterComputer{..} = (\hudsonMasterComputerClass -> HudsonMasterComputer { hudsonMasterComputerClass, ..} ) <$> f hudsonMasterComputerClass
{-# INLINE hudsonMasterComputerClassL #-}

-- | 'hudsonMasterComputerDisplayName' Lens
hudsonMasterComputerDisplayNameL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerDisplayNameL f HudsonMasterComputer{..} = (\hudsonMasterComputerDisplayName -> HudsonMasterComputer { hudsonMasterComputerDisplayName, ..} ) <$> f hudsonMasterComputerDisplayName
{-# INLINE hudsonMasterComputerDisplayNameL #-}

-- | 'hudsonMasterComputerExecutors' Lens
hudsonMasterComputerExecutorsL :: Lens_' HudsonMasterComputer (Maybe [HudsonMasterComputerexecutors])
hudsonMasterComputerExecutorsL f HudsonMasterComputer{..} = (\hudsonMasterComputerExecutors -> HudsonMasterComputer { hudsonMasterComputerExecutors, ..} ) <$> f hudsonMasterComputerExecutors
{-# INLINE hudsonMasterComputerExecutorsL #-}

-- | 'hudsonMasterComputerIcon' Lens
hudsonMasterComputerIconL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerIconL f HudsonMasterComputer{..} = (\hudsonMasterComputerIcon -> HudsonMasterComputer { hudsonMasterComputerIcon, ..} ) <$> f hudsonMasterComputerIcon
{-# INLINE hudsonMasterComputerIconL #-}

-- | 'hudsonMasterComputerIconClassName' Lens
hudsonMasterComputerIconClassNameL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerIconClassNameL f HudsonMasterComputer{..} = (\hudsonMasterComputerIconClassName -> HudsonMasterComputer { hudsonMasterComputerIconClassName, ..} ) <$> f hudsonMasterComputerIconClassName
{-# INLINE hudsonMasterComputerIconClassNameL #-}

-- | 'hudsonMasterComputerIdle' Lens
hudsonMasterComputerIdleL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerIdleL f HudsonMasterComputer{..} = (\hudsonMasterComputerIdle -> HudsonMasterComputer { hudsonMasterComputerIdle, ..} ) <$> f hudsonMasterComputerIdle
{-# INLINE hudsonMasterComputerIdleL #-}

-- | 'hudsonMasterComputerJnlpAgent' Lens
hudsonMasterComputerJnlpAgentL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerJnlpAgentL f HudsonMasterComputer{..} = (\hudsonMasterComputerJnlpAgent -> HudsonMasterComputer { hudsonMasterComputerJnlpAgent, ..} ) <$> f hudsonMasterComputerJnlpAgent
{-# INLINE hudsonMasterComputerJnlpAgentL #-}

-- | 'hudsonMasterComputerLaunchSupported' Lens
hudsonMasterComputerLaunchSupportedL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerLaunchSupportedL f HudsonMasterComputer{..} = (\hudsonMasterComputerLaunchSupported -> HudsonMasterComputer { hudsonMasterComputerLaunchSupported, ..} ) <$> f hudsonMasterComputerLaunchSupported
{-# INLINE hudsonMasterComputerLaunchSupportedL #-}

-- | 'hudsonMasterComputerLoadStatistics' Lens
hudsonMasterComputerLoadStatisticsL :: Lens_' HudsonMasterComputer (Maybe Label1)
hudsonMasterComputerLoadStatisticsL f HudsonMasterComputer{..} = (\hudsonMasterComputerLoadStatistics -> HudsonMasterComputer { hudsonMasterComputerLoadStatistics, ..} ) <$> f hudsonMasterComputerLoadStatistics
{-# INLINE hudsonMasterComputerLoadStatisticsL #-}

-- | 'hudsonMasterComputerManualLaunchAllowed' Lens
hudsonMasterComputerManualLaunchAllowedL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerManualLaunchAllowedL f HudsonMasterComputer{..} = (\hudsonMasterComputerManualLaunchAllowed -> HudsonMasterComputer { hudsonMasterComputerManualLaunchAllowed, ..} ) <$> f hudsonMasterComputerManualLaunchAllowed
{-# INLINE hudsonMasterComputerManualLaunchAllowedL #-}

-- | 'hudsonMasterComputerMonitorData' Lens
hudsonMasterComputerMonitorDataL :: Lens_' HudsonMasterComputer (Maybe HudsonMasterComputermonitorData)
hudsonMasterComputerMonitorDataL f HudsonMasterComputer{..} = (\hudsonMasterComputerMonitorData -> HudsonMasterComputer { hudsonMasterComputerMonitorData, ..} ) <$> f hudsonMasterComputerMonitorData
{-# INLINE hudsonMasterComputerMonitorDataL #-}

-- | 'hudsonMasterComputerNumExecutors' Lens
hudsonMasterComputerNumExecutorsL :: Lens_' HudsonMasterComputer (Maybe Int)
hudsonMasterComputerNumExecutorsL f HudsonMasterComputer{..} = (\hudsonMasterComputerNumExecutors -> HudsonMasterComputer { hudsonMasterComputerNumExecutors, ..} ) <$> f hudsonMasterComputerNumExecutors
{-# INLINE hudsonMasterComputerNumExecutorsL #-}

-- | 'hudsonMasterComputerOffline' Lens
hudsonMasterComputerOfflineL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerOfflineL f HudsonMasterComputer{..} = (\hudsonMasterComputerOffline -> HudsonMasterComputer { hudsonMasterComputerOffline, ..} ) <$> f hudsonMasterComputerOffline
{-# INLINE hudsonMasterComputerOfflineL #-}

-- | 'hudsonMasterComputerOfflineCause' Lens
hudsonMasterComputerOfflineCauseL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerOfflineCauseL f HudsonMasterComputer{..} = (\hudsonMasterComputerOfflineCause -> HudsonMasterComputer { hudsonMasterComputerOfflineCause, ..} ) <$> f hudsonMasterComputerOfflineCause
{-# INLINE hudsonMasterComputerOfflineCauseL #-}

-- | 'hudsonMasterComputerOfflineCauseReason' Lens
hudsonMasterComputerOfflineCauseReasonL :: Lens_' HudsonMasterComputer (Maybe Text)
hudsonMasterComputerOfflineCauseReasonL f HudsonMasterComputer{..} = (\hudsonMasterComputerOfflineCauseReason -> HudsonMasterComputer { hudsonMasterComputerOfflineCauseReason, ..} ) <$> f hudsonMasterComputerOfflineCauseReason
{-# INLINE hudsonMasterComputerOfflineCauseReasonL #-}

-- | 'hudsonMasterComputerTemporarilyOffline' Lens
hudsonMasterComputerTemporarilyOfflineL :: Lens_' HudsonMasterComputer (Maybe Bool)
hudsonMasterComputerTemporarilyOfflineL f HudsonMasterComputer{..} = (\hudsonMasterComputerTemporarilyOffline -> HudsonMasterComputer { hudsonMasterComputerTemporarilyOffline, ..} ) <$> f hudsonMasterComputerTemporarilyOffline
{-# INLINE hudsonMasterComputerTemporarilyOfflineL #-}



-- * HudsonMasterComputerexecutors

-- | 'hudsonMasterComputerexecutorsCurrentExecutable' Lens
hudsonMasterComputerexecutorsCurrentExecutableL :: Lens_' HudsonMasterComputerexecutors (Maybe FreeStyleBuild)
hudsonMasterComputerexecutorsCurrentExecutableL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsCurrentExecutable -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsCurrentExecutable, ..} ) <$> f hudsonMasterComputerexecutorsCurrentExecutable
{-# INLINE hudsonMasterComputerexecutorsCurrentExecutableL #-}

-- | 'hudsonMasterComputerexecutorsIdle' Lens
hudsonMasterComputerexecutorsIdleL :: Lens_' HudsonMasterComputerexecutors (Maybe Bool)
hudsonMasterComputerexecutorsIdleL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsIdle -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsIdle, ..} ) <$> f hudsonMasterComputerexecutorsIdle
{-# INLINE hudsonMasterComputerexecutorsIdleL #-}

-- | 'hudsonMasterComputerexecutorsLikelyStuck' Lens
hudsonMasterComputerexecutorsLikelyStuckL :: Lens_' HudsonMasterComputerexecutors (Maybe Bool)
hudsonMasterComputerexecutorsLikelyStuckL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsLikelyStuck -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsLikelyStuck, ..} ) <$> f hudsonMasterComputerexecutorsLikelyStuck
{-# INLINE hudsonMasterComputerexecutorsLikelyStuckL #-}

-- | 'hudsonMasterComputerexecutorsNumber' Lens
hudsonMasterComputerexecutorsNumberL :: Lens_' HudsonMasterComputerexecutors (Maybe Int)
hudsonMasterComputerexecutorsNumberL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsNumber -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsNumber, ..} ) <$> f hudsonMasterComputerexecutorsNumber
{-# INLINE hudsonMasterComputerexecutorsNumberL #-}

-- | 'hudsonMasterComputerexecutorsProgress' Lens
hudsonMasterComputerexecutorsProgressL :: Lens_' HudsonMasterComputerexecutors (Maybe Int)
hudsonMasterComputerexecutorsProgressL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsProgress -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsProgress, ..} ) <$> f hudsonMasterComputerexecutorsProgress
{-# INLINE hudsonMasterComputerexecutorsProgressL #-}

-- | 'hudsonMasterComputerexecutorsClass' Lens
hudsonMasterComputerexecutorsClassL :: Lens_' HudsonMasterComputerexecutors (Maybe Text)
hudsonMasterComputerexecutorsClassL f HudsonMasterComputerexecutors{..} = (\hudsonMasterComputerexecutorsClass -> HudsonMasterComputerexecutors { hudsonMasterComputerexecutorsClass, ..} ) <$> f hudsonMasterComputerexecutorsClass
{-# INLINE hudsonMasterComputerexecutorsClassL #-}



-- * HudsonMasterComputermonitorData

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe SwapSpaceMonitorMemoryUsage2)
hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsSwapSpaceMonitorL #-}

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe DiskSpaceMonitorDescriptorDiskSpace)
hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsTemporarySpaceMonitorL #-}

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe DiskSpaceMonitorDescriptorDiskSpace)
hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsDiskSpaceMonitorL #-}

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe Text)
hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsArchitectureMonitorL #-}

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe ResponseTimeMonitorData)
hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsResponseTimeMonitorL #-}

-- | 'hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitor' Lens
hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitorL :: Lens_' HudsonMasterComputermonitorData (Maybe ClockDifference)
hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitorL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitor -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitor, ..} ) <$> f hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitor
{-# INLINE hudsonMasterComputermonitorDataHudsonNodeMonitorsClockMonitorL #-}

-- | 'hudsonMasterComputermonitorDataClass' Lens
hudsonMasterComputermonitorDataClassL :: Lens_' HudsonMasterComputermonitorData (Maybe Text)
hudsonMasterComputermonitorDataClassL f HudsonMasterComputermonitorData{..} = (\hudsonMasterComputermonitorDataClass -> HudsonMasterComputermonitorData { hudsonMasterComputermonitorDataClass, ..} ) <$> f hudsonMasterComputermonitorDataClass
{-# INLINE hudsonMasterComputermonitorDataClassL #-}



-- * HudsonassignedLabels

-- | 'hudsonassignedLabelsClass' Lens
hudsonassignedLabelsClassL :: Lens_' HudsonassignedLabels (Maybe Text)
hudsonassignedLabelsClassL f HudsonassignedLabels{..} = (\hudsonassignedLabelsClass -> HudsonassignedLabels { hudsonassignedLabelsClass, ..} ) <$> f hudsonassignedLabelsClass
{-# INLINE hudsonassignedLabelsClassL #-}



-- * InputStepImpl

-- | 'inputStepImplClass' Lens
inputStepImplClassL :: Lens_' InputStepImpl (Maybe Text)
inputStepImplClassL f InputStepImpl{..} = (\inputStepImplClass -> InputStepImpl { inputStepImplClass, ..} ) <$> f inputStepImplClass
{-# INLINE inputStepImplClassL #-}

-- | 'inputStepImplLinks' Lens
inputStepImplLinksL :: Lens_' InputStepImpl (Maybe InputStepImpllinks)
inputStepImplLinksL f InputStepImpl{..} = (\inputStepImplLinks -> InputStepImpl { inputStepImplLinks, ..} ) <$> f inputStepImplLinks
{-# INLINE inputStepImplLinksL #-}

-- | 'inputStepImplId' Lens
inputStepImplIdL :: Lens_' InputStepImpl (Maybe Text)
inputStepImplIdL f InputStepImpl{..} = (\inputStepImplId -> InputStepImpl { inputStepImplId, ..} ) <$> f inputStepImplId
{-# INLINE inputStepImplIdL #-}

-- | 'inputStepImplMessage' Lens
inputStepImplMessageL :: Lens_' InputStepImpl (Maybe Text)
inputStepImplMessageL f InputStepImpl{..} = (\inputStepImplMessage -> InputStepImpl { inputStepImplMessage, ..} ) <$> f inputStepImplMessage
{-# INLINE inputStepImplMessageL #-}

-- | 'inputStepImplOk' Lens
inputStepImplOkL :: Lens_' InputStepImpl (Maybe Text)
inputStepImplOkL f InputStepImpl{..} = (\inputStepImplOk -> InputStepImpl { inputStepImplOk, ..} ) <$> f inputStepImplOk
{-# INLINE inputStepImplOkL #-}

-- | 'inputStepImplParameters' Lens
inputStepImplParametersL :: Lens_' InputStepImpl (Maybe [StringParameterDefinition])
inputStepImplParametersL f InputStepImpl{..} = (\inputStepImplParameters -> InputStepImpl { inputStepImplParameters, ..} ) <$> f inputStepImplParameters
{-# INLINE inputStepImplParametersL #-}

-- | 'inputStepImplSubmitter' Lens
inputStepImplSubmitterL :: Lens_' InputStepImpl (Maybe Text)
inputStepImplSubmitterL f InputStepImpl{..} = (\inputStepImplSubmitter -> InputStepImpl { inputStepImplSubmitter, ..} ) <$> f inputStepImplSubmitter
{-# INLINE inputStepImplSubmitterL #-}



-- * InputStepImpllinks

-- | 'inputStepImpllinksSelf' Lens
inputStepImpllinksSelfL :: Lens_' InputStepImpllinks (Maybe Link)
inputStepImpllinksSelfL f InputStepImpllinks{..} = (\inputStepImpllinksSelf -> InputStepImpllinks { inputStepImpllinksSelf, ..} ) <$> f inputStepImpllinksSelf
{-# INLINE inputStepImpllinksSelfL #-}

-- | 'inputStepImpllinksClass' Lens
inputStepImpllinksClassL :: Lens_' InputStepImpllinks (Maybe Text)
inputStepImpllinksClassL f InputStepImpllinks{..} = (\inputStepImpllinksClass -> InputStepImpllinks { inputStepImpllinksClass, ..} ) <$> f inputStepImpllinksClass
{-# INLINE inputStepImpllinksClassL #-}



-- * Label1

-- | 'label1Class' Lens
label1ClassL :: Lens_' Label1 (Maybe Text)
label1ClassL f Label1{..} = (\label1Class -> Label1 { label1Class, ..} ) <$> f label1Class
{-# INLINE label1ClassL #-}



-- * Link

-- | 'linkClass' Lens
linkClassL :: Lens_' Link (Maybe Text)
linkClassL f Link{..} = (\linkClass -> Link { linkClass, ..} ) <$> f linkClass
{-# INLINE linkClassL #-}

-- | 'linkHref' Lens
linkHrefL :: Lens_' Link (Maybe Text)
linkHrefL f Link{..} = (\linkHref -> Link { linkHref, ..} ) <$> f linkHref
{-# INLINE linkHrefL #-}



-- * ListView

-- | 'listViewClass' Lens
listViewClassL :: Lens_' ListView (Maybe Text)
listViewClassL f ListView{..} = (\listViewClass -> ListView { listViewClass, ..} ) <$> f listViewClass
{-# INLINE listViewClassL #-}

-- | 'listViewDescription' Lens
listViewDescriptionL :: Lens_' ListView (Maybe Text)
listViewDescriptionL f ListView{..} = (\listViewDescription -> ListView { listViewDescription, ..} ) <$> f listViewDescription
{-# INLINE listViewDescriptionL #-}

-- | 'listViewJobs' Lens
listViewJobsL :: Lens_' ListView (Maybe [FreeStyleProject])
listViewJobsL f ListView{..} = (\listViewJobs -> ListView { listViewJobs, ..} ) <$> f listViewJobs
{-# INLINE listViewJobsL #-}

-- | 'listViewName' Lens
listViewNameL :: Lens_' ListView (Maybe Text)
listViewNameL f ListView{..} = (\listViewName -> ListView { listViewName, ..} ) <$> f listViewName
{-# INLINE listViewNameL #-}

-- | 'listViewUrl' Lens
listViewUrlL :: Lens_' ListView (Maybe Text)
listViewUrlL f ListView{..} = (\listViewUrl -> ListView { listViewUrl, ..} ) <$> f listViewUrl
{-# INLINE listViewUrlL #-}



-- * MultibranchPipeline

-- | 'multibranchPipelineDisplayName' Lens
multibranchPipelineDisplayNameL :: Lens_' MultibranchPipeline (Maybe Text)
multibranchPipelineDisplayNameL f MultibranchPipeline{..} = (\multibranchPipelineDisplayName -> MultibranchPipeline { multibranchPipelineDisplayName, ..} ) <$> f multibranchPipelineDisplayName
{-# INLINE multibranchPipelineDisplayNameL #-}

-- | 'multibranchPipelineEstimatedDurationInMillis' Lens
multibranchPipelineEstimatedDurationInMillisL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineEstimatedDurationInMillisL f MultibranchPipeline{..} = (\multibranchPipelineEstimatedDurationInMillis -> MultibranchPipeline { multibranchPipelineEstimatedDurationInMillis, ..} ) <$> f multibranchPipelineEstimatedDurationInMillis
{-# INLINE multibranchPipelineEstimatedDurationInMillisL #-}

-- | 'multibranchPipelineLatestRun' Lens
multibranchPipelineLatestRunL :: Lens_' MultibranchPipeline (Maybe Text)
multibranchPipelineLatestRunL f MultibranchPipeline{..} = (\multibranchPipelineLatestRun -> MultibranchPipeline { multibranchPipelineLatestRun, ..} ) <$> f multibranchPipelineLatestRun
{-# INLINE multibranchPipelineLatestRunL #-}

-- | 'multibranchPipelineName' Lens
multibranchPipelineNameL :: Lens_' MultibranchPipeline (Maybe Text)
multibranchPipelineNameL f MultibranchPipeline{..} = (\multibranchPipelineName -> MultibranchPipeline { multibranchPipelineName, ..} ) <$> f multibranchPipelineName
{-# INLINE multibranchPipelineNameL #-}

-- | 'multibranchPipelineOrganization' Lens
multibranchPipelineOrganizationL :: Lens_' MultibranchPipeline (Maybe Text)
multibranchPipelineOrganizationL f MultibranchPipeline{..} = (\multibranchPipelineOrganization -> MultibranchPipeline { multibranchPipelineOrganization, ..} ) <$> f multibranchPipelineOrganization
{-# INLINE multibranchPipelineOrganizationL #-}

-- | 'multibranchPipelineWeatherScore' Lens
multibranchPipelineWeatherScoreL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineWeatherScoreL f MultibranchPipeline{..} = (\multibranchPipelineWeatherScore -> MultibranchPipeline { multibranchPipelineWeatherScore, ..} ) <$> f multibranchPipelineWeatherScore
{-# INLINE multibranchPipelineWeatherScoreL #-}

-- | 'multibranchPipelineBranchNames' Lens
multibranchPipelineBranchNamesL :: Lens_' MultibranchPipeline (Maybe [Text])
multibranchPipelineBranchNamesL f MultibranchPipeline{..} = (\multibranchPipelineBranchNames -> MultibranchPipeline { multibranchPipelineBranchNames, ..} ) <$> f multibranchPipelineBranchNames
{-# INLINE multibranchPipelineBranchNamesL #-}

-- | 'multibranchPipelineNumberOfFailingBranches' Lens
multibranchPipelineNumberOfFailingBranchesL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineNumberOfFailingBranchesL f MultibranchPipeline{..} = (\multibranchPipelineNumberOfFailingBranches -> MultibranchPipeline { multibranchPipelineNumberOfFailingBranches, ..} ) <$> f multibranchPipelineNumberOfFailingBranches
{-# INLINE multibranchPipelineNumberOfFailingBranchesL #-}

-- | 'multibranchPipelineNumberOfFailingPullRequests' Lens
multibranchPipelineNumberOfFailingPullRequestsL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineNumberOfFailingPullRequestsL f MultibranchPipeline{..} = (\multibranchPipelineNumberOfFailingPullRequests -> MultibranchPipeline { multibranchPipelineNumberOfFailingPullRequests, ..} ) <$> f multibranchPipelineNumberOfFailingPullRequests
{-# INLINE multibranchPipelineNumberOfFailingPullRequestsL #-}

-- | 'multibranchPipelineNumberOfSuccessfulBranches' Lens
multibranchPipelineNumberOfSuccessfulBranchesL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineNumberOfSuccessfulBranchesL f MultibranchPipeline{..} = (\multibranchPipelineNumberOfSuccessfulBranches -> MultibranchPipeline { multibranchPipelineNumberOfSuccessfulBranches, ..} ) <$> f multibranchPipelineNumberOfSuccessfulBranches
{-# INLINE multibranchPipelineNumberOfSuccessfulBranchesL #-}

-- | 'multibranchPipelineNumberOfSuccessfulPullRequests' Lens
multibranchPipelineNumberOfSuccessfulPullRequestsL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineNumberOfSuccessfulPullRequestsL f MultibranchPipeline{..} = (\multibranchPipelineNumberOfSuccessfulPullRequests -> MultibranchPipeline { multibranchPipelineNumberOfSuccessfulPullRequests, ..} ) <$> f multibranchPipelineNumberOfSuccessfulPullRequests
{-# INLINE multibranchPipelineNumberOfSuccessfulPullRequestsL #-}

-- | 'multibranchPipelineTotalNumberOfBranches' Lens
multibranchPipelineTotalNumberOfBranchesL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineTotalNumberOfBranchesL f MultibranchPipeline{..} = (\multibranchPipelineTotalNumberOfBranches -> MultibranchPipeline { multibranchPipelineTotalNumberOfBranches, ..} ) <$> f multibranchPipelineTotalNumberOfBranches
{-# INLINE multibranchPipelineTotalNumberOfBranchesL #-}

-- | 'multibranchPipelineTotalNumberOfPullRequests' Lens
multibranchPipelineTotalNumberOfPullRequestsL :: Lens_' MultibranchPipeline (Maybe Int)
multibranchPipelineTotalNumberOfPullRequestsL f MultibranchPipeline{..} = (\multibranchPipelineTotalNumberOfPullRequests -> MultibranchPipeline { multibranchPipelineTotalNumberOfPullRequests, ..} ) <$> f multibranchPipelineTotalNumberOfPullRequests
{-# INLINE multibranchPipelineTotalNumberOfPullRequestsL #-}

-- | 'multibranchPipelineClass' Lens
multibranchPipelineClassL :: Lens_' MultibranchPipeline (Maybe Text)
multibranchPipelineClassL f MultibranchPipeline{..} = (\multibranchPipelineClass -> MultibranchPipeline { multibranchPipelineClass, ..} ) <$> f multibranchPipelineClass
{-# INLINE multibranchPipelineClassL #-}



-- * NullSCM

-- | 'nullSCMClass' Lens
nullSCMClassL :: Lens_' NullSCM (Maybe Text)
nullSCMClassL f NullSCM{..} = (\nullSCMClass -> NullSCM { nullSCMClass, ..} ) <$> f nullSCMClass
{-# INLINE nullSCMClassL #-}



-- * Organisation

-- | 'organisationClass' Lens
organisationClassL :: Lens_' Organisation (Maybe Text)
organisationClassL f Organisation{..} = (\organisationClass -> Organisation { organisationClass, ..} ) <$> f organisationClass
{-# INLINE organisationClassL #-}

-- | 'organisationName' Lens
organisationNameL :: Lens_' Organisation (Maybe Text)
organisationNameL f Organisation{..} = (\organisationName -> Organisation { organisationName, ..} ) <$> f organisationName
{-# INLINE organisationNameL #-}



-- * Pipeline

-- | 'pipelineClass' Lens
pipelineClassL :: Lens_' Pipeline (Maybe Text)
pipelineClassL f Pipeline{..} = (\pipelineClass -> Pipeline { pipelineClass, ..} ) <$> f pipelineClass
{-# INLINE pipelineClassL #-}

-- | 'pipelineOrganization' Lens
pipelineOrganizationL :: Lens_' Pipeline (Maybe Text)
pipelineOrganizationL f Pipeline{..} = (\pipelineOrganization -> Pipeline { pipelineOrganization, ..} ) <$> f pipelineOrganization
{-# INLINE pipelineOrganizationL #-}

-- | 'pipelineName' Lens
pipelineNameL :: Lens_' Pipeline (Maybe Text)
pipelineNameL f Pipeline{..} = (\pipelineName -> Pipeline { pipelineName, ..} ) <$> f pipelineName
{-# INLINE pipelineNameL #-}

-- | 'pipelineDisplayName' Lens
pipelineDisplayNameL :: Lens_' Pipeline (Maybe Text)
pipelineDisplayNameL f Pipeline{..} = (\pipelineDisplayName -> Pipeline { pipelineDisplayName, ..} ) <$> f pipelineDisplayName
{-# INLINE pipelineDisplayNameL #-}

-- | 'pipelineFullName' Lens
pipelineFullNameL :: Lens_' Pipeline (Maybe Text)
pipelineFullNameL f Pipeline{..} = (\pipelineFullName -> Pipeline { pipelineFullName, ..} ) <$> f pipelineFullName
{-# INLINE pipelineFullNameL #-}

-- | 'pipelineWeatherScore' Lens
pipelineWeatherScoreL :: Lens_' Pipeline (Maybe Int)
pipelineWeatherScoreL f Pipeline{..} = (\pipelineWeatherScore -> Pipeline { pipelineWeatherScore, ..} ) <$> f pipelineWeatherScore
{-# INLINE pipelineWeatherScoreL #-}

-- | 'pipelineEstimatedDurationInMillis' Lens
pipelineEstimatedDurationInMillisL :: Lens_' Pipeline (Maybe Int)
pipelineEstimatedDurationInMillisL f Pipeline{..} = (\pipelineEstimatedDurationInMillis -> Pipeline { pipelineEstimatedDurationInMillis, ..} ) <$> f pipelineEstimatedDurationInMillis
{-# INLINE pipelineEstimatedDurationInMillisL #-}

-- | 'pipelineLatestRun' Lens
pipelineLatestRunL :: Lens_' Pipeline (Maybe PipelinelatestRun)
pipelineLatestRunL f Pipeline{..} = (\pipelineLatestRun -> Pipeline { pipelineLatestRun, ..} ) <$> f pipelineLatestRun
{-# INLINE pipelineLatestRunL #-}



-- * PipelineActivity

-- | 'pipelineActivityClass' Lens
pipelineActivityClassL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityClassL f PipelineActivity{..} = (\pipelineActivityClass -> PipelineActivity { pipelineActivityClass, ..} ) <$> f pipelineActivityClass
{-# INLINE pipelineActivityClassL #-}

-- | 'pipelineActivityArtifacts' Lens
pipelineActivityArtifactsL :: Lens_' PipelineActivity (Maybe [PipelineActivityartifacts])
pipelineActivityArtifactsL f PipelineActivity{..} = (\pipelineActivityArtifacts -> PipelineActivity { pipelineActivityArtifacts, ..} ) <$> f pipelineActivityArtifacts
{-# INLINE pipelineActivityArtifactsL #-}

-- | 'pipelineActivityDurationInMillis' Lens
pipelineActivityDurationInMillisL :: Lens_' PipelineActivity (Maybe Int)
pipelineActivityDurationInMillisL f PipelineActivity{..} = (\pipelineActivityDurationInMillis -> PipelineActivity { pipelineActivityDurationInMillis, ..} ) <$> f pipelineActivityDurationInMillis
{-# INLINE pipelineActivityDurationInMillisL #-}

-- | 'pipelineActivityEstimatedDurationInMillis' Lens
pipelineActivityEstimatedDurationInMillisL :: Lens_' PipelineActivity (Maybe Int)
pipelineActivityEstimatedDurationInMillisL f PipelineActivity{..} = (\pipelineActivityEstimatedDurationInMillis -> PipelineActivity { pipelineActivityEstimatedDurationInMillis, ..} ) <$> f pipelineActivityEstimatedDurationInMillis
{-# INLINE pipelineActivityEstimatedDurationInMillisL #-}

-- | 'pipelineActivityEnQueueTime' Lens
pipelineActivityEnQueueTimeL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityEnQueueTimeL f PipelineActivity{..} = (\pipelineActivityEnQueueTime -> PipelineActivity { pipelineActivityEnQueueTime, ..} ) <$> f pipelineActivityEnQueueTime
{-# INLINE pipelineActivityEnQueueTimeL #-}

-- | 'pipelineActivityEndTime' Lens
pipelineActivityEndTimeL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityEndTimeL f PipelineActivity{..} = (\pipelineActivityEndTime -> PipelineActivity { pipelineActivityEndTime, ..} ) <$> f pipelineActivityEndTime
{-# INLINE pipelineActivityEndTimeL #-}

-- | 'pipelineActivityId' Lens
pipelineActivityIdL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityIdL f PipelineActivity{..} = (\pipelineActivityId -> PipelineActivity { pipelineActivityId, ..} ) <$> f pipelineActivityId
{-# INLINE pipelineActivityIdL #-}

-- | 'pipelineActivityOrganization' Lens
pipelineActivityOrganizationL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityOrganizationL f PipelineActivity{..} = (\pipelineActivityOrganization -> PipelineActivity { pipelineActivityOrganization, ..} ) <$> f pipelineActivityOrganization
{-# INLINE pipelineActivityOrganizationL #-}

-- | 'pipelineActivityPipeline' Lens
pipelineActivityPipelineL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityPipelineL f PipelineActivity{..} = (\pipelineActivityPipeline -> PipelineActivity { pipelineActivityPipeline, ..} ) <$> f pipelineActivityPipeline
{-# INLINE pipelineActivityPipelineL #-}

-- | 'pipelineActivityResult' Lens
pipelineActivityResultL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityResultL f PipelineActivity{..} = (\pipelineActivityResult -> PipelineActivity { pipelineActivityResult, ..} ) <$> f pipelineActivityResult
{-# INLINE pipelineActivityResultL #-}

-- | 'pipelineActivityRunSummary' Lens
pipelineActivityRunSummaryL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityRunSummaryL f PipelineActivity{..} = (\pipelineActivityRunSummary -> PipelineActivity { pipelineActivityRunSummary, ..} ) <$> f pipelineActivityRunSummary
{-# INLINE pipelineActivityRunSummaryL #-}

-- | 'pipelineActivityStartTime' Lens
pipelineActivityStartTimeL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityStartTimeL f PipelineActivity{..} = (\pipelineActivityStartTime -> PipelineActivity { pipelineActivityStartTime, ..} ) <$> f pipelineActivityStartTime
{-# INLINE pipelineActivityStartTimeL #-}

-- | 'pipelineActivityState' Lens
pipelineActivityStateL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityStateL f PipelineActivity{..} = (\pipelineActivityState -> PipelineActivity { pipelineActivityState, ..} ) <$> f pipelineActivityState
{-# INLINE pipelineActivityStateL #-}

-- | 'pipelineActivityType' Lens
pipelineActivityTypeL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityTypeL f PipelineActivity{..} = (\pipelineActivityType -> PipelineActivity { pipelineActivityType, ..} ) <$> f pipelineActivityType
{-# INLINE pipelineActivityTypeL #-}

-- | 'pipelineActivityCommitId' Lens
pipelineActivityCommitIdL :: Lens_' PipelineActivity (Maybe Text)
pipelineActivityCommitIdL f PipelineActivity{..} = (\pipelineActivityCommitId -> PipelineActivity { pipelineActivityCommitId, ..} ) <$> f pipelineActivityCommitId
{-# INLINE pipelineActivityCommitIdL #-}



-- * PipelineActivityartifacts

-- | 'pipelineActivityartifactsName' Lens
pipelineActivityartifactsNameL :: Lens_' PipelineActivityartifacts (Maybe Text)
pipelineActivityartifactsNameL f PipelineActivityartifacts{..} = (\pipelineActivityartifactsName -> PipelineActivityartifacts { pipelineActivityartifactsName, ..} ) <$> f pipelineActivityartifactsName
{-# INLINE pipelineActivityartifactsNameL #-}

-- | 'pipelineActivityartifactsSize' Lens
pipelineActivityartifactsSizeL :: Lens_' PipelineActivityartifacts (Maybe Int)
pipelineActivityartifactsSizeL f PipelineActivityartifacts{..} = (\pipelineActivityartifactsSize -> PipelineActivityartifacts { pipelineActivityartifactsSize, ..} ) <$> f pipelineActivityartifactsSize
{-# INLINE pipelineActivityartifactsSizeL #-}

-- | 'pipelineActivityartifactsUrl' Lens
pipelineActivityartifactsUrlL :: Lens_' PipelineActivityartifacts (Maybe Text)
pipelineActivityartifactsUrlL f PipelineActivityartifacts{..} = (\pipelineActivityartifactsUrl -> PipelineActivityartifacts { pipelineActivityartifactsUrl, ..} ) <$> f pipelineActivityartifactsUrl
{-# INLINE pipelineActivityartifactsUrlL #-}

-- | 'pipelineActivityartifactsClass' Lens
pipelineActivityartifactsClassL :: Lens_' PipelineActivityartifacts (Maybe Text)
pipelineActivityartifactsClassL f PipelineActivityartifacts{..} = (\pipelineActivityartifactsClass -> PipelineActivityartifacts { pipelineActivityartifactsClass, ..} ) <$> f pipelineActivityartifactsClass
{-# INLINE pipelineActivityartifactsClassL #-}



-- * PipelineBranchesitem

-- | 'pipelineBranchesitemDisplayName' Lens
pipelineBranchesitemDisplayNameL :: Lens_' PipelineBranchesitem (Maybe Text)
pipelineBranchesitemDisplayNameL f PipelineBranchesitem{..} = (\pipelineBranchesitemDisplayName -> PipelineBranchesitem { pipelineBranchesitemDisplayName, ..} ) <$> f pipelineBranchesitemDisplayName
{-# INLINE pipelineBranchesitemDisplayNameL #-}

-- | 'pipelineBranchesitemEstimatedDurationInMillis' Lens
pipelineBranchesitemEstimatedDurationInMillisL :: Lens_' PipelineBranchesitem (Maybe Int)
pipelineBranchesitemEstimatedDurationInMillisL f PipelineBranchesitem{..} = (\pipelineBranchesitemEstimatedDurationInMillis -> PipelineBranchesitem { pipelineBranchesitemEstimatedDurationInMillis, ..} ) <$> f pipelineBranchesitemEstimatedDurationInMillis
{-# INLINE pipelineBranchesitemEstimatedDurationInMillisL #-}

-- | 'pipelineBranchesitemName' Lens
pipelineBranchesitemNameL :: Lens_' PipelineBranchesitem (Maybe Text)
pipelineBranchesitemNameL f PipelineBranchesitem{..} = (\pipelineBranchesitemName -> PipelineBranchesitem { pipelineBranchesitemName, ..} ) <$> f pipelineBranchesitemName
{-# INLINE pipelineBranchesitemNameL #-}

-- | 'pipelineBranchesitemWeatherScore' Lens
pipelineBranchesitemWeatherScoreL :: Lens_' PipelineBranchesitem (Maybe Int)
pipelineBranchesitemWeatherScoreL f PipelineBranchesitem{..} = (\pipelineBranchesitemWeatherScore -> PipelineBranchesitem { pipelineBranchesitemWeatherScore, ..} ) <$> f pipelineBranchesitemWeatherScore
{-# INLINE pipelineBranchesitemWeatherScoreL #-}

-- | 'pipelineBranchesitemLatestRun' Lens
pipelineBranchesitemLatestRunL :: Lens_' PipelineBranchesitem (Maybe PipelineBranchesitemlatestRun)
pipelineBranchesitemLatestRunL f PipelineBranchesitem{..} = (\pipelineBranchesitemLatestRun -> PipelineBranchesitem { pipelineBranchesitemLatestRun, ..} ) <$> f pipelineBranchesitemLatestRun
{-# INLINE pipelineBranchesitemLatestRunL #-}

-- | 'pipelineBranchesitemOrganization' Lens
pipelineBranchesitemOrganizationL :: Lens_' PipelineBranchesitem (Maybe Text)
pipelineBranchesitemOrganizationL f PipelineBranchesitem{..} = (\pipelineBranchesitemOrganization -> PipelineBranchesitem { pipelineBranchesitemOrganization, ..} ) <$> f pipelineBranchesitemOrganization
{-# INLINE pipelineBranchesitemOrganizationL #-}

-- | 'pipelineBranchesitemPullRequest' Lens
pipelineBranchesitemPullRequestL :: Lens_' PipelineBranchesitem (Maybe PipelineBranchesitempullRequest)
pipelineBranchesitemPullRequestL f PipelineBranchesitem{..} = (\pipelineBranchesitemPullRequest -> PipelineBranchesitem { pipelineBranchesitemPullRequest, ..} ) <$> f pipelineBranchesitemPullRequest
{-# INLINE pipelineBranchesitemPullRequestL #-}

-- | 'pipelineBranchesitemTotalNumberOfPullRequests' Lens
pipelineBranchesitemTotalNumberOfPullRequestsL :: Lens_' PipelineBranchesitem (Maybe Int)
pipelineBranchesitemTotalNumberOfPullRequestsL f PipelineBranchesitem{..} = (\pipelineBranchesitemTotalNumberOfPullRequests -> PipelineBranchesitem { pipelineBranchesitemTotalNumberOfPullRequests, ..} ) <$> f pipelineBranchesitemTotalNumberOfPullRequests
{-# INLINE pipelineBranchesitemTotalNumberOfPullRequestsL #-}

-- | 'pipelineBranchesitemClass' Lens
pipelineBranchesitemClassL :: Lens_' PipelineBranchesitem (Maybe Text)
pipelineBranchesitemClassL f PipelineBranchesitem{..} = (\pipelineBranchesitemClass -> PipelineBranchesitem { pipelineBranchesitemClass, ..} ) <$> f pipelineBranchesitemClass
{-# INLINE pipelineBranchesitemClassL #-}



-- * PipelineBranchesitemlatestRun

-- | 'pipelineBranchesitemlatestRunDurationInMillis' Lens
pipelineBranchesitemlatestRunDurationInMillisL :: Lens_' PipelineBranchesitemlatestRun (Maybe Int)
pipelineBranchesitemlatestRunDurationInMillisL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunDurationInMillis -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunDurationInMillis, ..} ) <$> f pipelineBranchesitemlatestRunDurationInMillis
{-# INLINE pipelineBranchesitemlatestRunDurationInMillisL #-}

-- | 'pipelineBranchesitemlatestRunEstimatedDurationInMillis' Lens
pipelineBranchesitemlatestRunEstimatedDurationInMillisL :: Lens_' PipelineBranchesitemlatestRun (Maybe Int)
pipelineBranchesitemlatestRunEstimatedDurationInMillisL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunEstimatedDurationInMillis -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunEstimatedDurationInMillis, ..} ) <$> f pipelineBranchesitemlatestRunEstimatedDurationInMillis
{-# INLINE pipelineBranchesitemlatestRunEstimatedDurationInMillisL #-}

-- | 'pipelineBranchesitemlatestRunEnQueueTime' Lens
pipelineBranchesitemlatestRunEnQueueTimeL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunEnQueueTimeL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunEnQueueTime -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunEnQueueTime, ..} ) <$> f pipelineBranchesitemlatestRunEnQueueTime
{-# INLINE pipelineBranchesitemlatestRunEnQueueTimeL #-}

-- | 'pipelineBranchesitemlatestRunEndTime' Lens
pipelineBranchesitemlatestRunEndTimeL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunEndTimeL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunEndTime -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunEndTime, ..} ) <$> f pipelineBranchesitemlatestRunEndTime
{-# INLINE pipelineBranchesitemlatestRunEndTimeL #-}

-- | 'pipelineBranchesitemlatestRunId' Lens
pipelineBranchesitemlatestRunIdL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunIdL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunId -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunId, ..} ) <$> f pipelineBranchesitemlatestRunId
{-# INLINE pipelineBranchesitemlatestRunIdL #-}

-- | 'pipelineBranchesitemlatestRunOrganization' Lens
pipelineBranchesitemlatestRunOrganizationL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunOrganizationL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunOrganization -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunOrganization, ..} ) <$> f pipelineBranchesitemlatestRunOrganization
{-# INLINE pipelineBranchesitemlatestRunOrganizationL #-}

-- | 'pipelineBranchesitemlatestRunPipeline' Lens
pipelineBranchesitemlatestRunPipelineL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunPipelineL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunPipeline -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunPipeline, ..} ) <$> f pipelineBranchesitemlatestRunPipeline
{-# INLINE pipelineBranchesitemlatestRunPipelineL #-}

-- | 'pipelineBranchesitemlatestRunResult' Lens
pipelineBranchesitemlatestRunResultL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunResultL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunResult -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunResult, ..} ) <$> f pipelineBranchesitemlatestRunResult
{-# INLINE pipelineBranchesitemlatestRunResultL #-}

-- | 'pipelineBranchesitemlatestRunRunSummary' Lens
pipelineBranchesitemlatestRunRunSummaryL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunRunSummaryL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunRunSummary -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunRunSummary, ..} ) <$> f pipelineBranchesitemlatestRunRunSummary
{-# INLINE pipelineBranchesitemlatestRunRunSummaryL #-}

-- | 'pipelineBranchesitemlatestRunStartTime' Lens
pipelineBranchesitemlatestRunStartTimeL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunStartTimeL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunStartTime -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunStartTime, ..} ) <$> f pipelineBranchesitemlatestRunStartTime
{-# INLINE pipelineBranchesitemlatestRunStartTimeL #-}

-- | 'pipelineBranchesitemlatestRunState' Lens
pipelineBranchesitemlatestRunStateL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunStateL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunState -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunState, ..} ) <$> f pipelineBranchesitemlatestRunState
{-# INLINE pipelineBranchesitemlatestRunStateL #-}

-- | 'pipelineBranchesitemlatestRunType' Lens
pipelineBranchesitemlatestRunTypeL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunTypeL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunType -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunType, ..} ) <$> f pipelineBranchesitemlatestRunType
{-# INLINE pipelineBranchesitemlatestRunTypeL #-}

-- | 'pipelineBranchesitemlatestRunCommitId' Lens
pipelineBranchesitemlatestRunCommitIdL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunCommitIdL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunCommitId -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunCommitId, ..} ) <$> f pipelineBranchesitemlatestRunCommitId
{-# INLINE pipelineBranchesitemlatestRunCommitIdL #-}

-- | 'pipelineBranchesitemlatestRunClass' Lens
pipelineBranchesitemlatestRunClassL :: Lens_' PipelineBranchesitemlatestRun (Maybe Text)
pipelineBranchesitemlatestRunClassL f PipelineBranchesitemlatestRun{..} = (\pipelineBranchesitemlatestRunClass -> PipelineBranchesitemlatestRun { pipelineBranchesitemlatestRunClass, ..} ) <$> f pipelineBranchesitemlatestRunClass
{-# INLINE pipelineBranchesitemlatestRunClassL #-}



-- * PipelineBranchesitempullRequest

-- | 'pipelineBranchesitempullRequestLinks' Lens
pipelineBranchesitempullRequestLinksL :: Lens_' PipelineBranchesitempullRequest (Maybe PipelineBranchesitempullRequestlinks)
pipelineBranchesitempullRequestLinksL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestLinks -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestLinks, ..} ) <$> f pipelineBranchesitempullRequestLinks
{-# INLINE pipelineBranchesitempullRequestLinksL #-}

-- | 'pipelineBranchesitempullRequestAuthor' Lens
pipelineBranchesitempullRequestAuthorL :: Lens_' PipelineBranchesitempullRequest (Maybe Text)
pipelineBranchesitempullRequestAuthorL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestAuthor -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestAuthor, ..} ) <$> f pipelineBranchesitempullRequestAuthor
{-# INLINE pipelineBranchesitempullRequestAuthorL #-}

-- | 'pipelineBranchesitempullRequestId' Lens
pipelineBranchesitempullRequestIdL :: Lens_' PipelineBranchesitempullRequest (Maybe Text)
pipelineBranchesitempullRequestIdL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestId -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestId, ..} ) <$> f pipelineBranchesitempullRequestId
{-# INLINE pipelineBranchesitempullRequestIdL #-}

-- | 'pipelineBranchesitempullRequestTitle' Lens
pipelineBranchesitempullRequestTitleL :: Lens_' PipelineBranchesitempullRequest (Maybe Text)
pipelineBranchesitempullRequestTitleL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestTitle -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestTitle, ..} ) <$> f pipelineBranchesitempullRequestTitle
{-# INLINE pipelineBranchesitempullRequestTitleL #-}

-- | 'pipelineBranchesitempullRequestUrl' Lens
pipelineBranchesitempullRequestUrlL :: Lens_' PipelineBranchesitempullRequest (Maybe Text)
pipelineBranchesitempullRequestUrlL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestUrl -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestUrl, ..} ) <$> f pipelineBranchesitempullRequestUrl
{-# INLINE pipelineBranchesitempullRequestUrlL #-}

-- | 'pipelineBranchesitempullRequestClass' Lens
pipelineBranchesitempullRequestClassL :: Lens_' PipelineBranchesitempullRequest (Maybe Text)
pipelineBranchesitempullRequestClassL f PipelineBranchesitempullRequest{..} = (\pipelineBranchesitempullRequestClass -> PipelineBranchesitempullRequest { pipelineBranchesitempullRequestClass, ..} ) <$> f pipelineBranchesitempullRequestClass
{-# INLINE pipelineBranchesitempullRequestClassL #-}



-- * PipelineBranchesitempullRequestlinks

-- | 'pipelineBranchesitempullRequestlinksSelf' Lens
pipelineBranchesitempullRequestlinksSelfL :: Lens_' PipelineBranchesitempullRequestlinks (Maybe Text)
pipelineBranchesitempullRequestlinksSelfL f PipelineBranchesitempullRequestlinks{..} = (\pipelineBranchesitempullRequestlinksSelf -> PipelineBranchesitempullRequestlinks { pipelineBranchesitempullRequestlinksSelf, ..} ) <$> f pipelineBranchesitempullRequestlinksSelf
{-# INLINE pipelineBranchesitempullRequestlinksSelfL #-}

-- | 'pipelineBranchesitempullRequestlinksClass' Lens
pipelineBranchesitempullRequestlinksClassL :: Lens_' PipelineBranchesitempullRequestlinks (Maybe Text)
pipelineBranchesitempullRequestlinksClassL f PipelineBranchesitempullRequestlinks{..} = (\pipelineBranchesitempullRequestlinksClass -> PipelineBranchesitempullRequestlinks { pipelineBranchesitempullRequestlinksClass, ..} ) <$> f pipelineBranchesitempullRequestlinksClass
{-# INLINE pipelineBranchesitempullRequestlinksClassL #-}



-- * PipelineFolderImpl

-- | 'pipelineFolderImplClass' Lens
pipelineFolderImplClassL :: Lens_' PipelineFolderImpl (Maybe Text)
pipelineFolderImplClassL f PipelineFolderImpl{..} = (\pipelineFolderImplClass -> PipelineFolderImpl { pipelineFolderImplClass, ..} ) <$> f pipelineFolderImplClass
{-# INLINE pipelineFolderImplClassL #-}

-- | 'pipelineFolderImplDisplayName' Lens
pipelineFolderImplDisplayNameL :: Lens_' PipelineFolderImpl (Maybe Text)
pipelineFolderImplDisplayNameL f PipelineFolderImpl{..} = (\pipelineFolderImplDisplayName -> PipelineFolderImpl { pipelineFolderImplDisplayName, ..} ) <$> f pipelineFolderImplDisplayName
{-# INLINE pipelineFolderImplDisplayNameL #-}

-- | 'pipelineFolderImplFullName' Lens
pipelineFolderImplFullNameL :: Lens_' PipelineFolderImpl (Maybe Text)
pipelineFolderImplFullNameL f PipelineFolderImpl{..} = (\pipelineFolderImplFullName -> PipelineFolderImpl { pipelineFolderImplFullName, ..} ) <$> f pipelineFolderImplFullName
{-# INLINE pipelineFolderImplFullNameL #-}

-- | 'pipelineFolderImplName' Lens
pipelineFolderImplNameL :: Lens_' PipelineFolderImpl (Maybe Text)
pipelineFolderImplNameL f PipelineFolderImpl{..} = (\pipelineFolderImplName -> PipelineFolderImpl { pipelineFolderImplName, ..} ) <$> f pipelineFolderImplName
{-# INLINE pipelineFolderImplNameL #-}

-- | 'pipelineFolderImplOrganization' Lens
pipelineFolderImplOrganizationL :: Lens_' PipelineFolderImpl (Maybe Text)
pipelineFolderImplOrganizationL f PipelineFolderImpl{..} = (\pipelineFolderImplOrganization -> PipelineFolderImpl { pipelineFolderImplOrganization, ..} ) <$> f pipelineFolderImplOrganization
{-# INLINE pipelineFolderImplOrganizationL #-}

-- | 'pipelineFolderImplNumberOfFolders' Lens
pipelineFolderImplNumberOfFoldersL :: Lens_' PipelineFolderImpl (Maybe Int)
pipelineFolderImplNumberOfFoldersL f PipelineFolderImpl{..} = (\pipelineFolderImplNumberOfFolders -> PipelineFolderImpl { pipelineFolderImplNumberOfFolders, ..} ) <$> f pipelineFolderImplNumberOfFolders
{-# INLINE pipelineFolderImplNumberOfFoldersL #-}

-- | 'pipelineFolderImplNumberOfPipelines' Lens
pipelineFolderImplNumberOfPipelinesL :: Lens_' PipelineFolderImpl (Maybe Int)
pipelineFolderImplNumberOfPipelinesL f PipelineFolderImpl{..} = (\pipelineFolderImplNumberOfPipelines -> PipelineFolderImpl { pipelineFolderImplNumberOfPipelines, ..} ) <$> f pipelineFolderImplNumberOfPipelines
{-# INLINE pipelineFolderImplNumberOfPipelinesL #-}



-- * PipelineImpl

-- | 'pipelineImplClass' Lens
pipelineImplClassL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplClassL f PipelineImpl{..} = (\pipelineImplClass -> PipelineImpl { pipelineImplClass, ..} ) <$> f pipelineImplClass
{-# INLINE pipelineImplClassL #-}

-- | 'pipelineImplDisplayName' Lens
pipelineImplDisplayNameL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplDisplayNameL f PipelineImpl{..} = (\pipelineImplDisplayName -> PipelineImpl { pipelineImplDisplayName, ..} ) <$> f pipelineImplDisplayName
{-# INLINE pipelineImplDisplayNameL #-}

-- | 'pipelineImplEstimatedDurationInMillis' Lens
pipelineImplEstimatedDurationInMillisL :: Lens_' PipelineImpl (Maybe Int)
pipelineImplEstimatedDurationInMillisL f PipelineImpl{..} = (\pipelineImplEstimatedDurationInMillis -> PipelineImpl { pipelineImplEstimatedDurationInMillis, ..} ) <$> f pipelineImplEstimatedDurationInMillis
{-# INLINE pipelineImplEstimatedDurationInMillisL #-}

-- | 'pipelineImplFullName' Lens
pipelineImplFullNameL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplFullNameL f PipelineImpl{..} = (\pipelineImplFullName -> PipelineImpl { pipelineImplFullName, ..} ) <$> f pipelineImplFullName
{-# INLINE pipelineImplFullNameL #-}

-- | 'pipelineImplLatestRun' Lens
pipelineImplLatestRunL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplLatestRunL f PipelineImpl{..} = (\pipelineImplLatestRun -> PipelineImpl { pipelineImplLatestRun, ..} ) <$> f pipelineImplLatestRun
{-# INLINE pipelineImplLatestRunL #-}

-- | 'pipelineImplName' Lens
pipelineImplNameL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplNameL f PipelineImpl{..} = (\pipelineImplName -> PipelineImpl { pipelineImplName, ..} ) <$> f pipelineImplName
{-# INLINE pipelineImplNameL #-}

-- | 'pipelineImplOrganization' Lens
pipelineImplOrganizationL :: Lens_' PipelineImpl (Maybe Text)
pipelineImplOrganizationL f PipelineImpl{..} = (\pipelineImplOrganization -> PipelineImpl { pipelineImplOrganization, ..} ) <$> f pipelineImplOrganization
{-# INLINE pipelineImplOrganizationL #-}

-- | 'pipelineImplWeatherScore' Lens
pipelineImplWeatherScoreL :: Lens_' PipelineImpl (Maybe Int)
pipelineImplWeatherScoreL f PipelineImpl{..} = (\pipelineImplWeatherScore -> PipelineImpl { pipelineImplWeatherScore, ..} ) <$> f pipelineImplWeatherScore
{-# INLINE pipelineImplWeatherScoreL #-}

-- | 'pipelineImplLinks' Lens
pipelineImplLinksL :: Lens_' PipelineImpl (Maybe PipelineImpllinks)
pipelineImplLinksL f PipelineImpl{..} = (\pipelineImplLinks -> PipelineImpl { pipelineImplLinks, ..} ) <$> f pipelineImplLinks
{-# INLINE pipelineImplLinksL #-}



-- * PipelineImpllinks

-- | 'pipelineImpllinksRuns' Lens
pipelineImpllinksRunsL :: Lens_' PipelineImpllinks (Maybe Link)
pipelineImpllinksRunsL f PipelineImpllinks{..} = (\pipelineImpllinksRuns -> PipelineImpllinks { pipelineImpllinksRuns, ..} ) <$> f pipelineImpllinksRuns
{-# INLINE pipelineImpllinksRunsL #-}

-- | 'pipelineImpllinksSelf' Lens
pipelineImpllinksSelfL :: Lens_' PipelineImpllinks (Maybe Link)
pipelineImpllinksSelfL f PipelineImpllinks{..} = (\pipelineImpllinksSelf -> PipelineImpllinks { pipelineImpllinksSelf, ..} ) <$> f pipelineImpllinksSelf
{-# INLINE pipelineImpllinksSelfL #-}

-- | 'pipelineImpllinksQueue' Lens
pipelineImpllinksQueueL :: Lens_' PipelineImpllinks (Maybe Link)
pipelineImpllinksQueueL f PipelineImpllinks{..} = (\pipelineImpllinksQueue -> PipelineImpllinks { pipelineImpllinksQueue, ..} ) <$> f pipelineImpllinksQueue
{-# INLINE pipelineImpllinksQueueL #-}

-- | 'pipelineImpllinksActions' Lens
pipelineImpllinksActionsL :: Lens_' PipelineImpllinks (Maybe Link)
pipelineImpllinksActionsL f PipelineImpllinks{..} = (\pipelineImpllinksActions -> PipelineImpllinks { pipelineImpllinksActions, ..} ) <$> f pipelineImpllinksActions
{-# INLINE pipelineImpllinksActionsL #-}

-- | 'pipelineImpllinksClass' Lens
pipelineImpllinksClassL :: Lens_' PipelineImpllinks (Maybe Text)
pipelineImpllinksClassL f PipelineImpllinks{..} = (\pipelineImpllinksClass -> PipelineImpllinks { pipelineImpllinksClass, ..} ) <$> f pipelineImpllinksClass
{-# INLINE pipelineImpllinksClassL #-}



-- * PipelineRun

-- | 'pipelineRunClass' Lens
pipelineRunClassL :: Lens_' PipelineRun (Maybe Text)
pipelineRunClassL f PipelineRun{..} = (\pipelineRunClass -> PipelineRun { pipelineRunClass, ..} ) <$> f pipelineRunClass
{-# INLINE pipelineRunClassL #-}

-- | 'pipelineRunArtifacts' Lens
pipelineRunArtifactsL :: Lens_' PipelineRun (Maybe [PipelineRunartifacts])
pipelineRunArtifactsL f PipelineRun{..} = (\pipelineRunArtifacts -> PipelineRun { pipelineRunArtifacts, ..} ) <$> f pipelineRunArtifacts
{-# INLINE pipelineRunArtifactsL #-}

-- | 'pipelineRunDurationInMillis' Lens
pipelineRunDurationInMillisL :: Lens_' PipelineRun (Maybe Int)
pipelineRunDurationInMillisL f PipelineRun{..} = (\pipelineRunDurationInMillis -> PipelineRun { pipelineRunDurationInMillis, ..} ) <$> f pipelineRunDurationInMillis
{-# INLINE pipelineRunDurationInMillisL #-}

-- | 'pipelineRunEstimatedDurationInMillis' Lens
pipelineRunEstimatedDurationInMillisL :: Lens_' PipelineRun (Maybe Int)
pipelineRunEstimatedDurationInMillisL f PipelineRun{..} = (\pipelineRunEstimatedDurationInMillis -> PipelineRun { pipelineRunEstimatedDurationInMillis, ..} ) <$> f pipelineRunEstimatedDurationInMillis
{-# INLINE pipelineRunEstimatedDurationInMillisL #-}

-- | 'pipelineRunEnQueueTime' Lens
pipelineRunEnQueueTimeL :: Lens_' PipelineRun (Maybe Text)
pipelineRunEnQueueTimeL f PipelineRun{..} = (\pipelineRunEnQueueTime -> PipelineRun { pipelineRunEnQueueTime, ..} ) <$> f pipelineRunEnQueueTime
{-# INLINE pipelineRunEnQueueTimeL #-}

-- | 'pipelineRunEndTime' Lens
pipelineRunEndTimeL :: Lens_' PipelineRun (Maybe Text)
pipelineRunEndTimeL f PipelineRun{..} = (\pipelineRunEndTime -> PipelineRun { pipelineRunEndTime, ..} ) <$> f pipelineRunEndTime
{-# INLINE pipelineRunEndTimeL #-}

-- | 'pipelineRunId' Lens
pipelineRunIdL :: Lens_' PipelineRun (Maybe Text)
pipelineRunIdL f PipelineRun{..} = (\pipelineRunId -> PipelineRun { pipelineRunId, ..} ) <$> f pipelineRunId
{-# INLINE pipelineRunIdL #-}

-- | 'pipelineRunOrganization' Lens
pipelineRunOrganizationL :: Lens_' PipelineRun (Maybe Text)
pipelineRunOrganizationL f PipelineRun{..} = (\pipelineRunOrganization -> PipelineRun { pipelineRunOrganization, ..} ) <$> f pipelineRunOrganization
{-# INLINE pipelineRunOrganizationL #-}

-- | 'pipelineRunPipeline' Lens
pipelineRunPipelineL :: Lens_' PipelineRun (Maybe Text)
pipelineRunPipelineL f PipelineRun{..} = (\pipelineRunPipeline -> PipelineRun { pipelineRunPipeline, ..} ) <$> f pipelineRunPipeline
{-# INLINE pipelineRunPipelineL #-}

-- | 'pipelineRunResult' Lens
pipelineRunResultL :: Lens_' PipelineRun (Maybe Text)
pipelineRunResultL f PipelineRun{..} = (\pipelineRunResult -> PipelineRun { pipelineRunResult, ..} ) <$> f pipelineRunResult
{-# INLINE pipelineRunResultL #-}

-- | 'pipelineRunRunSummary' Lens
pipelineRunRunSummaryL :: Lens_' PipelineRun (Maybe Text)
pipelineRunRunSummaryL f PipelineRun{..} = (\pipelineRunRunSummary -> PipelineRun { pipelineRunRunSummary, ..} ) <$> f pipelineRunRunSummary
{-# INLINE pipelineRunRunSummaryL #-}

-- | 'pipelineRunStartTime' Lens
pipelineRunStartTimeL :: Lens_' PipelineRun (Maybe Text)
pipelineRunStartTimeL f PipelineRun{..} = (\pipelineRunStartTime -> PipelineRun { pipelineRunStartTime, ..} ) <$> f pipelineRunStartTime
{-# INLINE pipelineRunStartTimeL #-}

-- | 'pipelineRunState' Lens
pipelineRunStateL :: Lens_' PipelineRun (Maybe Text)
pipelineRunStateL f PipelineRun{..} = (\pipelineRunState -> PipelineRun { pipelineRunState, ..} ) <$> f pipelineRunState
{-# INLINE pipelineRunStateL #-}

-- | 'pipelineRunType' Lens
pipelineRunTypeL :: Lens_' PipelineRun (Maybe Text)
pipelineRunTypeL f PipelineRun{..} = (\pipelineRunType -> PipelineRun { pipelineRunType, ..} ) <$> f pipelineRunType
{-# INLINE pipelineRunTypeL #-}

-- | 'pipelineRunCommitId' Lens
pipelineRunCommitIdL :: Lens_' PipelineRun (Maybe Text)
pipelineRunCommitIdL f PipelineRun{..} = (\pipelineRunCommitId -> PipelineRun { pipelineRunCommitId, ..} ) <$> f pipelineRunCommitId
{-# INLINE pipelineRunCommitIdL #-}



-- * PipelineRunImpl

-- | 'pipelineRunImplClass' Lens
pipelineRunImplClassL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplClassL f PipelineRunImpl{..} = (\pipelineRunImplClass -> PipelineRunImpl { pipelineRunImplClass, ..} ) <$> f pipelineRunImplClass
{-# INLINE pipelineRunImplClassL #-}

-- | 'pipelineRunImplLinks' Lens
pipelineRunImplLinksL :: Lens_' PipelineRunImpl (Maybe PipelineRunImpllinks)
pipelineRunImplLinksL f PipelineRunImpl{..} = (\pipelineRunImplLinks -> PipelineRunImpl { pipelineRunImplLinks, ..} ) <$> f pipelineRunImplLinks
{-# INLINE pipelineRunImplLinksL #-}

-- | 'pipelineRunImplDurationInMillis' Lens
pipelineRunImplDurationInMillisL :: Lens_' PipelineRunImpl (Maybe Int)
pipelineRunImplDurationInMillisL f PipelineRunImpl{..} = (\pipelineRunImplDurationInMillis -> PipelineRunImpl { pipelineRunImplDurationInMillis, ..} ) <$> f pipelineRunImplDurationInMillis
{-# INLINE pipelineRunImplDurationInMillisL #-}

-- | 'pipelineRunImplEnQueueTime' Lens
pipelineRunImplEnQueueTimeL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplEnQueueTimeL f PipelineRunImpl{..} = (\pipelineRunImplEnQueueTime -> PipelineRunImpl { pipelineRunImplEnQueueTime, ..} ) <$> f pipelineRunImplEnQueueTime
{-# INLINE pipelineRunImplEnQueueTimeL #-}

-- | 'pipelineRunImplEndTime' Lens
pipelineRunImplEndTimeL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplEndTimeL f PipelineRunImpl{..} = (\pipelineRunImplEndTime -> PipelineRunImpl { pipelineRunImplEndTime, ..} ) <$> f pipelineRunImplEndTime
{-# INLINE pipelineRunImplEndTimeL #-}

-- | 'pipelineRunImplEstimatedDurationInMillis' Lens
pipelineRunImplEstimatedDurationInMillisL :: Lens_' PipelineRunImpl (Maybe Int)
pipelineRunImplEstimatedDurationInMillisL f PipelineRunImpl{..} = (\pipelineRunImplEstimatedDurationInMillis -> PipelineRunImpl { pipelineRunImplEstimatedDurationInMillis, ..} ) <$> f pipelineRunImplEstimatedDurationInMillis
{-# INLINE pipelineRunImplEstimatedDurationInMillisL #-}

-- | 'pipelineRunImplId' Lens
pipelineRunImplIdL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplIdL f PipelineRunImpl{..} = (\pipelineRunImplId -> PipelineRunImpl { pipelineRunImplId, ..} ) <$> f pipelineRunImplId
{-# INLINE pipelineRunImplIdL #-}

-- | 'pipelineRunImplOrganization' Lens
pipelineRunImplOrganizationL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplOrganizationL f PipelineRunImpl{..} = (\pipelineRunImplOrganization -> PipelineRunImpl { pipelineRunImplOrganization, ..} ) <$> f pipelineRunImplOrganization
{-# INLINE pipelineRunImplOrganizationL #-}

-- | 'pipelineRunImplPipeline' Lens
pipelineRunImplPipelineL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplPipelineL f PipelineRunImpl{..} = (\pipelineRunImplPipeline -> PipelineRunImpl { pipelineRunImplPipeline, ..} ) <$> f pipelineRunImplPipeline
{-# INLINE pipelineRunImplPipelineL #-}

-- | 'pipelineRunImplResult' Lens
pipelineRunImplResultL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplResultL f PipelineRunImpl{..} = (\pipelineRunImplResult -> PipelineRunImpl { pipelineRunImplResult, ..} ) <$> f pipelineRunImplResult
{-# INLINE pipelineRunImplResultL #-}

-- | 'pipelineRunImplRunSummary' Lens
pipelineRunImplRunSummaryL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplRunSummaryL f PipelineRunImpl{..} = (\pipelineRunImplRunSummary -> PipelineRunImpl { pipelineRunImplRunSummary, ..} ) <$> f pipelineRunImplRunSummary
{-# INLINE pipelineRunImplRunSummaryL #-}

-- | 'pipelineRunImplStartTime' Lens
pipelineRunImplStartTimeL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplStartTimeL f PipelineRunImpl{..} = (\pipelineRunImplStartTime -> PipelineRunImpl { pipelineRunImplStartTime, ..} ) <$> f pipelineRunImplStartTime
{-# INLINE pipelineRunImplStartTimeL #-}

-- | 'pipelineRunImplState' Lens
pipelineRunImplStateL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplStateL f PipelineRunImpl{..} = (\pipelineRunImplState -> PipelineRunImpl { pipelineRunImplState, ..} ) <$> f pipelineRunImplState
{-# INLINE pipelineRunImplStateL #-}

-- | 'pipelineRunImplType' Lens
pipelineRunImplTypeL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplTypeL f PipelineRunImpl{..} = (\pipelineRunImplType -> PipelineRunImpl { pipelineRunImplType, ..} ) <$> f pipelineRunImplType
{-# INLINE pipelineRunImplTypeL #-}

-- | 'pipelineRunImplCommitId' Lens
pipelineRunImplCommitIdL :: Lens_' PipelineRunImpl (Maybe Text)
pipelineRunImplCommitIdL f PipelineRunImpl{..} = (\pipelineRunImplCommitId -> PipelineRunImpl { pipelineRunImplCommitId, ..} ) <$> f pipelineRunImplCommitId
{-# INLINE pipelineRunImplCommitIdL #-}



-- * PipelineRunImpllinks

-- | 'pipelineRunImpllinksNodes' Lens
pipelineRunImpllinksNodesL :: Lens_' PipelineRunImpllinks (Maybe Link)
pipelineRunImpllinksNodesL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksNodes -> PipelineRunImpllinks { pipelineRunImpllinksNodes, ..} ) <$> f pipelineRunImpllinksNodes
{-# INLINE pipelineRunImpllinksNodesL #-}

-- | 'pipelineRunImpllinksLog' Lens
pipelineRunImpllinksLogL :: Lens_' PipelineRunImpllinks (Maybe Link)
pipelineRunImpllinksLogL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksLog -> PipelineRunImpllinks { pipelineRunImpllinksLog, ..} ) <$> f pipelineRunImpllinksLog
{-# INLINE pipelineRunImpllinksLogL #-}

-- | 'pipelineRunImpllinksSelf' Lens
pipelineRunImpllinksSelfL :: Lens_' PipelineRunImpllinks (Maybe Link)
pipelineRunImpllinksSelfL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksSelf -> PipelineRunImpllinks { pipelineRunImpllinksSelf, ..} ) <$> f pipelineRunImpllinksSelf
{-# INLINE pipelineRunImpllinksSelfL #-}

-- | 'pipelineRunImpllinksActions' Lens
pipelineRunImpllinksActionsL :: Lens_' PipelineRunImpllinks (Maybe Link)
pipelineRunImpllinksActionsL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksActions -> PipelineRunImpllinks { pipelineRunImpllinksActions, ..} ) <$> f pipelineRunImpllinksActions
{-# INLINE pipelineRunImpllinksActionsL #-}

-- | 'pipelineRunImpllinksSteps' Lens
pipelineRunImpllinksStepsL :: Lens_' PipelineRunImpllinks (Maybe Link)
pipelineRunImpllinksStepsL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksSteps -> PipelineRunImpllinks { pipelineRunImpllinksSteps, ..} ) <$> f pipelineRunImpllinksSteps
{-# INLINE pipelineRunImpllinksStepsL #-}

-- | 'pipelineRunImpllinksClass' Lens
pipelineRunImpllinksClassL :: Lens_' PipelineRunImpllinks (Maybe Text)
pipelineRunImpllinksClassL f PipelineRunImpllinks{..} = (\pipelineRunImpllinksClass -> PipelineRunImpllinks { pipelineRunImpllinksClass, ..} ) <$> f pipelineRunImpllinksClass
{-# INLINE pipelineRunImpllinksClassL #-}



-- * PipelineRunNode

-- | 'pipelineRunNodeClass' Lens
pipelineRunNodeClassL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeClassL f PipelineRunNode{..} = (\pipelineRunNodeClass -> PipelineRunNode { pipelineRunNodeClass, ..} ) <$> f pipelineRunNodeClass
{-# INLINE pipelineRunNodeClassL #-}

-- | 'pipelineRunNodeDisplayName' Lens
pipelineRunNodeDisplayNameL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeDisplayNameL f PipelineRunNode{..} = (\pipelineRunNodeDisplayName -> PipelineRunNode { pipelineRunNodeDisplayName, ..} ) <$> f pipelineRunNodeDisplayName
{-# INLINE pipelineRunNodeDisplayNameL #-}

-- | 'pipelineRunNodeDurationInMillis' Lens
pipelineRunNodeDurationInMillisL :: Lens_' PipelineRunNode (Maybe Int)
pipelineRunNodeDurationInMillisL f PipelineRunNode{..} = (\pipelineRunNodeDurationInMillis -> PipelineRunNode { pipelineRunNodeDurationInMillis, ..} ) <$> f pipelineRunNodeDurationInMillis
{-# INLINE pipelineRunNodeDurationInMillisL #-}

-- | 'pipelineRunNodeEdges' Lens
pipelineRunNodeEdgesL :: Lens_' PipelineRunNode (Maybe [PipelineRunNodeedges])
pipelineRunNodeEdgesL f PipelineRunNode{..} = (\pipelineRunNodeEdges -> PipelineRunNode { pipelineRunNodeEdges, ..} ) <$> f pipelineRunNodeEdges
{-# INLINE pipelineRunNodeEdgesL #-}

-- | 'pipelineRunNodeId' Lens
pipelineRunNodeIdL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeIdL f PipelineRunNode{..} = (\pipelineRunNodeId -> PipelineRunNode { pipelineRunNodeId, ..} ) <$> f pipelineRunNodeId
{-# INLINE pipelineRunNodeIdL #-}

-- | 'pipelineRunNodeResult' Lens
pipelineRunNodeResultL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeResultL f PipelineRunNode{..} = (\pipelineRunNodeResult -> PipelineRunNode { pipelineRunNodeResult, ..} ) <$> f pipelineRunNodeResult
{-# INLINE pipelineRunNodeResultL #-}

-- | 'pipelineRunNodeStartTime' Lens
pipelineRunNodeStartTimeL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeStartTimeL f PipelineRunNode{..} = (\pipelineRunNodeStartTime -> PipelineRunNode { pipelineRunNodeStartTime, ..} ) <$> f pipelineRunNodeStartTime
{-# INLINE pipelineRunNodeStartTimeL #-}

-- | 'pipelineRunNodeState' Lens
pipelineRunNodeStateL :: Lens_' PipelineRunNode (Maybe Text)
pipelineRunNodeStateL f PipelineRunNode{..} = (\pipelineRunNodeState -> PipelineRunNode { pipelineRunNodeState, ..} ) <$> f pipelineRunNodeState
{-# INLINE pipelineRunNodeStateL #-}



-- * PipelineRunNodeedges

-- | 'pipelineRunNodeedgesId' Lens
pipelineRunNodeedgesIdL :: Lens_' PipelineRunNodeedges (Maybe Text)
pipelineRunNodeedgesIdL f PipelineRunNodeedges{..} = (\pipelineRunNodeedgesId -> PipelineRunNodeedges { pipelineRunNodeedgesId, ..} ) <$> f pipelineRunNodeedgesId
{-# INLINE pipelineRunNodeedgesIdL #-}

-- | 'pipelineRunNodeedgesClass' Lens
pipelineRunNodeedgesClassL :: Lens_' PipelineRunNodeedges (Maybe Text)
pipelineRunNodeedgesClassL f PipelineRunNodeedges{..} = (\pipelineRunNodeedgesClass -> PipelineRunNodeedges { pipelineRunNodeedgesClass, ..} ) <$> f pipelineRunNodeedgesClass
{-# INLINE pipelineRunNodeedgesClassL #-}



-- * PipelineRunartifacts

-- | 'pipelineRunartifactsName' Lens
pipelineRunartifactsNameL :: Lens_' PipelineRunartifacts (Maybe Text)
pipelineRunartifactsNameL f PipelineRunartifacts{..} = (\pipelineRunartifactsName -> PipelineRunartifacts { pipelineRunartifactsName, ..} ) <$> f pipelineRunartifactsName
{-# INLINE pipelineRunartifactsNameL #-}

-- | 'pipelineRunartifactsSize' Lens
pipelineRunartifactsSizeL :: Lens_' PipelineRunartifacts (Maybe Int)
pipelineRunartifactsSizeL f PipelineRunartifacts{..} = (\pipelineRunartifactsSize -> PipelineRunartifacts { pipelineRunartifactsSize, ..} ) <$> f pipelineRunartifactsSize
{-# INLINE pipelineRunartifactsSizeL #-}

-- | 'pipelineRunartifactsUrl' Lens
pipelineRunartifactsUrlL :: Lens_' PipelineRunartifacts (Maybe Text)
pipelineRunartifactsUrlL f PipelineRunartifacts{..} = (\pipelineRunartifactsUrl -> PipelineRunartifacts { pipelineRunartifactsUrl, ..} ) <$> f pipelineRunartifactsUrl
{-# INLINE pipelineRunartifactsUrlL #-}

-- | 'pipelineRunartifactsClass' Lens
pipelineRunartifactsClassL :: Lens_' PipelineRunartifacts (Maybe Text)
pipelineRunartifactsClassL f PipelineRunartifacts{..} = (\pipelineRunartifactsClass -> PipelineRunartifacts { pipelineRunartifactsClass, ..} ) <$> f pipelineRunartifactsClass
{-# INLINE pipelineRunartifactsClassL #-}



-- * PipelineStepImpl

-- | 'pipelineStepImplClass' Lens
pipelineStepImplClassL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplClassL f PipelineStepImpl{..} = (\pipelineStepImplClass -> PipelineStepImpl { pipelineStepImplClass, ..} ) <$> f pipelineStepImplClass
{-# INLINE pipelineStepImplClassL #-}

-- | 'pipelineStepImplLinks' Lens
pipelineStepImplLinksL :: Lens_' PipelineStepImpl (Maybe PipelineStepImpllinks)
pipelineStepImplLinksL f PipelineStepImpl{..} = (\pipelineStepImplLinks -> PipelineStepImpl { pipelineStepImplLinks, ..} ) <$> f pipelineStepImplLinks
{-# INLINE pipelineStepImplLinksL #-}

-- | 'pipelineStepImplDisplayName' Lens
pipelineStepImplDisplayNameL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplDisplayNameL f PipelineStepImpl{..} = (\pipelineStepImplDisplayName -> PipelineStepImpl { pipelineStepImplDisplayName, ..} ) <$> f pipelineStepImplDisplayName
{-# INLINE pipelineStepImplDisplayNameL #-}

-- | 'pipelineStepImplDurationInMillis' Lens
pipelineStepImplDurationInMillisL :: Lens_' PipelineStepImpl (Maybe Int)
pipelineStepImplDurationInMillisL f PipelineStepImpl{..} = (\pipelineStepImplDurationInMillis -> PipelineStepImpl { pipelineStepImplDurationInMillis, ..} ) <$> f pipelineStepImplDurationInMillis
{-# INLINE pipelineStepImplDurationInMillisL #-}

-- | 'pipelineStepImplId' Lens
pipelineStepImplIdL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplIdL f PipelineStepImpl{..} = (\pipelineStepImplId -> PipelineStepImpl { pipelineStepImplId, ..} ) <$> f pipelineStepImplId
{-# INLINE pipelineStepImplIdL #-}

-- | 'pipelineStepImplInput' Lens
pipelineStepImplInputL :: Lens_' PipelineStepImpl (Maybe InputStepImpl)
pipelineStepImplInputL f PipelineStepImpl{..} = (\pipelineStepImplInput -> PipelineStepImpl { pipelineStepImplInput, ..} ) <$> f pipelineStepImplInput
{-# INLINE pipelineStepImplInputL #-}

-- | 'pipelineStepImplResult' Lens
pipelineStepImplResultL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplResultL f PipelineStepImpl{..} = (\pipelineStepImplResult -> PipelineStepImpl { pipelineStepImplResult, ..} ) <$> f pipelineStepImplResult
{-# INLINE pipelineStepImplResultL #-}

-- | 'pipelineStepImplStartTime' Lens
pipelineStepImplStartTimeL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplStartTimeL f PipelineStepImpl{..} = (\pipelineStepImplStartTime -> PipelineStepImpl { pipelineStepImplStartTime, ..} ) <$> f pipelineStepImplStartTime
{-# INLINE pipelineStepImplStartTimeL #-}

-- | 'pipelineStepImplState' Lens
pipelineStepImplStateL :: Lens_' PipelineStepImpl (Maybe Text)
pipelineStepImplStateL f PipelineStepImpl{..} = (\pipelineStepImplState -> PipelineStepImpl { pipelineStepImplState, ..} ) <$> f pipelineStepImplState
{-# INLINE pipelineStepImplStateL #-}



-- * PipelineStepImpllinks

-- | 'pipelineStepImpllinksSelf' Lens
pipelineStepImpllinksSelfL :: Lens_' PipelineStepImpllinks (Maybe Link)
pipelineStepImpllinksSelfL f PipelineStepImpllinks{..} = (\pipelineStepImpllinksSelf -> PipelineStepImpllinks { pipelineStepImpllinksSelf, ..} ) <$> f pipelineStepImpllinksSelf
{-# INLINE pipelineStepImpllinksSelfL #-}

-- | 'pipelineStepImpllinksActions' Lens
pipelineStepImpllinksActionsL :: Lens_' PipelineStepImpllinks (Maybe Link)
pipelineStepImpllinksActionsL f PipelineStepImpllinks{..} = (\pipelineStepImpllinksActions -> PipelineStepImpllinks { pipelineStepImpllinksActions, ..} ) <$> f pipelineStepImpllinksActions
{-# INLINE pipelineStepImpllinksActionsL #-}

-- | 'pipelineStepImpllinksClass' Lens
pipelineStepImpllinksClassL :: Lens_' PipelineStepImpllinks (Maybe Text)
pipelineStepImpllinksClassL f PipelineStepImpllinks{..} = (\pipelineStepImpllinksClass -> PipelineStepImpllinks { pipelineStepImpllinksClass, ..} ) <$> f pipelineStepImpllinksClass
{-# INLINE pipelineStepImpllinksClassL #-}



-- * PipelinelatestRun

-- | 'pipelinelatestRunArtifacts' Lens
pipelinelatestRunArtifactsL :: Lens_' PipelinelatestRun (Maybe [PipelinelatestRunartifacts])
pipelinelatestRunArtifactsL f PipelinelatestRun{..} = (\pipelinelatestRunArtifacts -> PipelinelatestRun { pipelinelatestRunArtifacts, ..} ) <$> f pipelinelatestRunArtifacts
{-# INLINE pipelinelatestRunArtifactsL #-}

-- | 'pipelinelatestRunDurationInMillis' Lens
pipelinelatestRunDurationInMillisL :: Lens_' PipelinelatestRun (Maybe Int)
pipelinelatestRunDurationInMillisL f PipelinelatestRun{..} = (\pipelinelatestRunDurationInMillis -> PipelinelatestRun { pipelinelatestRunDurationInMillis, ..} ) <$> f pipelinelatestRunDurationInMillis
{-# INLINE pipelinelatestRunDurationInMillisL #-}

-- | 'pipelinelatestRunEstimatedDurationInMillis' Lens
pipelinelatestRunEstimatedDurationInMillisL :: Lens_' PipelinelatestRun (Maybe Int)
pipelinelatestRunEstimatedDurationInMillisL f PipelinelatestRun{..} = (\pipelinelatestRunEstimatedDurationInMillis -> PipelinelatestRun { pipelinelatestRunEstimatedDurationInMillis, ..} ) <$> f pipelinelatestRunEstimatedDurationInMillis
{-# INLINE pipelinelatestRunEstimatedDurationInMillisL #-}

-- | 'pipelinelatestRunEnQueueTime' Lens
pipelinelatestRunEnQueueTimeL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunEnQueueTimeL f PipelinelatestRun{..} = (\pipelinelatestRunEnQueueTime -> PipelinelatestRun { pipelinelatestRunEnQueueTime, ..} ) <$> f pipelinelatestRunEnQueueTime
{-# INLINE pipelinelatestRunEnQueueTimeL #-}

-- | 'pipelinelatestRunEndTime' Lens
pipelinelatestRunEndTimeL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunEndTimeL f PipelinelatestRun{..} = (\pipelinelatestRunEndTime -> PipelinelatestRun { pipelinelatestRunEndTime, ..} ) <$> f pipelinelatestRunEndTime
{-# INLINE pipelinelatestRunEndTimeL #-}

-- | 'pipelinelatestRunId' Lens
pipelinelatestRunIdL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunIdL f PipelinelatestRun{..} = (\pipelinelatestRunId -> PipelinelatestRun { pipelinelatestRunId, ..} ) <$> f pipelinelatestRunId
{-# INLINE pipelinelatestRunIdL #-}

-- | 'pipelinelatestRunOrganization' Lens
pipelinelatestRunOrganizationL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunOrganizationL f PipelinelatestRun{..} = (\pipelinelatestRunOrganization -> PipelinelatestRun { pipelinelatestRunOrganization, ..} ) <$> f pipelinelatestRunOrganization
{-# INLINE pipelinelatestRunOrganizationL #-}

-- | 'pipelinelatestRunPipeline' Lens
pipelinelatestRunPipelineL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunPipelineL f PipelinelatestRun{..} = (\pipelinelatestRunPipeline -> PipelinelatestRun { pipelinelatestRunPipeline, ..} ) <$> f pipelinelatestRunPipeline
{-# INLINE pipelinelatestRunPipelineL #-}

-- | 'pipelinelatestRunResult' Lens
pipelinelatestRunResultL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunResultL f PipelinelatestRun{..} = (\pipelinelatestRunResult -> PipelinelatestRun { pipelinelatestRunResult, ..} ) <$> f pipelinelatestRunResult
{-# INLINE pipelinelatestRunResultL #-}

-- | 'pipelinelatestRunRunSummary' Lens
pipelinelatestRunRunSummaryL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunRunSummaryL f PipelinelatestRun{..} = (\pipelinelatestRunRunSummary -> PipelinelatestRun { pipelinelatestRunRunSummary, ..} ) <$> f pipelinelatestRunRunSummary
{-# INLINE pipelinelatestRunRunSummaryL #-}

-- | 'pipelinelatestRunStartTime' Lens
pipelinelatestRunStartTimeL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunStartTimeL f PipelinelatestRun{..} = (\pipelinelatestRunStartTime -> PipelinelatestRun { pipelinelatestRunStartTime, ..} ) <$> f pipelinelatestRunStartTime
{-# INLINE pipelinelatestRunStartTimeL #-}

-- | 'pipelinelatestRunState' Lens
pipelinelatestRunStateL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunStateL f PipelinelatestRun{..} = (\pipelinelatestRunState -> PipelinelatestRun { pipelinelatestRunState, ..} ) <$> f pipelinelatestRunState
{-# INLINE pipelinelatestRunStateL #-}

-- | 'pipelinelatestRunType' Lens
pipelinelatestRunTypeL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunTypeL f PipelinelatestRun{..} = (\pipelinelatestRunType -> PipelinelatestRun { pipelinelatestRunType, ..} ) <$> f pipelinelatestRunType
{-# INLINE pipelinelatestRunTypeL #-}

-- | 'pipelinelatestRunCommitId' Lens
pipelinelatestRunCommitIdL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunCommitIdL f PipelinelatestRun{..} = (\pipelinelatestRunCommitId -> PipelinelatestRun { pipelinelatestRunCommitId, ..} ) <$> f pipelinelatestRunCommitId
{-# INLINE pipelinelatestRunCommitIdL #-}

-- | 'pipelinelatestRunClass' Lens
pipelinelatestRunClassL :: Lens_' PipelinelatestRun (Maybe Text)
pipelinelatestRunClassL f PipelinelatestRun{..} = (\pipelinelatestRunClass -> PipelinelatestRun { pipelinelatestRunClass, ..} ) <$> f pipelinelatestRunClass
{-# INLINE pipelinelatestRunClassL #-}



-- * PipelinelatestRunartifacts

-- | 'pipelinelatestRunartifactsName' Lens
pipelinelatestRunartifactsNameL :: Lens_' PipelinelatestRunartifacts (Maybe Text)
pipelinelatestRunartifactsNameL f PipelinelatestRunartifacts{..} = (\pipelinelatestRunartifactsName -> PipelinelatestRunartifacts { pipelinelatestRunartifactsName, ..} ) <$> f pipelinelatestRunartifactsName
{-# INLINE pipelinelatestRunartifactsNameL #-}

-- | 'pipelinelatestRunartifactsSize' Lens
pipelinelatestRunartifactsSizeL :: Lens_' PipelinelatestRunartifacts (Maybe Int)
pipelinelatestRunartifactsSizeL f PipelinelatestRunartifacts{..} = (\pipelinelatestRunartifactsSize -> PipelinelatestRunartifacts { pipelinelatestRunartifactsSize, ..} ) <$> f pipelinelatestRunartifactsSize
{-# INLINE pipelinelatestRunartifactsSizeL #-}

-- | 'pipelinelatestRunartifactsUrl' Lens
pipelinelatestRunartifactsUrlL :: Lens_' PipelinelatestRunartifacts (Maybe Text)
pipelinelatestRunartifactsUrlL f PipelinelatestRunartifacts{..} = (\pipelinelatestRunartifactsUrl -> PipelinelatestRunartifacts { pipelinelatestRunartifactsUrl, ..} ) <$> f pipelinelatestRunartifactsUrl
{-# INLINE pipelinelatestRunartifactsUrlL #-}

-- | 'pipelinelatestRunartifactsClass' Lens
pipelinelatestRunartifactsClassL :: Lens_' PipelinelatestRunartifacts (Maybe Text)
pipelinelatestRunartifactsClassL f PipelinelatestRunartifacts{..} = (\pipelinelatestRunartifactsClass -> PipelinelatestRunartifacts { pipelinelatestRunartifactsClass, ..} ) <$> f pipelinelatestRunartifactsClass
{-# INLINE pipelinelatestRunartifactsClassL #-}



-- * Queue

-- | 'queueClass' Lens
queueClassL :: Lens_' Queue (Maybe Text)
queueClassL f Queue{..} = (\queueClass -> Queue { queueClass, ..} ) <$> f queueClass
{-# INLINE queueClassL #-}

-- | 'queueItems' Lens
queueItemsL :: Lens_' Queue (Maybe [QueueBlockedItem])
queueItemsL f Queue{..} = (\queueItems -> Queue { queueItems, ..} ) <$> f queueItems
{-# INLINE queueItemsL #-}



-- * QueueBlockedItem

-- | 'queueBlockedItemClass' Lens
queueBlockedItemClassL :: Lens_' QueueBlockedItem (Maybe Text)
queueBlockedItemClassL f QueueBlockedItem{..} = (\queueBlockedItemClass -> QueueBlockedItem { queueBlockedItemClass, ..} ) <$> f queueBlockedItemClass
{-# INLINE queueBlockedItemClassL #-}

-- | 'queueBlockedItemActions' Lens
queueBlockedItemActionsL :: Lens_' QueueBlockedItem (Maybe [CauseAction])
queueBlockedItemActionsL f QueueBlockedItem{..} = (\queueBlockedItemActions -> QueueBlockedItem { queueBlockedItemActions, ..} ) <$> f queueBlockedItemActions
{-# INLINE queueBlockedItemActionsL #-}

-- | 'queueBlockedItemBlocked' Lens
queueBlockedItemBlockedL :: Lens_' QueueBlockedItem (Maybe Bool)
queueBlockedItemBlockedL f QueueBlockedItem{..} = (\queueBlockedItemBlocked -> QueueBlockedItem { queueBlockedItemBlocked, ..} ) <$> f queueBlockedItemBlocked
{-# INLINE queueBlockedItemBlockedL #-}

-- | 'queueBlockedItemBuildable' Lens
queueBlockedItemBuildableL :: Lens_' QueueBlockedItem (Maybe Bool)
queueBlockedItemBuildableL f QueueBlockedItem{..} = (\queueBlockedItemBuildable -> QueueBlockedItem { queueBlockedItemBuildable, ..} ) <$> f queueBlockedItemBuildable
{-# INLINE queueBlockedItemBuildableL #-}

-- | 'queueBlockedItemId' Lens
queueBlockedItemIdL :: Lens_' QueueBlockedItem (Maybe Int)
queueBlockedItemIdL f QueueBlockedItem{..} = (\queueBlockedItemId -> QueueBlockedItem { queueBlockedItemId, ..} ) <$> f queueBlockedItemId
{-# INLINE queueBlockedItemIdL #-}

-- | 'queueBlockedItemInQueueSince' Lens
queueBlockedItemInQueueSinceL :: Lens_' QueueBlockedItem (Maybe Int)
queueBlockedItemInQueueSinceL f QueueBlockedItem{..} = (\queueBlockedItemInQueueSince -> QueueBlockedItem { queueBlockedItemInQueueSince, ..} ) <$> f queueBlockedItemInQueueSince
{-# INLINE queueBlockedItemInQueueSinceL #-}

-- | 'queueBlockedItemParams' Lens
queueBlockedItemParamsL :: Lens_' QueueBlockedItem (Maybe Text)
queueBlockedItemParamsL f QueueBlockedItem{..} = (\queueBlockedItemParams -> QueueBlockedItem { queueBlockedItemParams, ..} ) <$> f queueBlockedItemParams
{-# INLINE queueBlockedItemParamsL #-}

-- | 'queueBlockedItemStuck' Lens
queueBlockedItemStuckL :: Lens_' QueueBlockedItem (Maybe Bool)
queueBlockedItemStuckL f QueueBlockedItem{..} = (\queueBlockedItemStuck -> QueueBlockedItem { queueBlockedItemStuck, ..} ) <$> f queueBlockedItemStuck
{-# INLINE queueBlockedItemStuckL #-}

-- | 'queueBlockedItemTask' Lens
queueBlockedItemTaskL :: Lens_' QueueBlockedItem (Maybe FreeStyleProject)
queueBlockedItemTaskL f QueueBlockedItem{..} = (\queueBlockedItemTask -> QueueBlockedItem { queueBlockedItemTask, ..} ) <$> f queueBlockedItemTask
{-# INLINE queueBlockedItemTaskL #-}

-- | 'queueBlockedItemUrl' Lens
queueBlockedItemUrlL :: Lens_' QueueBlockedItem (Maybe Text)
queueBlockedItemUrlL f QueueBlockedItem{..} = (\queueBlockedItemUrl -> QueueBlockedItem { queueBlockedItemUrl, ..} ) <$> f queueBlockedItemUrl
{-# INLINE queueBlockedItemUrlL #-}

-- | 'queueBlockedItemWhy' Lens
queueBlockedItemWhyL :: Lens_' QueueBlockedItem (Maybe Text)
queueBlockedItemWhyL f QueueBlockedItem{..} = (\queueBlockedItemWhy -> QueueBlockedItem { queueBlockedItemWhy, ..} ) <$> f queueBlockedItemWhy
{-# INLINE queueBlockedItemWhyL #-}

-- | 'queueBlockedItemBuildableStartMilliseconds' Lens
queueBlockedItemBuildableStartMillisecondsL :: Lens_' QueueBlockedItem (Maybe Int)
queueBlockedItemBuildableStartMillisecondsL f QueueBlockedItem{..} = (\queueBlockedItemBuildableStartMilliseconds -> QueueBlockedItem { queueBlockedItemBuildableStartMilliseconds, ..} ) <$> f queueBlockedItemBuildableStartMilliseconds
{-# INLINE queueBlockedItemBuildableStartMillisecondsL #-}



-- * QueueItemImpl

-- | 'queueItemImplClass' Lens
queueItemImplClassL :: Lens_' QueueItemImpl (Maybe Text)
queueItemImplClassL f QueueItemImpl{..} = (\queueItemImplClass -> QueueItemImpl { queueItemImplClass, ..} ) <$> f queueItemImplClass
{-# INLINE queueItemImplClassL #-}

-- | 'queueItemImplExpectedBuildNumber' Lens
queueItemImplExpectedBuildNumberL :: Lens_' QueueItemImpl (Maybe Int)
queueItemImplExpectedBuildNumberL f QueueItemImpl{..} = (\queueItemImplExpectedBuildNumber -> QueueItemImpl { queueItemImplExpectedBuildNumber, ..} ) <$> f queueItemImplExpectedBuildNumber
{-# INLINE queueItemImplExpectedBuildNumberL #-}

-- | 'queueItemImplId' Lens
queueItemImplIdL :: Lens_' QueueItemImpl (Maybe Text)
queueItemImplIdL f QueueItemImpl{..} = (\queueItemImplId -> QueueItemImpl { queueItemImplId, ..} ) <$> f queueItemImplId
{-# INLINE queueItemImplIdL #-}

-- | 'queueItemImplPipeline' Lens
queueItemImplPipelineL :: Lens_' QueueItemImpl (Maybe Text)
queueItemImplPipelineL f QueueItemImpl{..} = (\queueItemImplPipeline -> QueueItemImpl { queueItemImplPipeline, ..} ) <$> f queueItemImplPipeline
{-# INLINE queueItemImplPipelineL #-}

-- | 'queueItemImplQueuedTime' Lens
queueItemImplQueuedTimeL :: Lens_' QueueItemImpl (Maybe Int)
queueItemImplQueuedTimeL f QueueItemImpl{..} = (\queueItemImplQueuedTime -> QueueItemImpl { queueItemImplQueuedTime, ..} ) <$> f queueItemImplQueuedTime
{-# INLINE queueItemImplQueuedTimeL #-}



-- * QueueLeftItem

-- | 'queueLeftItemClass' Lens
queueLeftItemClassL :: Lens_' QueueLeftItem (Maybe Text)
queueLeftItemClassL f QueueLeftItem{..} = (\queueLeftItemClass -> QueueLeftItem { queueLeftItemClass, ..} ) <$> f queueLeftItemClass
{-# INLINE queueLeftItemClassL #-}

-- | 'queueLeftItemActions' Lens
queueLeftItemActionsL :: Lens_' QueueLeftItem (Maybe [CauseAction])
queueLeftItemActionsL f QueueLeftItem{..} = (\queueLeftItemActions -> QueueLeftItem { queueLeftItemActions, ..} ) <$> f queueLeftItemActions
{-# INLINE queueLeftItemActionsL #-}

-- | 'queueLeftItemBlocked' Lens
queueLeftItemBlockedL :: Lens_' QueueLeftItem (Maybe Bool)
queueLeftItemBlockedL f QueueLeftItem{..} = (\queueLeftItemBlocked -> QueueLeftItem { queueLeftItemBlocked, ..} ) <$> f queueLeftItemBlocked
{-# INLINE queueLeftItemBlockedL #-}

-- | 'queueLeftItemBuildable' Lens
queueLeftItemBuildableL :: Lens_' QueueLeftItem (Maybe Bool)
queueLeftItemBuildableL f QueueLeftItem{..} = (\queueLeftItemBuildable -> QueueLeftItem { queueLeftItemBuildable, ..} ) <$> f queueLeftItemBuildable
{-# INLINE queueLeftItemBuildableL #-}

-- | 'queueLeftItemId' Lens
queueLeftItemIdL :: Lens_' QueueLeftItem (Maybe Int)
queueLeftItemIdL f QueueLeftItem{..} = (\queueLeftItemId -> QueueLeftItem { queueLeftItemId, ..} ) <$> f queueLeftItemId
{-# INLINE queueLeftItemIdL #-}

-- | 'queueLeftItemInQueueSince' Lens
queueLeftItemInQueueSinceL :: Lens_' QueueLeftItem (Maybe Int)
queueLeftItemInQueueSinceL f QueueLeftItem{..} = (\queueLeftItemInQueueSince -> QueueLeftItem { queueLeftItemInQueueSince, ..} ) <$> f queueLeftItemInQueueSince
{-# INLINE queueLeftItemInQueueSinceL #-}

-- | 'queueLeftItemParams' Lens
queueLeftItemParamsL :: Lens_' QueueLeftItem (Maybe Text)
queueLeftItemParamsL f QueueLeftItem{..} = (\queueLeftItemParams -> QueueLeftItem { queueLeftItemParams, ..} ) <$> f queueLeftItemParams
{-# INLINE queueLeftItemParamsL #-}

-- | 'queueLeftItemStuck' Lens
queueLeftItemStuckL :: Lens_' QueueLeftItem (Maybe Bool)
queueLeftItemStuckL f QueueLeftItem{..} = (\queueLeftItemStuck -> QueueLeftItem { queueLeftItemStuck, ..} ) <$> f queueLeftItemStuck
{-# INLINE queueLeftItemStuckL #-}

-- | 'queueLeftItemTask' Lens
queueLeftItemTaskL :: Lens_' QueueLeftItem (Maybe FreeStyleProject)
queueLeftItemTaskL f QueueLeftItem{..} = (\queueLeftItemTask -> QueueLeftItem { queueLeftItemTask, ..} ) <$> f queueLeftItemTask
{-# INLINE queueLeftItemTaskL #-}

-- | 'queueLeftItemUrl' Lens
queueLeftItemUrlL :: Lens_' QueueLeftItem (Maybe Text)
queueLeftItemUrlL f QueueLeftItem{..} = (\queueLeftItemUrl -> QueueLeftItem { queueLeftItemUrl, ..} ) <$> f queueLeftItemUrl
{-# INLINE queueLeftItemUrlL #-}

-- | 'queueLeftItemWhy' Lens
queueLeftItemWhyL :: Lens_' QueueLeftItem (Maybe Text)
queueLeftItemWhyL f QueueLeftItem{..} = (\queueLeftItemWhy -> QueueLeftItem { queueLeftItemWhy, ..} ) <$> f queueLeftItemWhy
{-# INLINE queueLeftItemWhyL #-}

-- | 'queueLeftItemCancelled' Lens
queueLeftItemCancelledL :: Lens_' QueueLeftItem (Maybe Bool)
queueLeftItemCancelledL f QueueLeftItem{..} = (\queueLeftItemCancelled -> QueueLeftItem { queueLeftItemCancelled, ..} ) <$> f queueLeftItemCancelled
{-# INLINE queueLeftItemCancelledL #-}

-- | 'queueLeftItemExecutable' Lens
queueLeftItemExecutableL :: Lens_' QueueLeftItem (Maybe FreeStyleBuild)
queueLeftItemExecutableL f QueueLeftItem{..} = (\queueLeftItemExecutable -> QueueLeftItem { queueLeftItemExecutable, ..} ) <$> f queueLeftItemExecutable
{-# INLINE queueLeftItemExecutableL #-}



-- * ResponseTimeMonitorData

-- | 'responseTimeMonitorDataClass' Lens
responseTimeMonitorDataClassL :: Lens_' ResponseTimeMonitorData (Maybe Text)
responseTimeMonitorDataClassL f ResponseTimeMonitorData{..} = (\responseTimeMonitorDataClass -> ResponseTimeMonitorData { responseTimeMonitorDataClass, ..} ) <$> f responseTimeMonitorDataClass
{-# INLINE responseTimeMonitorDataClassL #-}

-- | 'responseTimeMonitorDataTimestamp' Lens
responseTimeMonitorDataTimestampL :: Lens_' ResponseTimeMonitorData (Maybe Int)
responseTimeMonitorDataTimestampL f ResponseTimeMonitorData{..} = (\responseTimeMonitorDataTimestamp -> ResponseTimeMonitorData { responseTimeMonitorDataTimestamp, ..} ) <$> f responseTimeMonitorDataTimestamp
{-# INLINE responseTimeMonitorDataTimestampL #-}

-- | 'responseTimeMonitorDataAverage' Lens
responseTimeMonitorDataAverageL :: Lens_' ResponseTimeMonitorData (Maybe Int)
responseTimeMonitorDataAverageL f ResponseTimeMonitorData{..} = (\responseTimeMonitorDataAverage -> ResponseTimeMonitorData { responseTimeMonitorDataAverage, ..} ) <$> f responseTimeMonitorDataAverage
{-# INLINE responseTimeMonitorDataAverageL #-}



-- * StringParameterDefinition

-- | 'stringParameterDefinitionClass' Lens
stringParameterDefinitionClassL :: Lens_' StringParameterDefinition (Maybe Text)
stringParameterDefinitionClassL f StringParameterDefinition{..} = (\stringParameterDefinitionClass -> StringParameterDefinition { stringParameterDefinitionClass, ..} ) <$> f stringParameterDefinitionClass
{-# INLINE stringParameterDefinitionClassL #-}

-- | 'stringParameterDefinitionDefaultParameterValue' Lens
stringParameterDefinitionDefaultParameterValueL :: Lens_' StringParameterDefinition (Maybe StringParameterValue)
stringParameterDefinitionDefaultParameterValueL f StringParameterDefinition{..} = (\stringParameterDefinitionDefaultParameterValue -> StringParameterDefinition { stringParameterDefinitionDefaultParameterValue, ..} ) <$> f stringParameterDefinitionDefaultParameterValue
{-# INLINE stringParameterDefinitionDefaultParameterValueL #-}

-- | 'stringParameterDefinitionDescription' Lens
stringParameterDefinitionDescriptionL :: Lens_' StringParameterDefinition (Maybe Text)
stringParameterDefinitionDescriptionL f StringParameterDefinition{..} = (\stringParameterDefinitionDescription -> StringParameterDefinition { stringParameterDefinitionDescription, ..} ) <$> f stringParameterDefinitionDescription
{-# INLINE stringParameterDefinitionDescriptionL #-}

-- | 'stringParameterDefinitionName' Lens
stringParameterDefinitionNameL :: Lens_' StringParameterDefinition (Maybe Text)
stringParameterDefinitionNameL f StringParameterDefinition{..} = (\stringParameterDefinitionName -> StringParameterDefinition { stringParameterDefinitionName, ..} ) <$> f stringParameterDefinitionName
{-# INLINE stringParameterDefinitionNameL #-}

-- | 'stringParameterDefinitionType' Lens
stringParameterDefinitionTypeL :: Lens_' StringParameterDefinition (Maybe Text)
stringParameterDefinitionTypeL f StringParameterDefinition{..} = (\stringParameterDefinitionType -> StringParameterDefinition { stringParameterDefinitionType, ..} ) <$> f stringParameterDefinitionType
{-# INLINE stringParameterDefinitionTypeL #-}



-- * StringParameterValue

-- | 'stringParameterValueClass' Lens
stringParameterValueClassL :: Lens_' StringParameterValue (Maybe Text)
stringParameterValueClassL f StringParameterValue{..} = (\stringParameterValueClass -> StringParameterValue { stringParameterValueClass, ..} ) <$> f stringParameterValueClass
{-# INLINE stringParameterValueClassL #-}

-- | 'stringParameterValueName' Lens
stringParameterValueNameL :: Lens_' StringParameterValue (Maybe Text)
stringParameterValueNameL f StringParameterValue{..} = (\stringParameterValueName -> StringParameterValue { stringParameterValueName, ..} ) <$> f stringParameterValueName
{-# INLINE stringParameterValueNameL #-}

-- | 'stringParameterValueValue' Lens
stringParameterValueValueL :: Lens_' StringParameterValue (Maybe Text)
stringParameterValueValueL f StringParameterValue{..} = (\stringParameterValueValue -> StringParameterValue { stringParameterValueValue, ..} ) <$> f stringParameterValueValue
{-# INLINE stringParameterValueValueL #-}



-- * SwapSpaceMonitorMemoryUsage2

-- | 'swapSpaceMonitorMemoryUsage2Class' Lens
swapSpaceMonitorMemoryUsage2ClassL :: Lens_' SwapSpaceMonitorMemoryUsage2 (Maybe Text)
swapSpaceMonitorMemoryUsage2ClassL f SwapSpaceMonitorMemoryUsage2{..} = (\swapSpaceMonitorMemoryUsage2Class -> SwapSpaceMonitorMemoryUsage2 { swapSpaceMonitorMemoryUsage2Class, ..} ) <$> f swapSpaceMonitorMemoryUsage2Class
{-# INLINE swapSpaceMonitorMemoryUsage2ClassL #-}

-- | 'swapSpaceMonitorMemoryUsage2AvailablePhysicalMemory' Lens
swapSpaceMonitorMemoryUsage2AvailablePhysicalMemoryL :: Lens_' SwapSpaceMonitorMemoryUsage2 (Maybe Int)
swapSpaceMonitorMemoryUsage2AvailablePhysicalMemoryL f SwapSpaceMonitorMemoryUsage2{..} = (\swapSpaceMonitorMemoryUsage2AvailablePhysicalMemory -> SwapSpaceMonitorMemoryUsage2 { swapSpaceMonitorMemoryUsage2AvailablePhysicalMemory, ..} ) <$> f swapSpaceMonitorMemoryUsage2AvailablePhysicalMemory
{-# INLINE swapSpaceMonitorMemoryUsage2AvailablePhysicalMemoryL #-}

-- | 'swapSpaceMonitorMemoryUsage2AvailableSwapSpace' Lens
swapSpaceMonitorMemoryUsage2AvailableSwapSpaceL :: Lens_' SwapSpaceMonitorMemoryUsage2 (Maybe Int)
swapSpaceMonitorMemoryUsage2AvailableSwapSpaceL f SwapSpaceMonitorMemoryUsage2{..} = (\swapSpaceMonitorMemoryUsage2AvailableSwapSpace -> SwapSpaceMonitorMemoryUsage2 { swapSpaceMonitorMemoryUsage2AvailableSwapSpace, ..} ) <$> f swapSpaceMonitorMemoryUsage2AvailableSwapSpace
{-# INLINE swapSpaceMonitorMemoryUsage2AvailableSwapSpaceL #-}

-- | 'swapSpaceMonitorMemoryUsage2TotalPhysicalMemory' Lens
swapSpaceMonitorMemoryUsage2TotalPhysicalMemoryL :: Lens_' SwapSpaceMonitorMemoryUsage2 (Maybe Int)
swapSpaceMonitorMemoryUsage2TotalPhysicalMemoryL f SwapSpaceMonitorMemoryUsage2{..} = (\swapSpaceMonitorMemoryUsage2TotalPhysicalMemory -> SwapSpaceMonitorMemoryUsage2 { swapSpaceMonitorMemoryUsage2TotalPhysicalMemory, ..} ) <$> f swapSpaceMonitorMemoryUsage2TotalPhysicalMemory
{-# INLINE swapSpaceMonitorMemoryUsage2TotalPhysicalMemoryL #-}

-- | 'swapSpaceMonitorMemoryUsage2TotalSwapSpace' Lens
swapSpaceMonitorMemoryUsage2TotalSwapSpaceL :: Lens_' SwapSpaceMonitorMemoryUsage2 (Maybe Int)
swapSpaceMonitorMemoryUsage2TotalSwapSpaceL f SwapSpaceMonitorMemoryUsage2{..} = (\swapSpaceMonitorMemoryUsage2TotalSwapSpace -> SwapSpaceMonitorMemoryUsage2 { swapSpaceMonitorMemoryUsage2TotalSwapSpace, ..} ) <$> f swapSpaceMonitorMemoryUsage2TotalSwapSpace
{-# INLINE swapSpaceMonitorMemoryUsage2TotalSwapSpaceL #-}



-- * UnlabeledLoadStatistics

-- | 'unlabeledLoadStatisticsClass' Lens
unlabeledLoadStatisticsClassL :: Lens_' UnlabeledLoadStatistics (Maybe Text)
unlabeledLoadStatisticsClassL f UnlabeledLoadStatistics{..} = (\unlabeledLoadStatisticsClass -> UnlabeledLoadStatistics { unlabeledLoadStatisticsClass, ..} ) <$> f unlabeledLoadStatisticsClass
{-# INLINE unlabeledLoadStatisticsClassL #-}



-- * User

-- | 'userClass' Lens
userClassL :: Lens_' User (Maybe Text)
userClassL f User{..} = (\userClass -> User { userClass, ..} ) <$> f userClass
{-# INLINE userClassL #-}

-- | 'userId' Lens
userIdL :: Lens_' User (Maybe Text)
userIdL f User{..} = (\userId -> User { userId, ..} ) <$> f userId
{-# INLINE userIdL #-}

-- | 'userFullName' Lens
userFullNameL :: Lens_' User (Maybe Text)
userFullNameL f User{..} = (\userFullName -> User { userFullName, ..} ) <$> f userFullName
{-# INLINE userFullNameL #-}

-- | 'userEmail' Lens
userEmailL :: Lens_' User (Maybe Text)
userEmailL f User{..} = (\userEmail -> User { userEmail, ..} ) <$> f userEmail
{-# INLINE userEmailL #-}

-- | 'userName' Lens
userNameL :: Lens_' User (Maybe Text)
userNameL f User{..} = (\userName -> User { userName, ..} ) <$> f userName
{-# INLINE userNameL #-}


