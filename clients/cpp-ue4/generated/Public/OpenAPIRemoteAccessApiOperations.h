/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRemoteAccessApi.h"

#include "OpenAPIComputerSet.h"
#include "OpenAPIFreeStyleBuild.h"
#include "OpenAPIFreeStyleProject.h"
#include "OpenAPIHudson.h"
#include "OpenAPIListView.h"
#include "OpenAPIQueue.h"

namespace OpenAPI
{

/* 
 *
 * Retrieve computer details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetComputerRequest : public Request
{
public:
    virtual ~GetComputerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Recursion depth in response model */
	int32 Depth = 0;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetComputerResponse : public Response
{
public:
    virtual ~GetComputerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIComputerSet Content;
};

/* 
 *
 * Retrieve Jenkins details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetJenkinsRequest : public Request
{
public:
    virtual ~GetJenkinsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRemoteAccessApi::GetJenkinsResponse : public Response
{
public:
    virtual ~GetJenkinsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIHudson Content;
};

/* 
 *
 * Retrieve job details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetJobRequest : public Request
{
public:
    virtual ~GetJobRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetJobResponse : public Response
{
public:
    virtual ~GetJobResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIFreeStyleProject Content;
};

/* 
 *
 * Retrieve job configuration
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetJobConfigRequest : public Request
{
public:
    virtual ~GetJobConfigRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetJobConfigResponse : public Response
{
public:
    virtual ~GetJobConfigResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    FString Content;
};

/* 
 *
 * Retrieve job&#39;s last build details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetJobLastBuildRequest : public Request
{
public:
    virtual ~GetJobLastBuildRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetJobLastBuildResponse : public Response
{
public:
    virtual ~GetJobLastBuildResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIFreeStyleBuild Content;
};

/* 
 *
 * Retrieve job&#39;s build progressive text output
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetJobProgressiveTextRequest : public Request
{
public:
    virtual ~GetJobProgressiveTextRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* Build number */
	FString Number;
	/* Starting point of progressive text output */
	FString Start;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetJobProgressiveTextResponse : public Response
{
public:
    virtual ~GetJobProgressiveTextResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Retrieve queue details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetQueueRequest : public Request
{
public:
    virtual ~GetQueueRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRemoteAccessApi::GetQueueResponse : public Response
{
public:
    virtual ~GetQueueResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIQueue Content;
};

/* 
 *
 * Retrieve queued item details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetQueueItemRequest : public Request
{
public:
    virtual ~GetQueueItemRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Queue number */
	FString Number;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetQueueItemResponse : public Response
{
public:
    virtual ~GetQueueItemResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIQueue Content;
};

/* 
 *
 * Retrieve view details
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetViewRequest : public Request
{
public:
    virtual ~GetViewRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the view */
	FString Name;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetViewResponse : public Response
{
public:
    virtual ~GetViewResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIListView Content;
};

/* 
 *
 * Retrieve view configuration
*/
class OPENAPI_API OpenAPIRemoteAccessApi::GetViewConfigRequest : public Request
{
public:
    virtual ~GetViewConfigRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the view */
	FString Name;
};

class OPENAPI_API OpenAPIRemoteAccessApi::GetViewConfigResponse : public Response
{
public:
    virtual ~GetViewConfigResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    FString Content;
};

/* 
 *
 * Retrieve Jenkins headers
*/
class OPENAPI_API OpenAPIRemoteAccessApi::HeadJenkinsRequest : public Request
{
public:
    virtual ~HeadJenkinsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRemoteAccessApi::HeadJenkinsResponse : public Response
{
public:
    virtual ~HeadJenkinsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Create a new job using job configuration, or copied from an existing job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostCreateItemRequest : public Request
{
public:
    virtual ~PostCreateItemRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the new job */
	FString Name;
	/* Existing job to copy from */
	TOptional<FString> From;
	/* Set to 'copy' for copying an existing job */
	TOptional<FString> Mode;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
	/* Content type header application/xml */
	TOptional<FString> ContentType;
	/* Job configuration in config.xml format */
	TOptional<FString> Body;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostCreateItemResponse : public Response
{
public:
    virtual ~PostCreateItemResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Create a new view using view configuration
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostCreateViewRequest : public Request
{
public:
    virtual ~PostCreateViewRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the new view */
	FString Name;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
	/* Content type header application/xml */
	TOptional<FString> ContentType;
	/* View configuration in config.xml format */
	TOptional<FString> Body;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostCreateViewResponse : public Response
{
public:
    virtual ~PostCreateViewResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Build a job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobBuildRequest : public Request
{
public:
    virtual ~PostJobBuildRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	FString Json;
	TOptional<FString> Token;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobBuildResponse : public Response
{
public:
    virtual ~PostJobBuildResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Update job configuration
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobConfigRequest : public Request
{
public:
    virtual ~PostJobConfigRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* Job configuration in config.xml format */
	FString Body;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobConfigResponse : public Response
{
public:
    virtual ~PostJobConfigResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Delete a job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobDeleteRequest : public Request
{
public:
    virtual ~PostJobDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobDeleteResponse : public Response
{
public:
    virtual ~PostJobDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Disable a job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobDisableRequest : public Request
{
public:
    virtual ~PostJobDisableRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobDisableResponse : public Response
{
public:
    virtual ~PostJobDisableResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Enable a job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobEnableRequest : public Request
{
public:
    virtual ~PostJobEnableRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobEnableResponse : public Response
{
public:
    virtual ~PostJobEnableResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Stop a job
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostJobLastBuildStopRequest : public Request
{
public:
    virtual ~PostJobLastBuildStopRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the job */
	FString Name;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostJobLastBuildStopResponse : public Response
{
public:
    virtual ~PostJobLastBuildStopResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* 
 *
 * Update view configuration
*/
class OPENAPI_API OpenAPIRemoteAccessApi::PostViewConfigRequest : public Request
{
public:
    virtual ~PostViewConfigRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Name of the view */
	FString Name;
	/* View configuration in config.xml format */
	FString Body;
	/* CSRF protection token */
	TOptional<FString> JenkinsCrumb;
};

class OPENAPI_API OpenAPIRemoteAccessApi::PostViewConfigResponse : public Response
{
public:
    virtual ~PostViewConfigResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

}
