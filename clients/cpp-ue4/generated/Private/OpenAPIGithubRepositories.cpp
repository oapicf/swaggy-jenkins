/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIGithubRepositories.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIGithubRepositories::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (_Class.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("_class")); WriteJsonValue(Writer, _Class.GetValue());
	}
	if (Links.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("_links")); WriteJsonValue(Writer, Links.GetValue());
	}
	if (Items.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("items")); WriteJsonValue(Writer, Items.GetValue());
	}
	if (LastPage.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("lastPage")); WriteJsonValue(Writer, LastPage.GetValue());
	}
	if (NextPage.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("nextPage")); WriteJsonValue(Writer, NextPage.GetValue());
	}
	if (PageSize.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("pageSize")); WriteJsonValue(Writer, PageSize.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIGithubRepositories::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("_class"), _Class);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("_links"), Links);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("items"), Items);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("lastPage"), LastPage);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("nextPage"), NextPage);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("pageSize"), PageSize);

	return ParseSuccess;
}

}
