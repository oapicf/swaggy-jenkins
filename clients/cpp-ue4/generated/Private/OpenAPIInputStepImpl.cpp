/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIInputStepImpl.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIInputStepImpl::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (_Class.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("_class")); WriteJsonValue(Writer, _Class.GetValue());
	}
	if (Links.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("_links")); WriteJsonValue(Writer, Links.GetValue());
	}
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (Message.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("message")); WriteJsonValue(Writer, Message.GetValue());
	}
	if (Ok.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ok")); WriteJsonValue(Writer, Ok.GetValue());
	}
	if (Parameters.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("parameters")); WriteJsonValue(Writer, Parameters.GetValue());
	}
	if (Submitter.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("submitter")); WriteJsonValue(Writer, Submitter.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIInputStepImpl::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("_class"), _Class);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("_links"), Links);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("message"), Message);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ok"), Ok);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("parameters"), Parameters);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("submitter"), Submitter);

	return ParseSuccess;
}

}
