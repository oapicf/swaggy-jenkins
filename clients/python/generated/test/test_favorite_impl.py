# coding: utf-8

"""
    Swaggy Jenkins

    Jenkins API clients generated from Swagger / Open API specification

    The version of the OpenAPI document: 2.0.1-pre.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swaggyjenkins.models.favorite_impl import FavoriteImpl

class TestFavoriteImpl(unittest.TestCase):
    """FavoriteImpl unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FavoriteImpl:
        """Test FavoriteImpl
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FavoriteImpl`
        """
        model = FavoriteImpl()
        if include_optional:
            return FavoriteImpl(
                var_class = '',
                links = swaggyjenkins.models.favorite_impllinks.FavoriteImpllinks(
                    self = swaggyjenkins.models.link.Link(
                        _class = '', 
                        href = '', ), 
                    _class = '', ),
                item = swaggyjenkins.models.pipeline_impl.PipelineImpl(
                    _class = '', 
                    display_name = '', 
                    estimated_duration_in_millis = 56, 
                    full_name = '', 
                    latest_run = '', 
                    name = '', 
                    organization = '', 
                    weather_score = 56, 
                    _links = swaggyjenkins.models.pipeline_impllinks.PipelineImpllinks(
                        runs = swaggyjenkins.models.link.Link(
                            _class = '', 
                            href = '', ), 
                        self = swaggyjenkins.models.link.Link(
                            _class = '', 
                            href = '', ), 
                        queue = , 
                        actions = , 
                        _class = '', ), )
            )
        else:
            return FavoriteImpl(
        )
        """

    def testFavoriteImpl(self):
        """Test FavoriteImpl"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
