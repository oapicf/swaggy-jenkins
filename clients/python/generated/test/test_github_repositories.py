# coding: utf-8

"""
    Swaggy Jenkins

    Jenkins API clients generated from Swagger / Open API specification

    The version of the OpenAPI document: 2.0.1-pre.0
    Contact: blah+oapicf@cliffano.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swaggyjenkins.models.github_repositories import GithubRepositories

class TestGithubRepositories(unittest.TestCase):
    """GithubRepositories unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GithubRepositories:
        """Test GithubRepositories
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GithubRepositories`
        """
        model = GithubRepositories()
        if include_optional:
            return GithubRepositories(
                var_class = '',
                links = swaggyjenkins.models.github_repositorieslinks.GithubRepositorieslinks(
                    self = swaggyjenkins.models.link.Link(
                        _class = '', 
                        href = '', ), 
                    _class = '', ),
                items = [
                    swaggyjenkins.models.github_repository.GithubRepository(
                        _class = '', 
                        _links = swaggyjenkins.models.github_repositorylinks.GithubRepositorylinks(
                            self = swaggyjenkins.models.link.Link(
                                _class = '', 
                                href = '', ), 
                            _class = '', ), 
                        default_branch = '', 
                        description = '', 
                        name = '', 
                        permissions = swaggyjenkins.models.github_repositorypermissions.GithubRepositorypermissions(
                            admin = True, 
                            push = True, 
                            pull = True, 
                            _class = '', ), 
                        private = True, 
                        full_name = '', )
                    ],
                last_page = 56,
                next_page = 56,
                page_size = 56
            )
        else:
            return GithubRepositories(
        )
        """

    def testGithubRepositories(self):
        """Test GithubRepositories"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
