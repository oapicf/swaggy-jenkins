/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggyJenkins);
  }
}(this, function(expect, SwaggyJenkins) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggyJenkins.QueueLeftItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QueueLeftItem', function() {
    it('should create an instance of QueueLeftItem', function() {
      // uncomment below and update the code to test QueueLeftItem
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be.a(SwaggyJenkins.QueueLeftItem);
    });

    it('should have the property _class (base name: "_class")', function() {
      // uncomment below and update the code to test the property _class
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property blocked (base name: "blocked")', function() {
      // uncomment below and update the code to test the property blocked
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property buildable (base name: "buildable")', function() {
      // uncomment below and update the code to test the property buildable
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property inQueueSince (base name: "inQueueSince")', function() {
      // uncomment below and update the code to test the property inQueueSince
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property params (base name: "params")', function() {
      // uncomment below and update the code to test the property params
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property stuck (base name: "stuck")', function() {
      // uncomment below and update the code to test the property stuck
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property task (base name: "task")', function() {
      // uncomment below and update the code to test the property task
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property why (base name: "why")', function() {
      // uncomment below and update the code to test the property why
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property cancelled (base name: "cancelled")', function() {
      // uncomment below and update the code to test the property cancelled
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

    it('should have the property executable (base name: "executable")', function() {
      // uncomment below and update the code to test the property executable
      //var instance = new SwaggyJenkins.QueueLeftItem();
      //expect(instance).to.be();
    });

  });

}));
