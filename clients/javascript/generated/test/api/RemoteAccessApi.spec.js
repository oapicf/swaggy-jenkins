/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggyJenkins);
  }
}(this, function(expect, SwaggyJenkins) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggyJenkins.RemoteAccessApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RemoteAccessApi', function() {
    describe('getComputer', function() {
      it('should call getComputer successfully', function(done) {
        //uncomment below and update the code to test getComputer
        //instance.getComputer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJenkins', function() {
      it('should call getJenkins successfully', function(done) {
        //uncomment below and update the code to test getJenkins
        //instance.getJenkins(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJob', function() {
      it('should call getJob successfully', function(done) {
        //uncomment below and update the code to test getJob
        //instance.getJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobConfig', function() {
      it('should call getJobConfig successfully', function(done) {
        //uncomment below and update the code to test getJobConfig
        //instance.getJobConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobLastBuild', function() {
      it('should call getJobLastBuild successfully', function(done) {
        //uncomment below and update the code to test getJobLastBuild
        //instance.getJobLastBuild(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobProgressiveText', function() {
      it('should call getJobProgressiveText successfully', function(done) {
        //uncomment below and update the code to test getJobProgressiveText
        //instance.getJobProgressiveText(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueue', function() {
      it('should call getQueue successfully', function(done) {
        //uncomment below and update the code to test getQueue
        //instance.getQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueueItem', function() {
      it('should call getQueueItem successfully', function(done) {
        //uncomment below and update the code to test getQueueItem
        //instance.getQueueItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getView', function() {
      it('should call getView successfully', function(done) {
        //uncomment below and update the code to test getView
        //instance.getView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getViewConfig', function() {
      it('should call getViewConfig successfully', function(done) {
        //uncomment below and update the code to test getViewConfig
        //instance.getViewConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('headJenkins', function() {
      it('should call headJenkins successfully', function(done) {
        //uncomment below and update the code to test headJenkins
        //instance.headJenkins(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCreateItem', function() {
      it('should call postCreateItem successfully', function(done) {
        //uncomment below and update the code to test postCreateItem
        //instance.postCreateItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCreateView', function() {
      it('should call postCreateView successfully', function(done) {
        //uncomment below and update the code to test postCreateView
        //instance.postCreateView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobBuild', function() {
      it('should call postJobBuild successfully', function(done) {
        //uncomment below and update the code to test postJobBuild
        //instance.postJobBuild(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobConfig', function() {
      it('should call postJobConfig successfully', function(done) {
        //uncomment below and update the code to test postJobConfig
        //instance.postJobConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobDelete', function() {
      it('should call postJobDelete successfully', function(done) {
        //uncomment below and update the code to test postJobDelete
        //instance.postJobDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobDisable', function() {
      it('should call postJobDisable successfully', function(done) {
        //uncomment below and update the code to test postJobDisable
        //instance.postJobDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobEnable', function() {
      it('should call postJobEnable successfully', function(done) {
        //uncomment below and update the code to test postJobEnable
        //instance.postJobEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobLastBuildStop', function() {
      it('should call postJobLastBuildStop successfully', function(done) {
        //uncomment below and update the code to test postJobLastBuildStop
        //instance.postJobLastBuildStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postViewConfig', function() {
      it('should call postViewConfig successfully', function(done) {
        //uncomment below and update the code to test postViewConfig
        //instance.postViewConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
