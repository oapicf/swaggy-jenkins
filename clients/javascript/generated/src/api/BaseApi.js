/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultCrumbIssuer from '../model/DefaultCrumbIssuer';

/**
* Base service.
* @module api/BaseApi
* @version 2.0.1
*/
export default class BaseApi {

    /**
    * Constructs a new BaseApi. 
    * @alias module:api/BaseApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCrumb operation.
     * @callback module:api/BaseApi~getCrumbCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefaultCrumbIssuer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve CSRF protection token
     * @param {module:api/BaseApi~getCrumbCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefaultCrumbIssuer}
     */
    getCrumb(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jenkins_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DefaultCrumbIssuer;
      return this.apiClient.callApi(
        '/crumbIssuer/api/json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
