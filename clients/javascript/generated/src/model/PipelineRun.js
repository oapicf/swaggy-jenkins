/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineRunartifacts from './PipelineRunartifacts';

/**
 * The PipelineRun model module.
 * @module model/PipelineRun
 * @version 2.0.1
 */
class PipelineRun {
    /**
     * Constructs a new <code>PipelineRun</code>.
     * @alias module:model/PipelineRun
     */
    constructor() { 
        
        PipelineRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineRun} obj Optional instance to populate.
     * @return {module:model/PipelineRun} The populated <code>PipelineRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineRun();

            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
            if (data.hasOwnProperty('artifacts')) {
                obj['artifacts'] = ApiClient.convertToType(data['artifacts'], [PipelineRunartifacts]);
            }
            if (data.hasOwnProperty('durationInMillis')) {
                obj['durationInMillis'] = ApiClient.convertToType(data['durationInMillis'], 'Number');
            }
            if (data.hasOwnProperty('estimatedDurationInMillis')) {
                obj['estimatedDurationInMillis'] = ApiClient.convertToType(data['estimatedDurationInMillis'], 'Number');
            }
            if (data.hasOwnProperty('enQueueTime')) {
                obj['enQueueTime'] = ApiClient.convertToType(data['enQueueTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('pipeline')) {
                obj['pipeline'] = ApiClient.convertToType(data['pipeline'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('runSummary')) {
                obj['runSummary'] = ApiClient.convertToType(data['runSummary'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('commitId')) {
                obj['commitId'] = ApiClient.convertToType(data['commitId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineRun</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_class'] && !(typeof data['_class'] === 'string' || data['_class'] instanceof String)) {
            throw new Error("Expected the field `_class` to be a primitive type in the JSON string but got " + data['_class']);
        }
        if (data['artifacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['artifacts'])) {
                throw new Error("Expected the field `artifacts` to be an array in the JSON data but got " + data['artifacts']);
            }
            // validate the optional field `artifacts` (array)
            for (const item of data['artifacts']) {
                PipelineRunartifacts.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['enQueueTime'] && !(typeof data['enQueueTime'] === 'string' || data['enQueueTime'] instanceof String)) {
            throw new Error("Expected the field `enQueueTime` to be a primitive type in the JSON string but got " + data['enQueueTime']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['organization'] && !(typeof data['organization'] === 'string' || data['organization'] instanceof String)) {
            throw new Error("Expected the field `organization` to be a primitive type in the JSON string but got " + data['organization']);
        }
        // ensure the json data is a string
        if (data['pipeline'] && !(typeof data['pipeline'] === 'string' || data['pipeline'] instanceof String)) {
            throw new Error("Expected the field `pipeline` to be a primitive type in the JSON string but got " + data['pipeline']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }
        // ensure the json data is a string
        if (data['runSummary'] && !(typeof data['runSummary'] === 'string' || data['runSummary'] instanceof String)) {
            throw new Error("Expected the field `runSummary` to be a primitive type in the JSON string but got " + data['runSummary']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['commitId'] && !(typeof data['commitId'] === 'string' || data['commitId'] instanceof String)) {
            throw new Error("Expected the field `commitId` to be a primitive type in the JSON string but got " + data['commitId']);
        }

        return true;
    }


}



/**
 * @member {String} _class
 */
PipelineRun.prototype['_class'] = undefined;

/**
 * @member {Array.<module:model/PipelineRunartifacts>} artifacts
 */
PipelineRun.prototype['artifacts'] = undefined;

/**
 * @member {Number} durationInMillis
 */
PipelineRun.prototype['durationInMillis'] = undefined;

/**
 * @member {Number} estimatedDurationInMillis
 */
PipelineRun.prototype['estimatedDurationInMillis'] = undefined;

/**
 * @member {String} enQueueTime
 */
PipelineRun.prototype['enQueueTime'] = undefined;

/**
 * @member {String} endTime
 */
PipelineRun.prototype['endTime'] = undefined;

/**
 * @member {String} id
 */
PipelineRun.prototype['id'] = undefined;

/**
 * @member {String} organization
 */
PipelineRun.prototype['organization'] = undefined;

/**
 * @member {String} pipeline
 */
PipelineRun.prototype['pipeline'] = undefined;

/**
 * @member {String} result
 */
PipelineRun.prototype['result'] = undefined;

/**
 * @member {String} runSummary
 */
PipelineRun.prototype['runSummary'] = undefined;

/**
 * @member {String} startTime
 */
PipelineRun.prototype['startTime'] = undefined;

/**
 * @member {String} state
 */
PipelineRun.prototype['state'] = undefined;

/**
 * @member {String} type
 */
PipelineRun.prototype['type'] = undefined;

/**
 * @member {String} commitId
 */
PipelineRun.prototype['commitId'] = undefined;






export default PipelineRun;

