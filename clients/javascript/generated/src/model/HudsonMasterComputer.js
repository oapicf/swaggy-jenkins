/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HudsonMasterComputerexecutors from './HudsonMasterComputerexecutors';
import HudsonMasterComputermonitorData from './HudsonMasterComputermonitorData';
import Label1 from './Label1';

/**
 * The HudsonMasterComputer model module.
 * @module model/HudsonMasterComputer
 * @version 2.0.1
 */
class HudsonMasterComputer {
    /**
     * Constructs a new <code>HudsonMasterComputer</code>.
     * @alias module:model/HudsonMasterComputer
     */
    constructor() { 
        
        HudsonMasterComputer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HudsonMasterComputer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HudsonMasterComputer} obj Optional instance to populate.
     * @return {module:model/HudsonMasterComputer} The populated <code>HudsonMasterComputer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HudsonMasterComputer();

            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('executors')) {
                obj['executors'] = ApiClient.convertToType(data['executors'], [HudsonMasterComputerexecutors]);
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('iconClassName')) {
                obj['iconClassName'] = ApiClient.convertToType(data['iconClassName'], 'String');
            }
            if (data.hasOwnProperty('idle')) {
                obj['idle'] = ApiClient.convertToType(data['idle'], 'Boolean');
            }
            if (data.hasOwnProperty('jnlpAgent')) {
                obj['jnlpAgent'] = ApiClient.convertToType(data['jnlpAgent'], 'Boolean');
            }
            if (data.hasOwnProperty('launchSupported')) {
                obj['launchSupported'] = ApiClient.convertToType(data['launchSupported'], 'Boolean');
            }
            if (data.hasOwnProperty('loadStatistics')) {
                obj['loadStatistics'] = Label1.constructFromObject(data['loadStatistics']);
            }
            if (data.hasOwnProperty('manualLaunchAllowed')) {
                obj['manualLaunchAllowed'] = ApiClient.convertToType(data['manualLaunchAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('monitorData')) {
                obj['monitorData'] = HudsonMasterComputermonitorData.constructFromObject(data['monitorData']);
            }
            if (data.hasOwnProperty('numExecutors')) {
                obj['numExecutors'] = ApiClient.convertToType(data['numExecutors'], 'Number');
            }
            if (data.hasOwnProperty('offline')) {
                obj['offline'] = ApiClient.convertToType(data['offline'], 'Boolean');
            }
            if (data.hasOwnProperty('offlineCause')) {
                obj['offlineCause'] = ApiClient.convertToType(data['offlineCause'], 'String');
            }
            if (data.hasOwnProperty('offlineCauseReason')) {
                obj['offlineCauseReason'] = ApiClient.convertToType(data['offlineCauseReason'], 'String');
            }
            if (data.hasOwnProperty('temporarilyOffline')) {
                obj['temporarilyOffline'] = ApiClient.convertToType(data['temporarilyOffline'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HudsonMasterComputer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HudsonMasterComputer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_class'] && !(typeof data['_class'] === 'string' || data['_class'] instanceof String)) {
            throw new Error("Expected the field `_class` to be a primitive type in the JSON string but got " + data['_class']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['executors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['executors'])) {
                throw new Error("Expected the field `executors` to be an array in the JSON data but got " + data['executors']);
            }
            // validate the optional field `executors` (array)
            for (const item of data['executors']) {
                HudsonMasterComputerexecutors.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is a string
        if (data['iconClassName'] && !(typeof data['iconClassName'] === 'string' || data['iconClassName'] instanceof String)) {
            throw new Error("Expected the field `iconClassName` to be a primitive type in the JSON string but got " + data['iconClassName']);
        }
        // validate the optional field `loadStatistics`
        if (data['loadStatistics']) { // data not null
          Label1.validateJSON(data['loadStatistics']);
        }
        // validate the optional field `monitorData`
        if (data['monitorData']) { // data not null
          HudsonMasterComputermonitorData.validateJSON(data['monitorData']);
        }
        // ensure the json data is a string
        if (data['offlineCause'] && !(typeof data['offlineCause'] === 'string' || data['offlineCause'] instanceof String)) {
            throw new Error("Expected the field `offlineCause` to be a primitive type in the JSON string but got " + data['offlineCause']);
        }
        // ensure the json data is a string
        if (data['offlineCauseReason'] && !(typeof data['offlineCauseReason'] === 'string' || data['offlineCauseReason'] instanceof String)) {
            throw new Error("Expected the field `offlineCauseReason` to be a primitive type in the JSON string but got " + data['offlineCauseReason']);
        }

        return true;
    }


}



/**
 * @member {String} _class
 */
HudsonMasterComputer.prototype['_class'] = undefined;

/**
 * @member {String} displayName
 */
HudsonMasterComputer.prototype['displayName'] = undefined;

/**
 * @member {Array.<module:model/HudsonMasterComputerexecutors>} executors
 */
HudsonMasterComputer.prototype['executors'] = undefined;

/**
 * @member {String} icon
 */
HudsonMasterComputer.prototype['icon'] = undefined;

/**
 * @member {String} iconClassName
 */
HudsonMasterComputer.prototype['iconClassName'] = undefined;

/**
 * @member {Boolean} idle
 */
HudsonMasterComputer.prototype['idle'] = undefined;

/**
 * @member {Boolean} jnlpAgent
 */
HudsonMasterComputer.prototype['jnlpAgent'] = undefined;

/**
 * @member {Boolean} launchSupported
 */
HudsonMasterComputer.prototype['launchSupported'] = undefined;

/**
 * @member {module:model/Label1} loadStatistics
 */
HudsonMasterComputer.prototype['loadStatistics'] = undefined;

/**
 * @member {Boolean} manualLaunchAllowed
 */
HudsonMasterComputer.prototype['manualLaunchAllowed'] = undefined;

/**
 * @member {module:model/HudsonMasterComputermonitorData} monitorData
 */
HudsonMasterComputer.prototype['monitorData'] = undefined;

/**
 * @member {Number} numExecutors
 */
HudsonMasterComputer.prototype['numExecutors'] = undefined;

/**
 * @member {Boolean} offline
 */
HudsonMasterComputer.prototype['offline'] = undefined;

/**
 * @member {String} offlineCause
 */
HudsonMasterComputer.prototype['offlineCause'] = undefined;

/**
 * @member {String} offlineCauseReason
 */
HudsonMasterComputer.prototype['offlineCauseReason'] = undefined;

/**
 * @member {Boolean} temporarilyOffline
 */
HudsonMasterComputer.prototype['temporarilyOffline'] = undefined;






export default HudsonMasterComputer;

