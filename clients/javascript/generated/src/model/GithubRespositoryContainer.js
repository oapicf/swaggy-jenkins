/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GithubRepositories from './GithubRepositories';
import GithubRespositoryContainerlinks from './GithubRespositoryContainerlinks';

/**
 * The GithubRespositoryContainer model module.
 * @module model/GithubRespositoryContainer
 * @version 2.0.1
 */
class GithubRespositoryContainer {
    /**
     * Constructs a new <code>GithubRespositoryContainer</code>.
     * @alias module:model/GithubRespositoryContainer
     */
    constructor() { 
        
        GithubRespositoryContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GithubRespositoryContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GithubRespositoryContainer} obj Optional instance to populate.
     * @return {module:model/GithubRespositoryContainer} The populated <code>GithubRespositoryContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GithubRespositoryContainer();

            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = GithubRespositoryContainerlinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('repositories')) {
                obj['repositories'] = GithubRepositories.constructFromObject(data['repositories']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GithubRespositoryContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GithubRespositoryContainer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_class'] && !(typeof data['_class'] === 'string' || data['_class'] instanceof String)) {
            throw new Error("Expected the field `_class` to be a primitive type in the JSON string but got " + data['_class']);
        }
        // validate the optional field `_links`
        if (data['_links']) { // data not null
          GithubRespositoryContainerlinks.validateJSON(data['_links']);
        }
        // validate the optional field `repositories`
        if (data['repositories']) { // data not null
          GithubRepositories.validateJSON(data['repositories']);
        }

        return true;
    }


}



/**
 * @member {String} _class
 */
GithubRespositoryContainer.prototype['_class'] = undefined;

/**
 * @member {module:model/GithubRespositoryContainerlinks} _links
 */
GithubRespositoryContainer.prototype['_links'] = undefined;

/**
 * @member {module:model/GithubRepositories} repositories
 */
GithubRespositoryContainer.prototype['repositories'] = undefined;






export default GithubRespositoryContainer;

