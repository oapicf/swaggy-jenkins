(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let get_computer ~depth =
    let open Lwt.Infix in
    let uri = Request.build_uri "/computer/api/json" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "depth" Int32.to_string depth in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Computer_set.of_yojson) resp body

let get_jenkins () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/json" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Hudson.of_yojson) resp body

let get_job ~name =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/api/json" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Free_style_project.of_yojson) resp body

let get_job_config ~name =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/config.xml" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_job_last_build ~name =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/lastBuild/api/json" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Free_style_build.of_yojson) resp body

let get_job_progressive_text ~name ~number ~start =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/{number}/logText/progressiveText" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    let uri = Request.replace_path_param uri "number" (fun x -> x) number in
    let uri = Request.add_query_param uri "start" (fun x -> x) start in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let get_queue () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/queue/api/json" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Queue.of_yojson) resp body

let get_queue_item ~number =
    let open Lwt.Infix in
    let uri = Request.build_uri "/queue/item/{number}/api/json" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "number" (fun x -> x) number in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Queue.of_yojson) resp body

let get_view ~name =
    let open Lwt.Infix in
    let uri = Request.build_uri "/view/{name}/api/json" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap List_view.of_yojson) resp body

let get_view_config ~name =
    let open Lwt.Infix in
    let uri = Request.build_uri "/view/{name}/config.xml" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let head_jenkins () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/json" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `HEAD uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_create_item ~name ?from ?mode ?jenkins_crumb ?content_type ~body () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/createItem" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let uri = Request.add_query_param uri "name" (fun x -> x) name in
    let uri = Request.maybe_add_query_param uri "from" (fun x -> x) from in
    let uri = Request.maybe_add_query_param uri "mode" (fun x -> x) mode in
    let body = Request.write_as_json_body JsonSupport.of_string body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_create_view ~name ?jenkins_crumb ?content_type ~body () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/createView" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let uri = Request.add_query_param uri "name" (fun x -> x) name in
    let body = Request.write_as_json_body JsonSupport.of_string body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_build ~name ~json ?token ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/build" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    let uri = Request.add_query_param uri "json" (fun x -> x) json in
    let uri = Request.maybe_add_query_param uri "token" (fun x -> x) token in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_config ~name ~body ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/config.xml" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    let body = Request.write_as_json_body JsonSupport.of_string body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_delete ~name ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/doDelete" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_disable ~name ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/disable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_enable ~name ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/enable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_job_last_build_stop ~name ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/job/{name}/lastBuild/stop" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let post_view_config ~name ~body ?jenkins_crumb () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/view/{name}/config.xml" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Jenkins-Crumb" (fun x -> x) jenkins_crumb in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    let body = Request.write_as_json_body JsonSupport.of_string body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

