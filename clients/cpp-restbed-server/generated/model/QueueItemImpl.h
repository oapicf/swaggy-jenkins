/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * QueueItemImpl.h
 *
 * 
 */

#ifndef QueueItemImpl_H_
#define QueueItemImpl_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  QueueItemImpl 
{
public:
    QueueItemImpl() = default;
    explicit QueueItemImpl(boost::property_tree::ptree const& pt);
    virtual ~QueueItemImpl() = default;

    QueueItemImpl(const QueueItemImpl& other) = default; // copy constructor
    QueueItemImpl(QueueItemImpl&& other) noexcept = default; // move constructor

    QueueItemImpl& operator=(const QueueItemImpl& other) = default; // copy assignment
    QueueItemImpl& operator=(QueueItemImpl&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// QueueItemImpl members

    /// <summary>
    /// 
    /// </summary>
    std::string get_Class() const;
    void set_Class(std::string value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getExpectedBuildNumber() const;
    void setExpectedBuildNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getPipeline() const;
    void setPipeline(std::string value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getQueuedTime() const;
    void setQueuedTime(int32_t value);

protected:
    std::string m__class = "";
    int32_t m_ExpectedBuildNumber = 0;
    std::string m_Id = "";
    std::string m_Pipeline = "";
    int32_t m_QueuedTime = 0;
};

std::vector<QueueItemImpl> createQueueItemImplVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<QueueItemImpl>(const QueueItemImpl& val) {
    return val.toPropertyTree();
}

template<>
inline QueueItemImpl fromPt<QueueItemImpl>(const boost::property_tree::ptree& pt) {
    QueueItemImpl ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* QueueItemImpl_H_ */
