/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.12.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Label1.h
 *
 * 
 */

#ifndef Label1_H_
#define Label1_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Label1 
{
public:
    Label1() = default;
    explicit Label1(boost::property_tree::ptree const& pt);
    virtual ~Label1() = default;

    Label1(const Label1& other) = default; // copy constructor
    Label1(Label1&& other) noexcept = default; // move constructor

    Label1& operator=(const Label1& other) = default; // copy assignment
    Label1& operator=(Label1&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// Label1 members

    /// <summary>
    /// 
    /// </summary>
    std::string get_Class() const;
    void set_Class(std::string value);

protected:
    std::string m__class = "";
};

std::vector<Label1> createLabel1VectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<Label1>(const Label1& val) {
    return val.toPropertyTree();
}

template<>
inline Label1 fromPt<Label1>(const boost::property_tree::ptree& pt) {
    Label1 ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* Label1_H_ */
