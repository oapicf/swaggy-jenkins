/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GithubRespositoryContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubRespositoryContainer{}

// GithubRespositoryContainer struct for GithubRespositoryContainer
type GithubRespositoryContainer struct {
	Class *string `json:"_class,omitempty"`
	Links *GithubRespositoryContainerlinks `json:"_links,omitempty"`
	Repositories *GithubRepositories `json:"repositories,omitempty"`
}

// NewGithubRespositoryContainer instantiates a new GithubRespositoryContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubRespositoryContainer() *GithubRespositoryContainer {
	this := GithubRespositoryContainer{}
	return &this
}

// NewGithubRespositoryContainerWithDefaults instantiates a new GithubRespositoryContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubRespositoryContainerWithDefaults() *GithubRespositoryContainer {
	this := GithubRespositoryContainer{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *GithubRespositoryContainer) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRespositoryContainer) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *GithubRespositoryContainer) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *GithubRespositoryContainer) SetClass(v string) {
	o.Class = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GithubRespositoryContainer) GetLinks() GithubRespositoryContainerlinks {
	if o == nil || IsNil(o.Links) {
		var ret GithubRespositoryContainerlinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRespositoryContainer) GetLinksOk() (*GithubRespositoryContainerlinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GithubRespositoryContainer) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given GithubRespositoryContainerlinks and assigns it to the Links field.
func (o *GithubRespositoryContainer) SetLinks(v GithubRespositoryContainerlinks) {
	o.Links = &v
}

// GetRepositories returns the Repositories field value if set, zero value otherwise.
func (o *GithubRespositoryContainer) GetRepositories() GithubRepositories {
	if o == nil || IsNil(o.Repositories) {
		var ret GithubRepositories
		return ret
	}
	return *o.Repositories
}

// GetRepositoriesOk returns a tuple with the Repositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRespositoryContainer) GetRepositoriesOk() (*GithubRepositories, bool) {
	if o == nil || IsNil(o.Repositories) {
		return nil, false
	}
	return o.Repositories, true
}

// HasRepositories returns a boolean if a field has been set.
func (o *GithubRespositoryContainer) HasRepositories() bool {
	if o != nil && !IsNil(o.Repositories) {
		return true
	}

	return false
}

// SetRepositories gets a reference to the given GithubRepositories and assigns it to the Repositories field.
func (o *GithubRespositoryContainer) SetRepositories(v GithubRepositories) {
	o.Repositories = &v
}

func (o GithubRespositoryContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubRespositoryContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Repositories) {
		toSerialize["repositories"] = o.Repositories
	}
	return toSerialize, nil
}

type NullableGithubRespositoryContainer struct {
	value *GithubRespositoryContainer
	isSet bool
}

func (v NullableGithubRespositoryContainer) Get() *GithubRespositoryContainer {
	return v.value
}

func (v *NullableGithubRespositoryContainer) Set(val *GithubRespositoryContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubRespositoryContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubRespositoryContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubRespositoryContainer(val *GithubRespositoryContainer) *NullableGithubRespositoryContainer {
	return &NullableGithubRespositoryContainer{value: val, isSet: true}
}

func (v NullableGithubRespositoryContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubRespositoryContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


