/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponseTimeMonitorData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseTimeMonitorData{}

// ResponseTimeMonitorData struct for ResponseTimeMonitorData
type ResponseTimeMonitorData struct {
	Class *string `json:"_class,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	Average *int32 `json:"average,omitempty"`
}

// NewResponseTimeMonitorData instantiates a new ResponseTimeMonitorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseTimeMonitorData() *ResponseTimeMonitorData {
	this := ResponseTimeMonitorData{}
	return &this
}

// NewResponseTimeMonitorDataWithDefaults instantiates a new ResponseTimeMonitorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseTimeMonitorDataWithDefaults() *ResponseTimeMonitorData {
	this := ResponseTimeMonitorData{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ResponseTimeMonitorData) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeMonitorData) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ResponseTimeMonitorData) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ResponseTimeMonitorData) SetClass(v string) {
	o.Class = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ResponseTimeMonitorData) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeMonitorData) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ResponseTimeMonitorData) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ResponseTimeMonitorData) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetAverage returns the Average field value if set, zero value otherwise.
func (o *ResponseTimeMonitorData) GetAverage() int32 {
	if o == nil || IsNil(o.Average) {
		var ret int32
		return ret
	}
	return *o.Average
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeMonitorData) GetAverageOk() (*int32, bool) {
	if o == nil || IsNil(o.Average) {
		return nil, false
	}
	return o.Average, true
}

// HasAverage returns a boolean if a field has been set.
func (o *ResponseTimeMonitorData) HasAverage() bool {
	if o != nil && !IsNil(o.Average) {
		return true
	}

	return false
}

// SetAverage gets a reference to the given int32 and assigns it to the Average field.
func (o *ResponseTimeMonitorData) SetAverage(v int32) {
	o.Average = &v
}

func (o ResponseTimeMonitorData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseTimeMonitorData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Average) {
		toSerialize["average"] = o.Average
	}
	return toSerialize, nil
}

type NullableResponseTimeMonitorData struct {
	value *ResponseTimeMonitorData
	isSet bool
}

func (v NullableResponseTimeMonitorData) Get() *ResponseTimeMonitorData {
	return v.value
}

func (v *NullableResponseTimeMonitorData) Set(val *ResponseTimeMonitorData) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseTimeMonitorData) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseTimeMonitorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseTimeMonitorData(val *ResponseTimeMonitorData) *NullableResponseTimeMonitorData {
	return &NullableResponseTimeMonitorData{value: val, isSet: true}
}

func (v NullableResponseTimeMonitorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseTimeMonitorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


