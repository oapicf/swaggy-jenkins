/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FreeStyleProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FreeStyleProject{}

// FreeStyleProject struct for FreeStyleProject
type FreeStyleProject struct {
	Class *string `json:"_class,omitempty"`
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
	Color *string `json:"color,omitempty"`
	Actions []FreeStyleProjectactions `json:"actions,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	DisplayNameOrNull *string `json:"displayNameOrNull,omitempty"`
	FullDisplayName *string `json:"fullDisplayName,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	Buildable *bool `json:"buildable,omitempty"`
	Builds []FreeStyleBuild `json:"builds,omitempty"`
	FirstBuild *FreeStyleBuild `json:"firstBuild,omitempty"`
	HealthReport []FreeStyleProjecthealthReport `json:"healthReport,omitempty"`
	InQueue *bool `json:"inQueue,omitempty"`
	KeepDependencies *bool `json:"keepDependencies,omitempty"`
	LastBuild *FreeStyleBuild `json:"lastBuild,omitempty"`
	LastCompletedBuild *FreeStyleBuild `json:"lastCompletedBuild,omitempty"`
	LastFailedBuild *string `json:"lastFailedBuild,omitempty"`
	LastStableBuild *FreeStyleBuild `json:"lastStableBuild,omitempty"`
	LastSuccessfulBuild *FreeStyleBuild `json:"lastSuccessfulBuild,omitempty"`
	LastUnstableBuild *string `json:"lastUnstableBuild,omitempty"`
	LastUnsuccessfulBuild *string `json:"lastUnsuccessfulBuild,omitempty"`
	NextBuildNumber *int32 `json:"nextBuildNumber,omitempty"`
	QueueItem *string `json:"queueItem,omitempty"`
	ConcurrentBuild *bool `json:"concurrentBuild,omitempty"`
	Scm *NullSCM `json:"scm,omitempty"`
}

// NewFreeStyleProject instantiates a new FreeStyleProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFreeStyleProject() *FreeStyleProject {
	this := FreeStyleProject{}
	return &this
}

// NewFreeStyleProjectWithDefaults instantiates a new FreeStyleProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFreeStyleProjectWithDefaults() *FreeStyleProject {
	this := FreeStyleProject{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *FreeStyleProject) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *FreeStyleProject) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *FreeStyleProject) SetClass(v string) {
	o.Class = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FreeStyleProject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FreeStyleProject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FreeStyleProject) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FreeStyleProject) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FreeStyleProject) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FreeStyleProject) SetUrl(v string) {
	o.Url = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *FreeStyleProject) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *FreeStyleProject) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *FreeStyleProject) SetColor(v string) {
	o.Color = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *FreeStyleProject) GetActions() []FreeStyleProjectactions {
	if o == nil || IsNil(o.Actions) {
		var ret []FreeStyleProjectactions
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetActionsOk() ([]FreeStyleProjectactions, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *FreeStyleProject) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []FreeStyleProjectactions and assigns it to the Actions field.
func (o *FreeStyleProject) SetActions(v []FreeStyleProjectactions) {
	o.Actions = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FreeStyleProject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FreeStyleProject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FreeStyleProject) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *FreeStyleProject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *FreeStyleProject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *FreeStyleProject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayNameOrNull returns the DisplayNameOrNull field value if set, zero value otherwise.
func (o *FreeStyleProject) GetDisplayNameOrNull() string {
	if o == nil || IsNil(o.DisplayNameOrNull) {
		var ret string
		return ret
	}
	return *o.DisplayNameOrNull
}

// GetDisplayNameOrNullOk returns a tuple with the DisplayNameOrNull field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetDisplayNameOrNullOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayNameOrNull) {
		return nil, false
	}
	return o.DisplayNameOrNull, true
}

// HasDisplayNameOrNull returns a boolean if a field has been set.
func (o *FreeStyleProject) HasDisplayNameOrNull() bool {
	if o != nil && !IsNil(o.DisplayNameOrNull) {
		return true
	}

	return false
}

// SetDisplayNameOrNull gets a reference to the given string and assigns it to the DisplayNameOrNull field.
func (o *FreeStyleProject) SetDisplayNameOrNull(v string) {
	o.DisplayNameOrNull = &v
}

// GetFullDisplayName returns the FullDisplayName field value if set, zero value otherwise.
func (o *FreeStyleProject) GetFullDisplayName() string {
	if o == nil || IsNil(o.FullDisplayName) {
		var ret string
		return ret
	}
	return *o.FullDisplayName
}

// GetFullDisplayNameOk returns a tuple with the FullDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetFullDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullDisplayName) {
		return nil, false
	}
	return o.FullDisplayName, true
}

// HasFullDisplayName returns a boolean if a field has been set.
func (o *FreeStyleProject) HasFullDisplayName() bool {
	if o != nil && !IsNil(o.FullDisplayName) {
		return true
	}

	return false
}

// SetFullDisplayName gets a reference to the given string and assigns it to the FullDisplayName field.
func (o *FreeStyleProject) SetFullDisplayName(v string) {
	o.FullDisplayName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *FreeStyleProject) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *FreeStyleProject) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *FreeStyleProject) SetFullName(v string) {
	o.FullName = &v
}

// GetBuildable returns the Buildable field value if set, zero value otherwise.
func (o *FreeStyleProject) GetBuildable() bool {
	if o == nil || IsNil(o.Buildable) {
		var ret bool
		return ret
	}
	return *o.Buildable
}

// GetBuildableOk returns a tuple with the Buildable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetBuildableOk() (*bool, bool) {
	if o == nil || IsNil(o.Buildable) {
		return nil, false
	}
	return o.Buildable, true
}

// HasBuildable returns a boolean if a field has been set.
func (o *FreeStyleProject) HasBuildable() bool {
	if o != nil && !IsNil(o.Buildable) {
		return true
	}

	return false
}

// SetBuildable gets a reference to the given bool and assigns it to the Buildable field.
func (o *FreeStyleProject) SetBuildable(v bool) {
	o.Buildable = &v
}

// GetBuilds returns the Builds field value if set, zero value otherwise.
func (o *FreeStyleProject) GetBuilds() []FreeStyleBuild {
	if o == nil || IsNil(o.Builds) {
		var ret []FreeStyleBuild
		return ret
	}
	return o.Builds
}

// GetBuildsOk returns a tuple with the Builds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetBuildsOk() ([]FreeStyleBuild, bool) {
	if o == nil || IsNil(o.Builds) {
		return nil, false
	}
	return o.Builds, true
}

// HasBuilds returns a boolean if a field has been set.
func (o *FreeStyleProject) HasBuilds() bool {
	if o != nil && !IsNil(o.Builds) {
		return true
	}

	return false
}

// SetBuilds gets a reference to the given []FreeStyleBuild and assigns it to the Builds field.
func (o *FreeStyleProject) SetBuilds(v []FreeStyleBuild) {
	o.Builds = v
}

// GetFirstBuild returns the FirstBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetFirstBuild() FreeStyleBuild {
	if o == nil || IsNil(o.FirstBuild) {
		var ret FreeStyleBuild
		return ret
	}
	return *o.FirstBuild
}

// GetFirstBuildOk returns a tuple with the FirstBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetFirstBuildOk() (*FreeStyleBuild, bool) {
	if o == nil || IsNil(o.FirstBuild) {
		return nil, false
	}
	return o.FirstBuild, true
}

// HasFirstBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasFirstBuild() bool {
	if o != nil && !IsNil(o.FirstBuild) {
		return true
	}

	return false
}

// SetFirstBuild gets a reference to the given FreeStyleBuild and assigns it to the FirstBuild field.
func (o *FreeStyleProject) SetFirstBuild(v FreeStyleBuild) {
	o.FirstBuild = &v
}

// GetHealthReport returns the HealthReport field value if set, zero value otherwise.
func (o *FreeStyleProject) GetHealthReport() []FreeStyleProjecthealthReport {
	if o == nil || IsNil(o.HealthReport) {
		var ret []FreeStyleProjecthealthReport
		return ret
	}
	return o.HealthReport
}

// GetHealthReportOk returns a tuple with the HealthReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetHealthReportOk() ([]FreeStyleProjecthealthReport, bool) {
	if o == nil || IsNil(o.HealthReport) {
		return nil, false
	}
	return o.HealthReport, true
}

// HasHealthReport returns a boolean if a field has been set.
func (o *FreeStyleProject) HasHealthReport() bool {
	if o != nil && !IsNil(o.HealthReport) {
		return true
	}

	return false
}

// SetHealthReport gets a reference to the given []FreeStyleProjecthealthReport and assigns it to the HealthReport field.
func (o *FreeStyleProject) SetHealthReport(v []FreeStyleProjecthealthReport) {
	o.HealthReport = v
}

// GetInQueue returns the InQueue field value if set, zero value otherwise.
func (o *FreeStyleProject) GetInQueue() bool {
	if o == nil || IsNil(o.InQueue) {
		var ret bool
		return ret
	}
	return *o.InQueue
}

// GetInQueueOk returns a tuple with the InQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetInQueueOk() (*bool, bool) {
	if o == nil || IsNil(o.InQueue) {
		return nil, false
	}
	return o.InQueue, true
}

// HasInQueue returns a boolean if a field has been set.
func (o *FreeStyleProject) HasInQueue() bool {
	if o != nil && !IsNil(o.InQueue) {
		return true
	}

	return false
}

// SetInQueue gets a reference to the given bool and assigns it to the InQueue field.
func (o *FreeStyleProject) SetInQueue(v bool) {
	o.InQueue = &v
}

// GetKeepDependencies returns the KeepDependencies field value if set, zero value otherwise.
func (o *FreeStyleProject) GetKeepDependencies() bool {
	if o == nil || IsNil(o.KeepDependencies) {
		var ret bool
		return ret
	}
	return *o.KeepDependencies
}

// GetKeepDependenciesOk returns a tuple with the KeepDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetKeepDependenciesOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepDependencies) {
		return nil, false
	}
	return o.KeepDependencies, true
}

// HasKeepDependencies returns a boolean if a field has been set.
func (o *FreeStyleProject) HasKeepDependencies() bool {
	if o != nil && !IsNil(o.KeepDependencies) {
		return true
	}

	return false
}

// SetKeepDependencies gets a reference to the given bool and assigns it to the KeepDependencies field.
func (o *FreeStyleProject) SetKeepDependencies(v bool) {
	o.KeepDependencies = &v
}

// GetLastBuild returns the LastBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastBuild() FreeStyleBuild {
	if o == nil || IsNil(o.LastBuild) {
		var ret FreeStyleBuild
		return ret
	}
	return *o.LastBuild
}

// GetLastBuildOk returns a tuple with the LastBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastBuildOk() (*FreeStyleBuild, bool) {
	if o == nil || IsNil(o.LastBuild) {
		return nil, false
	}
	return o.LastBuild, true
}

// HasLastBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastBuild() bool {
	if o != nil && !IsNil(o.LastBuild) {
		return true
	}

	return false
}

// SetLastBuild gets a reference to the given FreeStyleBuild and assigns it to the LastBuild field.
func (o *FreeStyleProject) SetLastBuild(v FreeStyleBuild) {
	o.LastBuild = &v
}

// GetLastCompletedBuild returns the LastCompletedBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastCompletedBuild() FreeStyleBuild {
	if o == nil || IsNil(o.LastCompletedBuild) {
		var ret FreeStyleBuild
		return ret
	}
	return *o.LastCompletedBuild
}

// GetLastCompletedBuildOk returns a tuple with the LastCompletedBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastCompletedBuildOk() (*FreeStyleBuild, bool) {
	if o == nil || IsNil(o.LastCompletedBuild) {
		return nil, false
	}
	return o.LastCompletedBuild, true
}

// HasLastCompletedBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastCompletedBuild() bool {
	if o != nil && !IsNil(o.LastCompletedBuild) {
		return true
	}

	return false
}

// SetLastCompletedBuild gets a reference to the given FreeStyleBuild and assigns it to the LastCompletedBuild field.
func (o *FreeStyleProject) SetLastCompletedBuild(v FreeStyleBuild) {
	o.LastCompletedBuild = &v
}

// GetLastFailedBuild returns the LastFailedBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastFailedBuild() string {
	if o == nil || IsNil(o.LastFailedBuild) {
		var ret string
		return ret
	}
	return *o.LastFailedBuild
}

// GetLastFailedBuildOk returns a tuple with the LastFailedBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastFailedBuildOk() (*string, bool) {
	if o == nil || IsNil(o.LastFailedBuild) {
		return nil, false
	}
	return o.LastFailedBuild, true
}

// HasLastFailedBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastFailedBuild() bool {
	if o != nil && !IsNil(o.LastFailedBuild) {
		return true
	}

	return false
}

// SetLastFailedBuild gets a reference to the given string and assigns it to the LastFailedBuild field.
func (o *FreeStyleProject) SetLastFailedBuild(v string) {
	o.LastFailedBuild = &v
}

// GetLastStableBuild returns the LastStableBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastStableBuild() FreeStyleBuild {
	if o == nil || IsNil(o.LastStableBuild) {
		var ret FreeStyleBuild
		return ret
	}
	return *o.LastStableBuild
}

// GetLastStableBuildOk returns a tuple with the LastStableBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastStableBuildOk() (*FreeStyleBuild, bool) {
	if o == nil || IsNil(o.LastStableBuild) {
		return nil, false
	}
	return o.LastStableBuild, true
}

// HasLastStableBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastStableBuild() bool {
	if o != nil && !IsNil(o.LastStableBuild) {
		return true
	}

	return false
}

// SetLastStableBuild gets a reference to the given FreeStyleBuild and assigns it to the LastStableBuild field.
func (o *FreeStyleProject) SetLastStableBuild(v FreeStyleBuild) {
	o.LastStableBuild = &v
}

// GetLastSuccessfulBuild returns the LastSuccessfulBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastSuccessfulBuild() FreeStyleBuild {
	if o == nil || IsNil(o.LastSuccessfulBuild) {
		var ret FreeStyleBuild
		return ret
	}
	return *o.LastSuccessfulBuild
}

// GetLastSuccessfulBuildOk returns a tuple with the LastSuccessfulBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastSuccessfulBuildOk() (*FreeStyleBuild, bool) {
	if o == nil || IsNil(o.LastSuccessfulBuild) {
		return nil, false
	}
	return o.LastSuccessfulBuild, true
}

// HasLastSuccessfulBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastSuccessfulBuild() bool {
	if o != nil && !IsNil(o.LastSuccessfulBuild) {
		return true
	}

	return false
}

// SetLastSuccessfulBuild gets a reference to the given FreeStyleBuild and assigns it to the LastSuccessfulBuild field.
func (o *FreeStyleProject) SetLastSuccessfulBuild(v FreeStyleBuild) {
	o.LastSuccessfulBuild = &v
}

// GetLastUnstableBuild returns the LastUnstableBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastUnstableBuild() string {
	if o == nil || IsNil(o.LastUnstableBuild) {
		var ret string
		return ret
	}
	return *o.LastUnstableBuild
}

// GetLastUnstableBuildOk returns a tuple with the LastUnstableBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastUnstableBuildOk() (*string, bool) {
	if o == nil || IsNil(o.LastUnstableBuild) {
		return nil, false
	}
	return o.LastUnstableBuild, true
}

// HasLastUnstableBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastUnstableBuild() bool {
	if o != nil && !IsNil(o.LastUnstableBuild) {
		return true
	}

	return false
}

// SetLastUnstableBuild gets a reference to the given string and assigns it to the LastUnstableBuild field.
func (o *FreeStyleProject) SetLastUnstableBuild(v string) {
	o.LastUnstableBuild = &v
}

// GetLastUnsuccessfulBuild returns the LastUnsuccessfulBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetLastUnsuccessfulBuild() string {
	if o == nil || IsNil(o.LastUnsuccessfulBuild) {
		var ret string
		return ret
	}
	return *o.LastUnsuccessfulBuild
}

// GetLastUnsuccessfulBuildOk returns a tuple with the LastUnsuccessfulBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetLastUnsuccessfulBuildOk() (*string, bool) {
	if o == nil || IsNil(o.LastUnsuccessfulBuild) {
		return nil, false
	}
	return o.LastUnsuccessfulBuild, true
}

// HasLastUnsuccessfulBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasLastUnsuccessfulBuild() bool {
	if o != nil && !IsNil(o.LastUnsuccessfulBuild) {
		return true
	}

	return false
}

// SetLastUnsuccessfulBuild gets a reference to the given string and assigns it to the LastUnsuccessfulBuild field.
func (o *FreeStyleProject) SetLastUnsuccessfulBuild(v string) {
	o.LastUnsuccessfulBuild = &v
}

// GetNextBuildNumber returns the NextBuildNumber field value if set, zero value otherwise.
func (o *FreeStyleProject) GetNextBuildNumber() int32 {
	if o == nil || IsNil(o.NextBuildNumber) {
		var ret int32
		return ret
	}
	return *o.NextBuildNumber
}

// GetNextBuildNumberOk returns a tuple with the NextBuildNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetNextBuildNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.NextBuildNumber) {
		return nil, false
	}
	return o.NextBuildNumber, true
}

// HasNextBuildNumber returns a boolean if a field has been set.
func (o *FreeStyleProject) HasNextBuildNumber() bool {
	if o != nil && !IsNil(o.NextBuildNumber) {
		return true
	}

	return false
}

// SetNextBuildNumber gets a reference to the given int32 and assigns it to the NextBuildNumber field.
func (o *FreeStyleProject) SetNextBuildNumber(v int32) {
	o.NextBuildNumber = &v
}

// GetQueueItem returns the QueueItem field value if set, zero value otherwise.
func (o *FreeStyleProject) GetQueueItem() string {
	if o == nil || IsNil(o.QueueItem) {
		var ret string
		return ret
	}
	return *o.QueueItem
}

// GetQueueItemOk returns a tuple with the QueueItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetQueueItemOk() (*string, bool) {
	if o == nil || IsNil(o.QueueItem) {
		return nil, false
	}
	return o.QueueItem, true
}

// HasQueueItem returns a boolean if a field has been set.
func (o *FreeStyleProject) HasQueueItem() bool {
	if o != nil && !IsNil(o.QueueItem) {
		return true
	}

	return false
}

// SetQueueItem gets a reference to the given string and assigns it to the QueueItem field.
func (o *FreeStyleProject) SetQueueItem(v string) {
	o.QueueItem = &v
}

// GetConcurrentBuild returns the ConcurrentBuild field value if set, zero value otherwise.
func (o *FreeStyleProject) GetConcurrentBuild() bool {
	if o == nil || IsNil(o.ConcurrentBuild) {
		var ret bool
		return ret
	}
	return *o.ConcurrentBuild
}

// GetConcurrentBuildOk returns a tuple with the ConcurrentBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetConcurrentBuildOk() (*bool, bool) {
	if o == nil || IsNil(o.ConcurrentBuild) {
		return nil, false
	}
	return o.ConcurrentBuild, true
}

// HasConcurrentBuild returns a boolean if a field has been set.
func (o *FreeStyleProject) HasConcurrentBuild() bool {
	if o != nil && !IsNil(o.ConcurrentBuild) {
		return true
	}

	return false
}

// SetConcurrentBuild gets a reference to the given bool and assigns it to the ConcurrentBuild field.
func (o *FreeStyleProject) SetConcurrentBuild(v bool) {
	o.ConcurrentBuild = &v
}

// GetScm returns the Scm field value if set, zero value otherwise.
func (o *FreeStyleProject) GetScm() NullSCM {
	if o == nil || IsNil(o.Scm) {
		var ret NullSCM
		return ret
	}
	return *o.Scm
}

// GetScmOk returns a tuple with the Scm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeStyleProject) GetScmOk() (*NullSCM, bool) {
	if o == nil || IsNil(o.Scm) {
		return nil, false
	}
	return o.Scm, true
}

// HasScm returns a boolean if a field has been set.
func (o *FreeStyleProject) HasScm() bool {
	if o != nil && !IsNil(o.Scm) {
		return true
	}

	return false
}

// SetScm gets a reference to the given NullSCM and assigns it to the Scm field.
func (o *FreeStyleProject) SetScm(v NullSCM) {
	o.Scm = &v
}

func (o FreeStyleProject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FreeStyleProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayNameOrNull) {
		toSerialize["displayNameOrNull"] = o.DisplayNameOrNull
	}
	if !IsNil(o.FullDisplayName) {
		toSerialize["fullDisplayName"] = o.FullDisplayName
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.Buildable) {
		toSerialize["buildable"] = o.Buildable
	}
	if !IsNil(o.Builds) {
		toSerialize["builds"] = o.Builds
	}
	if !IsNil(o.FirstBuild) {
		toSerialize["firstBuild"] = o.FirstBuild
	}
	if !IsNil(o.HealthReport) {
		toSerialize["healthReport"] = o.HealthReport
	}
	if !IsNil(o.InQueue) {
		toSerialize["inQueue"] = o.InQueue
	}
	if !IsNil(o.KeepDependencies) {
		toSerialize["keepDependencies"] = o.KeepDependencies
	}
	if !IsNil(o.LastBuild) {
		toSerialize["lastBuild"] = o.LastBuild
	}
	if !IsNil(o.LastCompletedBuild) {
		toSerialize["lastCompletedBuild"] = o.LastCompletedBuild
	}
	if !IsNil(o.LastFailedBuild) {
		toSerialize["lastFailedBuild"] = o.LastFailedBuild
	}
	if !IsNil(o.LastStableBuild) {
		toSerialize["lastStableBuild"] = o.LastStableBuild
	}
	if !IsNil(o.LastSuccessfulBuild) {
		toSerialize["lastSuccessfulBuild"] = o.LastSuccessfulBuild
	}
	if !IsNil(o.LastUnstableBuild) {
		toSerialize["lastUnstableBuild"] = o.LastUnstableBuild
	}
	if !IsNil(o.LastUnsuccessfulBuild) {
		toSerialize["lastUnsuccessfulBuild"] = o.LastUnsuccessfulBuild
	}
	if !IsNil(o.NextBuildNumber) {
		toSerialize["nextBuildNumber"] = o.NextBuildNumber
	}
	if !IsNil(o.QueueItem) {
		toSerialize["queueItem"] = o.QueueItem
	}
	if !IsNil(o.ConcurrentBuild) {
		toSerialize["concurrentBuild"] = o.ConcurrentBuild
	}
	if !IsNil(o.Scm) {
		toSerialize["scm"] = o.Scm
	}
	return toSerialize, nil
}

type NullableFreeStyleProject struct {
	value *FreeStyleProject
	isSet bool
}

func (v NullableFreeStyleProject) Get() *FreeStyleProject {
	return v.value
}

func (v *NullableFreeStyleProject) Set(val *FreeStyleProject) {
	v.value = val
	v.isSet = true
}

func (v NullableFreeStyleProject) IsSet() bool {
	return v.isSet
}

func (v *NullableFreeStyleProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFreeStyleProject(val *FreeStyleProject) *NullableFreeStyleProject {
	return &NullableFreeStyleProject{value: val, isSet: true}
}

func (v NullableFreeStyleProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFreeStyleProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


