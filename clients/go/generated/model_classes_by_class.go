/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 2.0.1-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClassesByClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClassesByClass{}

// ClassesByClass struct for ClassesByClass
type ClassesByClass struct {
	Classes []string `json:"classes,omitempty"`
	Class *string `json:"_class,omitempty"`
}

// NewClassesByClass instantiates a new ClassesByClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClassesByClass() *ClassesByClass {
	this := ClassesByClass{}
	return &this
}

// NewClassesByClassWithDefaults instantiates a new ClassesByClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClassesByClassWithDefaults() *ClassesByClass {
	this := ClassesByClass{}
	return &this
}

// GetClasses returns the Classes field value if set, zero value otherwise.
func (o *ClassesByClass) GetClasses() []string {
	if o == nil || IsNil(o.Classes) {
		var ret []string
		return ret
	}
	return o.Classes
}

// GetClassesOk returns a tuple with the Classes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClassesByClass) GetClassesOk() ([]string, bool) {
	if o == nil || IsNil(o.Classes) {
		return nil, false
	}
	return o.Classes, true
}

// HasClasses returns a boolean if a field has been set.
func (o *ClassesByClass) HasClasses() bool {
	if o != nil && !IsNil(o.Classes) {
		return true
	}

	return false
}

// SetClasses gets a reference to the given []string and assigns it to the Classes field.
func (o *ClassesByClass) SetClasses(v []string) {
	o.Classes = v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ClassesByClass) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClassesByClass) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ClassesByClass) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ClassesByClass) SetClass(v string) {
	o.Class = &v
}

func (o ClassesByClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClassesByClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Classes) {
		toSerialize["classes"] = o.Classes
	}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	return toSerialize, nil
}

type NullableClassesByClass struct {
	value *ClassesByClass
	isSet bool
}

func (v NullableClassesByClass) Get() *ClassesByClass {
	return v.value
}

func (v *NullableClassesByClass) Set(val *ClassesByClass) {
	v.value = val
	v.isSet = true
}

func (v NullableClassesByClass) IsSet() bool {
	return v.isSet
}

func (v *NullableClassesByClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClassesByClass(val *ClassesByClass) *NullableClassesByClass {
	return &NullableClassesByClass{value: val, isSet: true}
}

func (v NullableClassesByClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClassesByClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


