/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 2.0.1-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClockDifference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClockDifference{}

// ClockDifference struct for ClockDifference
type ClockDifference struct {
	Class *string `json:"_class,omitempty"`
	Diff *int32 `json:"diff,omitempty"`
}

// NewClockDifference instantiates a new ClockDifference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClockDifference() *ClockDifference {
	this := ClockDifference{}
	return &this
}

// NewClockDifferenceWithDefaults instantiates a new ClockDifference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClockDifferenceWithDefaults() *ClockDifference {
	this := ClockDifference{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ClockDifference) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockDifference) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ClockDifference) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ClockDifference) SetClass(v string) {
	o.Class = &v
}

// GetDiff returns the Diff field value if set, zero value otherwise.
func (o *ClockDifference) GetDiff() int32 {
	if o == nil || IsNil(o.Diff) {
		var ret int32
		return ret
	}
	return *o.Diff
}

// GetDiffOk returns a tuple with the Diff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClockDifference) GetDiffOk() (*int32, bool) {
	if o == nil || IsNil(o.Diff) {
		return nil, false
	}
	return o.Diff, true
}

// HasDiff returns a boolean if a field has been set.
func (o *ClockDifference) HasDiff() bool {
	if o != nil && !IsNil(o.Diff) {
		return true
	}

	return false
}

// SetDiff gets a reference to the given int32 and assigns it to the Diff field.
func (o *ClockDifference) SetDiff(v int32) {
	o.Diff = &v
}

func (o ClockDifference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClockDifference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Diff) {
		toSerialize["diff"] = o.Diff
	}
	return toSerialize, nil
}

type NullableClockDifference struct {
	value *ClockDifference
	isSet bool
}

func (v NullableClockDifference) Get() *ClockDifference {
	return v.value
}

func (v *NullableClockDifference) Set(val *ClockDifference) {
	v.value = val
	v.isSet = true
}

func (v NullableClockDifference) IsSet() bool {
	return v.isSet
}

func (v *NullableClockDifference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClockDifference(val *ClockDifference) *NullableClockDifference {
	return &NullableClockDifference{value: val, isSet: true}
}

func (v NullableClockDifference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClockDifference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


