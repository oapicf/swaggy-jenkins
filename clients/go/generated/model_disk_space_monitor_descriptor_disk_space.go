/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiskSpaceMonitorDescriptorDiskSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiskSpaceMonitorDescriptorDiskSpace{}

// DiskSpaceMonitorDescriptorDiskSpace struct for DiskSpaceMonitorDescriptorDiskSpace
type DiskSpaceMonitorDescriptorDiskSpace struct {
	Class *string `json:"_class,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	Path *string `json:"path,omitempty"`
	Size *int32 `json:"size,omitempty"`
}

// NewDiskSpaceMonitorDescriptorDiskSpace instantiates a new DiskSpaceMonitorDescriptorDiskSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskSpaceMonitorDescriptorDiskSpace() *DiskSpaceMonitorDescriptorDiskSpace {
	this := DiskSpaceMonitorDescriptorDiskSpace{}
	return &this
}

// NewDiskSpaceMonitorDescriptorDiskSpaceWithDefaults instantiates a new DiskSpaceMonitorDescriptorDiskSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskSpaceMonitorDescriptorDiskSpaceWithDefaults() *DiskSpaceMonitorDescriptorDiskSpace {
	this := DiskSpaceMonitorDescriptorDiskSpace{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *DiskSpaceMonitorDescriptorDiskSpace) SetClass(v string) {
	o.Class = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *DiskSpaceMonitorDescriptorDiskSpace) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *DiskSpaceMonitorDescriptorDiskSpace) SetPath(v string) {
	o.Path = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DiskSpaceMonitorDescriptorDiskSpace) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *DiskSpaceMonitorDescriptorDiskSpace) SetSize(v int32) {
	o.Size = &v
}

func (o DiskSpaceMonitorDescriptorDiskSpace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiskSpaceMonitorDescriptorDiskSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableDiskSpaceMonitorDescriptorDiskSpace struct {
	value *DiskSpaceMonitorDescriptorDiskSpace
	isSet bool
}

func (v NullableDiskSpaceMonitorDescriptorDiskSpace) Get() *DiskSpaceMonitorDescriptorDiskSpace {
	return v.value
}

func (v *NullableDiskSpaceMonitorDescriptorDiskSpace) Set(val *DiskSpaceMonitorDescriptorDiskSpace) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskSpaceMonitorDescriptorDiskSpace) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskSpaceMonitorDescriptorDiskSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskSpaceMonitorDescriptorDiskSpace(val *DiskSpaceMonitorDescriptorDiskSpace) *NullableDiskSpaceMonitorDescriptorDiskSpace {
	return &NullableDiskSpaceMonitorDescriptorDiskSpace{value: val, isSet: true}
}

func (v NullableDiskSpaceMonitorDescriptorDiskSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskSpaceMonitorDescriptorDiskSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


