/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 2.0.1-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExtensionClassContainerImpl1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionClassContainerImpl1{}

// ExtensionClassContainerImpl1 struct for ExtensionClassContainerImpl1
type ExtensionClassContainerImpl1 struct {
	Class *string `json:"_class,omitempty"`
	Links *ExtensionClassContainerImpl1links `json:"_links,omitempty"`
	Map *ExtensionClassContainerImpl1map `json:"map,omitempty"`
}

// NewExtensionClassContainerImpl1 instantiates a new ExtensionClassContainerImpl1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionClassContainerImpl1() *ExtensionClassContainerImpl1 {
	this := ExtensionClassContainerImpl1{}
	return &this
}

// NewExtensionClassContainerImpl1WithDefaults instantiates a new ExtensionClassContainerImpl1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionClassContainerImpl1WithDefaults() *ExtensionClassContainerImpl1 {
	this := ExtensionClassContainerImpl1{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *ExtensionClassContainerImpl1) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionClassContainerImpl1) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *ExtensionClassContainerImpl1) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *ExtensionClassContainerImpl1) SetClass(v string) {
	o.Class = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ExtensionClassContainerImpl1) GetLinks() ExtensionClassContainerImpl1links {
	if o == nil || IsNil(o.Links) {
		var ret ExtensionClassContainerImpl1links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionClassContainerImpl1) GetLinksOk() (*ExtensionClassContainerImpl1links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ExtensionClassContainerImpl1) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ExtensionClassContainerImpl1links and assigns it to the Links field.
func (o *ExtensionClassContainerImpl1) SetLinks(v ExtensionClassContainerImpl1links) {
	o.Links = &v
}

// GetMap returns the Map field value if set, zero value otherwise.
func (o *ExtensionClassContainerImpl1) GetMap() ExtensionClassContainerImpl1map {
	if o == nil || IsNil(o.Map) {
		var ret ExtensionClassContainerImpl1map
		return ret
	}
	return *o.Map
}

// GetMapOk returns a tuple with the Map field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionClassContainerImpl1) GetMapOk() (*ExtensionClassContainerImpl1map, bool) {
	if o == nil || IsNil(o.Map) {
		return nil, false
	}
	return o.Map, true
}

// HasMap returns a boolean if a field has been set.
func (o *ExtensionClassContainerImpl1) HasMap() bool {
	if o != nil && !IsNil(o.Map) {
		return true
	}

	return false
}

// SetMap gets a reference to the given ExtensionClassContainerImpl1map and assigns it to the Map field.
func (o *ExtensionClassContainerImpl1) SetMap(v ExtensionClassContainerImpl1map) {
	o.Map = &v
}

func (o ExtensionClassContainerImpl1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionClassContainerImpl1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Map) {
		toSerialize["map"] = o.Map
	}
	return toSerialize, nil
}

type NullableExtensionClassContainerImpl1 struct {
	value *ExtensionClassContainerImpl1
	isSet bool
}

func (v NullableExtensionClassContainerImpl1) Get() *ExtensionClassContainerImpl1 {
	return v.value
}

func (v *NullableExtensionClassContainerImpl1) Set(val *ExtensionClassContainerImpl1) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionClassContainerImpl1) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionClassContainerImpl1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionClassContainerImpl1(val *ExtensionClassContainerImpl1) *NullableExtensionClassContainerImpl1 {
	return &NullableExtensionClassContainerImpl1{value: val, isSet: true}
}

func (v NullableExtensionClassContainerImpl1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionClassContainerImpl1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


