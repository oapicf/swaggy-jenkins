/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MultibranchPipeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultibranchPipeline{}

// MultibranchPipeline struct for MultibranchPipeline
type MultibranchPipeline struct {
	DisplayName *string `json:"displayName,omitempty"`
	EstimatedDurationInMillis *int32 `json:"estimatedDurationInMillis,omitempty"`
	LatestRun *string `json:"latestRun,omitempty"`
	Name *string `json:"name,omitempty"`
	Organization *string `json:"organization,omitempty"`
	WeatherScore *int32 `json:"weatherScore,omitempty"`
	BranchNames []string `json:"branchNames,omitempty"`
	NumberOfFailingBranches *int32 `json:"numberOfFailingBranches,omitempty"`
	NumberOfFailingPullRequests *int32 `json:"numberOfFailingPullRequests,omitempty"`
	NumberOfSuccessfulBranches *int32 `json:"numberOfSuccessfulBranches,omitempty"`
	NumberOfSuccessfulPullRequests *int32 `json:"numberOfSuccessfulPullRequests,omitempty"`
	TotalNumberOfBranches *int32 `json:"totalNumberOfBranches,omitempty"`
	TotalNumberOfPullRequests *int32 `json:"totalNumberOfPullRequests,omitempty"`
	Class *string `json:"_class,omitempty"`
}

// NewMultibranchPipeline instantiates a new MultibranchPipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultibranchPipeline() *MultibranchPipeline {
	this := MultibranchPipeline{}
	return &this
}

// NewMultibranchPipelineWithDefaults instantiates a new MultibranchPipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultibranchPipelineWithDefaults() *MultibranchPipeline {
	this := MultibranchPipeline{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MultibranchPipeline) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEstimatedDurationInMillis returns the EstimatedDurationInMillis field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetEstimatedDurationInMillis() int32 {
	if o == nil || IsNil(o.EstimatedDurationInMillis) {
		var ret int32
		return ret
	}
	return *o.EstimatedDurationInMillis
}

// GetEstimatedDurationInMillisOk returns a tuple with the EstimatedDurationInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetEstimatedDurationInMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedDurationInMillis) {
		return nil, false
	}
	return o.EstimatedDurationInMillis, true
}

// HasEstimatedDurationInMillis returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasEstimatedDurationInMillis() bool {
	if o != nil && !IsNil(o.EstimatedDurationInMillis) {
		return true
	}

	return false
}

// SetEstimatedDurationInMillis gets a reference to the given int32 and assigns it to the EstimatedDurationInMillis field.
func (o *MultibranchPipeline) SetEstimatedDurationInMillis(v int32) {
	o.EstimatedDurationInMillis = &v
}

// GetLatestRun returns the LatestRun field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetLatestRun() string {
	if o == nil || IsNil(o.LatestRun) {
		var ret string
		return ret
	}
	return *o.LatestRun
}

// GetLatestRunOk returns a tuple with the LatestRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetLatestRunOk() (*string, bool) {
	if o == nil || IsNil(o.LatestRun) {
		return nil, false
	}
	return o.LatestRun, true
}

// HasLatestRun returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasLatestRun() bool {
	if o != nil && !IsNil(o.LatestRun) {
		return true
	}

	return false
}

// SetLatestRun gets a reference to the given string and assigns it to the LatestRun field.
func (o *MultibranchPipeline) SetLatestRun(v string) {
	o.LatestRun = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MultibranchPipeline) SetName(v string) {
	o.Name = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *MultibranchPipeline) SetOrganization(v string) {
	o.Organization = &v
}

// GetWeatherScore returns the WeatherScore field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetWeatherScore() int32 {
	if o == nil || IsNil(o.WeatherScore) {
		var ret int32
		return ret
	}
	return *o.WeatherScore
}

// GetWeatherScoreOk returns a tuple with the WeatherScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetWeatherScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.WeatherScore) {
		return nil, false
	}
	return o.WeatherScore, true
}

// HasWeatherScore returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasWeatherScore() bool {
	if o != nil && !IsNil(o.WeatherScore) {
		return true
	}

	return false
}

// SetWeatherScore gets a reference to the given int32 and assigns it to the WeatherScore field.
func (o *MultibranchPipeline) SetWeatherScore(v int32) {
	o.WeatherScore = &v
}

// GetBranchNames returns the BranchNames field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetBranchNames() []string {
	if o == nil || IsNil(o.BranchNames) {
		var ret []string
		return ret
	}
	return o.BranchNames
}

// GetBranchNamesOk returns a tuple with the BranchNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetBranchNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.BranchNames) {
		return nil, false
	}
	return o.BranchNames, true
}

// HasBranchNames returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasBranchNames() bool {
	if o != nil && !IsNil(o.BranchNames) {
		return true
	}

	return false
}

// SetBranchNames gets a reference to the given []string and assigns it to the BranchNames field.
func (o *MultibranchPipeline) SetBranchNames(v []string) {
	o.BranchNames = v
}

// GetNumberOfFailingBranches returns the NumberOfFailingBranches field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetNumberOfFailingBranches() int32 {
	if o == nil || IsNil(o.NumberOfFailingBranches) {
		var ret int32
		return ret
	}
	return *o.NumberOfFailingBranches
}

// GetNumberOfFailingBranchesOk returns a tuple with the NumberOfFailingBranches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetNumberOfFailingBranchesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfFailingBranches) {
		return nil, false
	}
	return o.NumberOfFailingBranches, true
}

// HasNumberOfFailingBranches returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasNumberOfFailingBranches() bool {
	if o != nil && !IsNil(o.NumberOfFailingBranches) {
		return true
	}

	return false
}

// SetNumberOfFailingBranches gets a reference to the given int32 and assigns it to the NumberOfFailingBranches field.
func (o *MultibranchPipeline) SetNumberOfFailingBranches(v int32) {
	o.NumberOfFailingBranches = &v
}

// GetNumberOfFailingPullRequests returns the NumberOfFailingPullRequests field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetNumberOfFailingPullRequests() int32 {
	if o == nil || IsNil(o.NumberOfFailingPullRequests) {
		var ret int32
		return ret
	}
	return *o.NumberOfFailingPullRequests
}

// GetNumberOfFailingPullRequestsOk returns a tuple with the NumberOfFailingPullRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetNumberOfFailingPullRequestsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfFailingPullRequests) {
		return nil, false
	}
	return o.NumberOfFailingPullRequests, true
}

// HasNumberOfFailingPullRequests returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasNumberOfFailingPullRequests() bool {
	if o != nil && !IsNil(o.NumberOfFailingPullRequests) {
		return true
	}

	return false
}

// SetNumberOfFailingPullRequests gets a reference to the given int32 and assigns it to the NumberOfFailingPullRequests field.
func (o *MultibranchPipeline) SetNumberOfFailingPullRequests(v int32) {
	o.NumberOfFailingPullRequests = &v
}

// GetNumberOfSuccessfulBranches returns the NumberOfSuccessfulBranches field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetNumberOfSuccessfulBranches() int32 {
	if o == nil || IsNil(o.NumberOfSuccessfulBranches) {
		var ret int32
		return ret
	}
	return *o.NumberOfSuccessfulBranches
}

// GetNumberOfSuccessfulBranchesOk returns a tuple with the NumberOfSuccessfulBranches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetNumberOfSuccessfulBranchesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfSuccessfulBranches) {
		return nil, false
	}
	return o.NumberOfSuccessfulBranches, true
}

// HasNumberOfSuccessfulBranches returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasNumberOfSuccessfulBranches() bool {
	if o != nil && !IsNil(o.NumberOfSuccessfulBranches) {
		return true
	}

	return false
}

// SetNumberOfSuccessfulBranches gets a reference to the given int32 and assigns it to the NumberOfSuccessfulBranches field.
func (o *MultibranchPipeline) SetNumberOfSuccessfulBranches(v int32) {
	o.NumberOfSuccessfulBranches = &v
}

// GetNumberOfSuccessfulPullRequests returns the NumberOfSuccessfulPullRequests field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetNumberOfSuccessfulPullRequests() int32 {
	if o == nil || IsNil(o.NumberOfSuccessfulPullRequests) {
		var ret int32
		return ret
	}
	return *o.NumberOfSuccessfulPullRequests
}

// GetNumberOfSuccessfulPullRequestsOk returns a tuple with the NumberOfSuccessfulPullRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetNumberOfSuccessfulPullRequestsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfSuccessfulPullRequests) {
		return nil, false
	}
	return o.NumberOfSuccessfulPullRequests, true
}

// HasNumberOfSuccessfulPullRequests returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasNumberOfSuccessfulPullRequests() bool {
	if o != nil && !IsNil(o.NumberOfSuccessfulPullRequests) {
		return true
	}

	return false
}

// SetNumberOfSuccessfulPullRequests gets a reference to the given int32 and assigns it to the NumberOfSuccessfulPullRequests field.
func (o *MultibranchPipeline) SetNumberOfSuccessfulPullRequests(v int32) {
	o.NumberOfSuccessfulPullRequests = &v
}

// GetTotalNumberOfBranches returns the TotalNumberOfBranches field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetTotalNumberOfBranches() int32 {
	if o == nil || IsNil(o.TotalNumberOfBranches) {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfBranches
}

// GetTotalNumberOfBranchesOk returns a tuple with the TotalNumberOfBranches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetTotalNumberOfBranchesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalNumberOfBranches) {
		return nil, false
	}
	return o.TotalNumberOfBranches, true
}

// HasTotalNumberOfBranches returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasTotalNumberOfBranches() bool {
	if o != nil && !IsNil(o.TotalNumberOfBranches) {
		return true
	}

	return false
}

// SetTotalNumberOfBranches gets a reference to the given int32 and assigns it to the TotalNumberOfBranches field.
func (o *MultibranchPipeline) SetTotalNumberOfBranches(v int32) {
	o.TotalNumberOfBranches = &v
}

// GetTotalNumberOfPullRequests returns the TotalNumberOfPullRequests field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetTotalNumberOfPullRequests() int32 {
	if o == nil || IsNil(o.TotalNumberOfPullRequests) {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfPullRequests
}

// GetTotalNumberOfPullRequestsOk returns a tuple with the TotalNumberOfPullRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetTotalNumberOfPullRequestsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalNumberOfPullRequests) {
		return nil, false
	}
	return o.TotalNumberOfPullRequests, true
}

// HasTotalNumberOfPullRequests returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasTotalNumberOfPullRequests() bool {
	if o != nil && !IsNil(o.TotalNumberOfPullRequests) {
		return true
	}

	return false
}

// SetTotalNumberOfPullRequests gets a reference to the given int32 and assigns it to the TotalNumberOfPullRequests field.
func (o *MultibranchPipeline) SetTotalNumberOfPullRequests(v int32) {
	o.TotalNumberOfPullRequests = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *MultibranchPipeline) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultibranchPipeline) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *MultibranchPipeline) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *MultibranchPipeline) SetClass(v string) {
	o.Class = &v
}

func (o MultibranchPipeline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultibranchPipeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.EstimatedDurationInMillis) {
		toSerialize["estimatedDurationInMillis"] = o.EstimatedDurationInMillis
	}
	if !IsNil(o.LatestRun) {
		toSerialize["latestRun"] = o.LatestRun
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.WeatherScore) {
		toSerialize["weatherScore"] = o.WeatherScore
	}
	if !IsNil(o.BranchNames) {
		toSerialize["branchNames"] = o.BranchNames
	}
	if !IsNil(o.NumberOfFailingBranches) {
		toSerialize["numberOfFailingBranches"] = o.NumberOfFailingBranches
	}
	if !IsNil(o.NumberOfFailingPullRequests) {
		toSerialize["numberOfFailingPullRequests"] = o.NumberOfFailingPullRequests
	}
	if !IsNil(o.NumberOfSuccessfulBranches) {
		toSerialize["numberOfSuccessfulBranches"] = o.NumberOfSuccessfulBranches
	}
	if !IsNil(o.NumberOfSuccessfulPullRequests) {
		toSerialize["numberOfSuccessfulPullRequests"] = o.NumberOfSuccessfulPullRequests
	}
	if !IsNil(o.TotalNumberOfBranches) {
		toSerialize["totalNumberOfBranches"] = o.TotalNumberOfBranches
	}
	if !IsNil(o.TotalNumberOfPullRequests) {
		toSerialize["totalNumberOfPullRequests"] = o.TotalNumberOfPullRequests
	}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	return toSerialize, nil
}

type NullableMultibranchPipeline struct {
	value *MultibranchPipeline
	isSet bool
}

func (v NullableMultibranchPipeline) Get() *MultibranchPipeline {
	return v.value
}

func (v *NullableMultibranchPipeline) Set(val *MultibranchPipeline) {
	v.value = val
	v.isSet = true
}

func (v NullableMultibranchPipeline) IsSet() bool {
	return v.isSet
}

func (v *NullableMultibranchPipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultibranchPipeline(val *MultibranchPipeline) *NullableMultibranchPipeline {
	return &NullableMultibranchPipeline{value: val, isSet: true}
}

func (v NullableMultibranchPipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultibranchPipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


