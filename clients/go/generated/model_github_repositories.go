/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 3.0.2-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GithubRepositories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubRepositories{}

// GithubRepositories struct for GithubRepositories
type GithubRepositories struct {
	Class *string `json:"_class,omitempty"`
	Links *GithubRepositorieslinks `json:"_links,omitempty"`
	Items []GithubRepository `json:"items,omitempty"`
	LastPage *int32 `json:"lastPage,omitempty"`
	NextPage *int32 `json:"nextPage,omitempty"`
	PageSize *int32 `json:"pageSize,omitempty"`
}

// NewGithubRepositories instantiates a new GithubRepositories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubRepositories() *GithubRepositories {
	this := GithubRepositories{}
	return &this
}

// NewGithubRepositoriesWithDefaults instantiates a new GithubRepositories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubRepositoriesWithDefaults() *GithubRepositories {
	this := GithubRepositories{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *GithubRepositories) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *GithubRepositories) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *GithubRepositories) SetClass(v string) {
	o.Class = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GithubRepositories) GetLinks() GithubRepositorieslinks {
	if o == nil || IsNil(o.Links) {
		var ret GithubRepositorieslinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetLinksOk() (*GithubRepositorieslinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GithubRepositories) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given GithubRepositorieslinks and assigns it to the Links field.
func (o *GithubRepositories) SetLinks(v GithubRepositorieslinks) {
	o.Links = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GithubRepositories) GetItems() []GithubRepository {
	if o == nil || IsNil(o.Items) {
		var ret []GithubRepository
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetItemsOk() ([]GithubRepository, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GithubRepositories) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []GithubRepository and assigns it to the Items field.
func (o *GithubRepositories) SetItems(v []GithubRepository) {
	o.Items = v
}

// GetLastPage returns the LastPage field value if set, zero value otherwise.
func (o *GithubRepositories) GetLastPage() int32 {
	if o == nil || IsNil(o.LastPage) {
		var ret int32
		return ret
	}
	return *o.LastPage
}

// GetLastPageOk returns a tuple with the LastPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetLastPageOk() (*int32, bool) {
	if o == nil || IsNil(o.LastPage) {
		return nil, false
	}
	return o.LastPage, true
}

// HasLastPage returns a boolean if a field has been set.
func (o *GithubRepositories) HasLastPage() bool {
	if o != nil && !IsNil(o.LastPage) {
		return true
	}

	return false
}

// SetLastPage gets a reference to the given int32 and assigns it to the LastPage field.
func (o *GithubRepositories) SetLastPage(v int32) {
	o.LastPage = &v
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *GithubRepositories) GetNextPage() int32 {
	if o == nil || IsNil(o.NextPage) {
		var ret int32
		return ret
	}
	return *o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetNextPageOk() (*int32, bool) {
	if o == nil || IsNil(o.NextPage) {
		return nil, false
	}
	return o.NextPage, true
}

// HasNextPage returns a boolean if a field has been set.
func (o *GithubRepositories) HasNextPage() bool {
	if o != nil && !IsNil(o.NextPage) {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given int32 and assigns it to the NextPage field.
func (o *GithubRepositories) SetNextPage(v int32) {
	o.NextPage = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *GithubRepositories) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepositories) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *GithubRepositories) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *GithubRepositories) SetPageSize(v int32) {
	o.PageSize = &v
}

func (o GithubRepositories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubRepositories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.LastPage) {
		toSerialize["lastPage"] = o.LastPage
	}
	if !IsNil(o.NextPage) {
		toSerialize["nextPage"] = o.NextPage
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	return toSerialize, nil
}

type NullableGithubRepositories struct {
	value *GithubRepositories
	isSet bool
}

func (v NullableGithubRepositories) Get() *GithubRepositories {
	return v.value
}

func (v *NullableGithubRepositories) Set(val *GithubRepositories) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubRepositories) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubRepositories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubRepositories(val *GithubRepositories) *NullableGithubRepositories {
	return &NullableGithubRepositories{value: val, isSet: true}
}

func (v NullableGithubRepositories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubRepositories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


