/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 2.0.1-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Pipeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pipeline{}

// Pipeline struct for Pipeline
type Pipeline struct {
	Class *string `json:"_class,omitempty"`
	Organization *string `json:"organization,omitempty"`
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	WeatherScore *int32 `json:"weatherScore,omitempty"`
	EstimatedDurationInMillis *int32 `json:"estimatedDurationInMillis,omitempty"`
	LatestRun *PipelinelatestRun `json:"latestRun,omitempty"`
}

// NewPipeline instantiates a new Pipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipeline() *Pipeline {
	this := Pipeline{}
	return &this
}

// NewPipelineWithDefaults instantiates a new Pipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineWithDefaults() *Pipeline {
	this := Pipeline{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Pipeline) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *Pipeline) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Pipeline) SetClass(v string) {
	o.Class = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *Pipeline) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *Pipeline) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *Pipeline) SetOrganization(v string) {
	o.Organization = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Pipeline) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Pipeline) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Pipeline) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Pipeline) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Pipeline) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Pipeline) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *Pipeline) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *Pipeline) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *Pipeline) SetFullName(v string) {
	o.FullName = &v
}

// GetWeatherScore returns the WeatherScore field value if set, zero value otherwise.
func (o *Pipeline) GetWeatherScore() int32 {
	if o == nil || IsNil(o.WeatherScore) {
		var ret int32
		return ret
	}
	return *o.WeatherScore
}

// GetWeatherScoreOk returns a tuple with the WeatherScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetWeatherScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.WeatherScore) {
		return nil, false
	}
	return o.WeatherScore, true
}

// HasWeatherScore returns a boolean if a field has been set.
func (o *Pipeline) HasWeatherScore() bool {
	if o != nil && !IsNil(o.WeatherScore) {
		return true
	}

	return false
}

// SetWeatherScore gets a reference to the given int32 and assigns it to the WeatherScore field.
func (o *Pipeline) SetWeatherScore(v int32) {
	o.WeatherScore = &v
}

// GetEstimatedDurationInMillis returns the EstimatedDurationInMillis field value if set, zero value otherwise.
func (o *Pipeline) GetEstimatedDurationInMillis() int32 {
	if o == nil || IsNil(o.EstimatedDurationInMillis) {
		var ret int32
		return ret
	}
	return *o.EstimatedDurationInMillis
}

// GetEstimatedDurationInMillisOk returns a tuple with the EstimatedDurationInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetEstimatedDurationInMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedDurationInMillis) {
		return nil, false
	}
	return o.EstimatedDurationInMillis, true
}

// HasEstimatedDurationInMillis returns a boolean if a field has been set.
func (o *Pipeline) HasEstimatedDurationInMillis() bool {
	if o != nil && !IsNil(o.EstimatedDurationInMillis) {
		return true
	}

	return false
}

// SetEstimatedDurationInMillis gets a reference to the given int32 and assigns it to the EstimatedDurationInMillis field.
func (o *Pipeline) SetEstimatedDurationInMillis(v int32) {
	o.EstimatedDurationInMillis = &v
}

// GetLatestRun returns the LatestRun field value if set, zero value otherwise.
func (o *Pipeline) GetLatestRun() PipelinelatestRun {
	if o == nil || IsNil(o.LatestRun) {
		var ret PipelinelatestRun
		return ret
	}
	return *o.LatestRun
}

// GetLatestRunOk returns a tuple with the LatestRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetLatestRunOk() (*PipelinelatestRun, bool) {
	if o == nil || IsNil(o.LatestRun) {
		return nil, false
	}
	return o.LatestRun, true
}

// HasLatestRun returns a boolean if a field has been set.
func (o *Pipeline) HasLatestRun() bool {
	if o != nil && !IsNil(o.LatestRun) {
		return true
	}

	return false
}

// SetLatestRun gets a reference to the given PipelinelatestRun and assigns it to the LatestRun field.
func (o *Pipeline) SetLatestRun(v PipelinelatestRun) {
	o.LatestRun = &v
}

func (o Pipeline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pipeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.WeatherScore) {
		toSerialize["weatherScore"] = o.WeatherScore
	}
	if !IsNil(o.EstimatedDurationInMillis) {
		toSerialize["estimatedDurationInMillis"] = o.EstimatedDurationInMillis
	}
	if !IsNil(o.LatestRun) {
		toSerialize["latestRun"] = o.LatestRun
	}
	return toSerialize, nil
}

type NullablePipeline struct {
	value *Pipeline
	isSet bool
}

func (v NullablePipeline) Get() *Pipeline {
	return v.value
}

func (v *NullablePipeline) Set(val *Pipeline) {
	v.value = val
	v.isSet = true
}

func (v NullablePipeline) IsSet() bool {
	return v.isSet
}

func (v *NullablePipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipeline(val *Pipeline) *NullablePipeline {
	return &NullablePipeline{value: val, isSet: true}
}

func (v NullablePipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


