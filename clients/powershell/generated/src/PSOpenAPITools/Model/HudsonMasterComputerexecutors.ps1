#
# Swaggy Jenkins
# Jenkins API clients generated from Swagger / Open API specification
# Version: 2.0.1-pre.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CurrentExecutable
No description available.
.PARAMETER Idle
No description available.
.PARAMETER LikelyStuck
No description available.
.PARAMETER Number
No description available.
.PARAMETER Progress
No description available.
.PARAMETER Class
No description available.
.OUTPUTS

HudsonMasterComputerexecutors<PSCustomObject>
#>

function Initialize-HudsonMasterComputerexecutors {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CurrentExecutable},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Idle},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${LikelyStuck},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Number},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Progress},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Class}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => HudsonMasterComputerexecutors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "currentExecutable" = ${CurrentExecutable}
            "idle" = ${Idle}
            "likelyStuck" = ${LikelyStuck}
            "number" = ${Number}
            "progress" = ${Progress}
            "_class" = ${Class}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to HudsonMasterComputerexecutors<PSCustomObject>

.DESCRIPTION

Convert from JSON to HudsonMasterComputerexecutors<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

HudsonMasterComputerexecutors<PSCustomObject>
#>
function ConvertFrom-JsonToHudsonMasterComputerexecutors {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => HudsonMasterComputerexecutors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in HudsonMasterComputerexecutors
        $AllProperties = ("currentExecutable", "idle", "likelyStuck", "number", "progress", "_class")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currentExecutable"))) { #optional property not found
            $CurrentExecutable = $null
        } else {
            $CurrentExecutable = $JsonParameters.PSobject.Properties["currentExecutable"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "idle"))) { #optional property not found
            $Idle = $null
        } else {
            $Idle = $JsonParameters.PSobject.Properties["idle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "likelyStuck"))) { #optional property not found
            $LikelyStuck = $null
        } else {
            $LikelyStuck = $JsonParameters.PSobject.Properties["likelyStuck"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "number"))) { #optional property not found
            $Number = $null
        } else {
            $Number = $JsonParameters.PSobject.Properties["number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "progress"))) { #optional property not found
            $Progress = $null
        } else {
            $Progress = $JsonParameters.PSobject.Properties["progress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "_class"))) { #optional property not found
            $Class = $null
        } else {
            $Class = $JsonParameters.PSobject.Properties["_class"].value
        }

        $PSO = [PSCustomObject]@{
            "currentExecutable" = ${CurrentExecutable}
            "idle" = ${Idle}
            "likelyStuck" = ${LikelyStuck}
            "number" = ${Number}
            "progress" = ${Progress}
            "_class" = ${Class}
        }

        return $PSO
    }

}

