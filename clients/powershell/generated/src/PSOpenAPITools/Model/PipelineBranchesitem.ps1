#
# Swaggy Jenkins
# Jenkins API clients generated from Swagger / Open API specification
# Version: 2.0.1-pre.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DisplayName
No description available.
.PARAMETER EstimatedDurationInMillis
No description available.
.PARAMETER Name
No description available.
.PARAMETER WeatherScore
No description available.
.PARAMETER LatestRun
No description available.
.PARAMETER Organization
No description available.
.PARAMETER PullRequest
No description available.
.PARAMETER TotalNumberOfPullRequests
No description available.
.PARAMETER Class
No description available.
.OUTPUTS

PipelineBranchesitem<PSCustomObject>
#>

function Initialize-PipelineBranchesitem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DisplayName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${EstimatedDurationInMillis},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${WeatherScore},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${LatestRun},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Organization},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${PullRequest},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${TotalNumberOfPullRequests},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Class}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PipelineBranchesitem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "displayName" = ${DisplayName}
            "estimatedDurationInMillis" = ${EstimatedDurationInMillis}
            "name" = ${Name}
            "weatherScore" = ${WeatherScore}
            "latestRun" = ${LatestRun}
            "organization" = ${Organization}
            "pullRequest" = ${PullRequest}
            "totalNumberOfPullRequests" = ${TotalNumberOfPullRequests}
            "_class" = ${Class}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PipelineBranchesitem<PSCustomObject>

.DESCRIPTION

Convert from JSON to PipelineBranchesitem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PipelineBranchesitem<PSCustomObject>
#>
function ConvertFrom-JsonToPipelineBranchesitem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PipelineBranchesitem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PipelineBranchesitem
        $AllProperties = ("displayName", "estimatedDurationInMillis", "name", "weatherScore", "latestRun", "organization", "pullRequest", "totalNumberOfPullRequests", "_class")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "displayName"))) { #optional property not found
            $DisplayName = $null
        } else {
            $DisplayName = $JsonParameters.PSobject.Properties["displayName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "estimatedDurationInMillis"))) { #optional property not found
            $EstimatedDurationInMillis = $null
        } else {
            $EstimatedDurationInMillis = $JsonParameters.PSobject.Properties["estimatedDurationInMillis"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "weatherScore"))) { #optional property not found
            $WeatherScore = $null
        } else {
            $WeatherScore = $JsonParameters.PSobject.Properties["weatherScore"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "latestRun"))) { #optional property not found
            $LatestRun = $null
        } else {
            $LatestRun = $JsonParameters.PSobject.Properties["latestRun"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "organization"))) { #optional property not found
            $Organization = $null
        } else {
            $Organization = $JsonParameters.PSobject.Properties["organization"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pullRequest"))) { #optional property not found
            $PullRequest = $null
        } else {
            $PullRequest = $JsonParameters.PSobject.Properties["pullRequest"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalNumberOfPullRequests"))) { #optional property not found
            $TotalNumberOfPullRequests = $null
        } else {
            $TotalNumberOfPullRequests = $JsonParameters.PSobject.Properties["totalNumberOfPullRequests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "_class"))) { #optional property not found
            $Class = $null
        } else {
            $Class = $JsonParameters.PSobject.Properties["_class"].value
        }

        $PSO = [PSCustomObject]@{
            "displayName" = ${DisplayName}
            "estimatedDurationInMillis" = ${EstimatedDurationInMillis}
            "name" = ${Name}
            "weatherScore" = ${WeatherScore}
            "latestRun" = ${LatestRun}
            "organization" = ${Organization}
            "pullRequest" = ${PullRequest}
            "totalNumberOfPullRequests" = ${TotalNumberOfPullRequests}
            "_class" = ${Class}
        }

        return $PSO
    }

}

