#
# Swaggy Jenkins
# Jenkins API clients generated from Swagger / Open API specification
# Version: 2.0.1-pre.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Self
No description available.
.PARAMETER Actions
No description available.
.PARAMETER Runs
No description available.
.PARAMETER Queue
No description available.
.PARAMETER Class
No description available.
.OUTPUTS

BranchImpllinks<PSCustomObject>
#>

function Initialize-BranchImpllinks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Self},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Actions},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Runs},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Queue},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Class}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BranchImpllinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "actions" = ${Actions}
            "runs" = ${Runs}
            "queue" = ${Queue}
            "_class" = ${Class}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BranchImpllinks<PSCustomObject>

.DESCRIPTION

Convert from JSON to BranchImpllinks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BranchImpllinks<PSCustomObject>
#>
function ConvertFrom-JsonToBranchImpllinks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BranchImpllinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BranchImpllinks
        $AllProperties = ("self", "actions", "runs", "queue", "_class")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "actions"))) { #optional property not found
            $Actions = $null
        } else {
            $Actions = $JsonParameters.PSobject.Properties["actions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "runs"))) { #optional property not found
            $Runs = $null
        } else {
            $Runs = $JsonParameters.PSobject.Properties["runs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queue"))) { #optional property not found
            $Queue = $null
        } else {
            $Queue = $JsonParameters.PSobject.Properties["queue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "_class"))) { #optional property not found
            $Class = $null
        } else {
            $Class = $JsonParameters.PSobject.Properties["_class"].value
        }

        $PSO = [PSCustomObject]@{
            "self" = ${Self}
            "actions" = ${Actions}
            "runs" = ${Runs}
            "queue" = ${Queue}
            "_class" = ${Class}
        }

        return $PSO
    }

}

