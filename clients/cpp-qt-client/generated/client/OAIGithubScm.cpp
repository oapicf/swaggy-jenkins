/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGithubScm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGithubScm::OAIGithubScm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGithubScm::OAIGithubScm() {
    this->initializeModel();
}

OAIGithubScm::~OAIGithubScm() {}

void OAIGithubScm::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m__links_isSet = false;
    m__links_isValid = false;

    m_credential_id_isSet = false;
    m_credential_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGithubScm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGithubScm::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(m__class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_credential_id_isValid = ::OpenAPI::fromJsonValue(m_credential_id, json[QString("credentialId")]);
    m_credential_id_isSet = !json[QString("credentialId")].isNull() && m_credential_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGithubScm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGithubScm::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(m__class));
    }
    if (m__links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_credential_id_isSet) {
        obj.insert(QString("credentialId"), ::OpenAPI::toJsonValue(m_credential_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIGithubScm::getClass() const {
    return m__class;
}
void OAIGithubScm::setClass(const QString &_class) {
    m__class = _class;
    m__class_isSet = true;
}

bool OAIGithubScm::is__class_Set() const{
    return m__class_isSet;
}

bool OAIGithubScm::is__class_Valid() const{
    return m__class_isValid;
}

OAIGithubScmlinks OAIGithubScm::getLinks() const {
    return m__links;
}
void OAIGithubScm::setLinks(const OAIGithubScmlinks &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIGithubScm::is__links_Set() const{
    return m__links_isSet;
}

bool OAIGithubScm::is__links_Valid() const{
    return m__links_isValid;
}

QString OAIGithubScm::getCredentialId() const {
    return m_credential_id;
}
void OAIGithubScm::setCredentialId(const QString &credential_id) {
    m_credential_id = credential_id;
    m_credential_id_isSet = true;
}

bool OAIGithubScm::is_credential_id_Set() const{
    return m_credential_id_isSet;
}

bool OAIGithubScm::is_credential_id_Valid() const{
    return m_credential_id_isValid;
}

QString OAIGithubScm::getId() const {
    return m_id;
}
void OAIGithubScm::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGithubScm::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGithubScm::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGithubScm::getUri() const {
    return m_uri;
}
void OAIGithubScm::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGithubScm::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGithubScm::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGithubScm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credential_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGithubScm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
