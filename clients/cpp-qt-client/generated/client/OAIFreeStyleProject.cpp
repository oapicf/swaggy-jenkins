/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeStyleProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeStyleProject::OAIFreeStyleProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeStyleProject::OAIFreeStyleProject() {
    this->initializeModel();
}

OAIFreeStyleProject::~OAIFreeStyleProject() {}

void OAIFreeStyleProject::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_display_name_or_null_isSet = false;
    m_display_name_or_null_isValid = false;

    m_full_display_name_isSet = false;
    m_full_display_name_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_buildable_isSet = false;
    m_buildable_isValid = false;

    m_builds_isSet = false;
    m_builds_isValid = false;

    m_first_build_isSet = false;
    m_first_build_isValid = false;

    m_health_report_isSet = false;
    m_health_report_isValid = false;

    m_in_queue_isSet = false;
    m_in_queue_isValid = false;

    m_keep_dependencies_isSet = false;
    m_keep_dependencies_isValid = false;

    m_last_build_isSet = false;
    m_last_build_isValid = false;

    m_last_completed_build_isSet = false;
    m_last_completed_build_isValid = false;

    m_last_failed_build_isSet = false;
    m_last_failed_build_isValid = false;

    m_last_stable_build_isSet = false;
    m_last_stable_build_isValid = false;

    m_last_successful_build_isSet = false;
    m_last_successful_build_isValid = false;

    m_last_unstable_build_isSet = false;
    m_last_unstable_build_isValid = false;

    m_last_unsuccessful_build_isSet = false;
    m_last_unsuccessful_build_isValid = false;

    m_next_build_number_isSet = false;
    m_next_build_number_isValid = false;

    m_queue_item_isSet = false;
    m_queue_item_isValid = false;

    m_concurrent_build_isSet = false;
    m_concurrent_build_isValid = false;

    m_scm_isSet = false;
    m_scm_isValid = false;
}

void OAIFreeStyleProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeStyleProject::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(m__class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(m_color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_display_name_or_null_isValid = ::OpenAPI::fromJsonValue(m_display_name_or_null, json[QString("displayNameOrNull")]);
    m_display_name_or_null_isSet = !json[QString("displayNameOrNull")].isNull() && m_display_name_or_null_isValid;

    m_full_display_name_isValid = ::OpenAPI::fromJsonValue(m_full_display_name, json[QString("fullDisplayName")]);
    m_full_display_name_isSet = !json[QString("fullDisplayName")].isNull() && m_full_display_name_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_buildable_isValid = ::OpenAPI::fromJsonValue(m_buildable, json[QString("buildable")]);
    m_buildable_isSet = !json[QString("buildable")].isNull() && m_buildable_isValid;

    m_builds_isValid = ::OpenAPI::fromJsonValue(m_builds, json[QString("builds")]);
    m_builds_isSet = !json[QString("builds")].isNull() && m_builds_isValid;

    m_first_build_isValid = ::OpenAPI::fromJsonValue(m_first_build, json[QString("firstBuild")]);
    m_first_build_isSet = !json[QString("firstBuild")].isNull() && m_first_build_isValid;

    m_health_report_isValid = ::OpenAPI::fromJsonValue(m_health_report, json[QString("healthReport")]);
    m_health_report_isSet = !json[QString("healthReport")].isNull() && m_health_report_isValid;

    m_in_queue_isValid = ::OpenAPI::fromJsonValue(m_in_queue, json[QString("inQueue")]);
    m_in_queue_isSet = !json[QString("inQueue")].isNull() && m_in_queue_isValid;

    m_keep_dependencies_isValid = ::OpenAPI::fromJsonValue(m_keep_dependencies, json[QString("keepDependencies")]);
    m_keep_dependencies_isSet = !json[QString("keepDependencies")].isNull() && m_keep_dependencies_isValid;

    m_last_build_isValid = ::OpenAPI::fromJsonValue(m_last_build, json[QString("lastBuild")]);
    m_last_build_isSet = !json[QString("lastBuild")].isNull() && m_last_build_isValid;

    m_last_completed_build_isValid = ::OpenAPI::fromJsonValue(m_last_completed_build, json[QString("lastCompletedBuild")]);
    m_last_completed_build_isSet = !json[QString("lastCompletedBuild")].isNull() && m_last_completed_build_isValid;

    m_last_failed_build_isValid = ::OpenAPI::fromJsonValue(m_last_failed_build, json[QString("lastFailedBuild")]);
    m_last_failed_build_isSet = !json[QString("lastFailedBuild")].isNull() && m_last_failed_build_isValid;

    m_last_stable_build_isValid = ::OpenAPI::fromJsonValue(m_last_stable_build, json[QString("lastStableBuild")]);
    m_last_stable_build_isSet = !json[QString("lastStableBuild")].isNull() && m_last_stable_build_isValid;

    m_last_successful_build_isValid = ::OpenAPI::fromJsonValue(m_last_successful_build, json[QString("lastSuccessfulBuild")]);
    m_last_successful_build_isSet = !json[QString("lastSuccessfulBuild")].isNull() && m_last_successful_build_isValid;

    m_last_unstable_build_isValid = ::OpenAPI::fromJsonValue(m_last_unstable_build, json[QString("lastUnstableBuild")]);
    m_last_unstable_build_isSet = !json[QString("lastUnstableBuild")].isNull() && m_last_unstable_build_isValid;

    m_last_unsuccessful_build_isValid = ::OpenAPI::fromJsonValue(m_last_unsuccessful_build, json[QString("lastUnsuccessfulBuild")]);
    m_last_unsuccessful_build_isSet = !json[QString("lastUnsuccessfulBuild")].isNull() && m_last_unsuccessful_build_isValid;

    m_next_build_number_isValid = ::OpenAPI::fromJsonValue(m_next_build_number, json[QString("nextBuildNumber")]);
    m_next_build_number_isSet = !json[QString("nextBuildNumber")].isNull() && m_next_build_number_isValid;

    m_queue_item_isValid = ::OpenAPI::fromJsonValue(m_queue_item, json[QString("queueItem")]);
    m_queue_item_isSet = !json[QString("queueItem")].isNull() && m_queue_item_isValid;

    m_concurrent_build_isValid = ::OpenAPI::fromJsonValue(m_concurrent_build, json[QString("concurrentBuild")]);
    m_concurrent_build_isSet = !json[QString("concurrentBuild")].isNull() && m_concurrent_build_isValid;

    m_scm_isValid = ::OpenAPI::fromJsonValue(m_scm, json[QString("scm")]);
    m_scm_isSet = !json[QString("scm")].isNull() && m_scm_isValid;
}

QString OAIFreeStyleProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeStyleProject::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(m__class));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_color_isSet) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(m_color));
    }
    if (m_actions.size() > 0) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_display_name_or_null_isSet) {
        obj.insert(QString("displayNameOrNull"), ::OpenAPI::toJsonValue(m_display_name_or_null));
    }
    if (m_full_display_name_isSet) {
        obj.insert(QString("fullDisplayName"), ::OpenAPI::toJsonValue(m_full_display_name));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_buildable_isSet) {
        obj.insert(QString("buildable"), ::OpenAPI::toJsonValue(m_buildable));
    }
    if (m_builds.size() > 0) {
        obj.insert(QString("builds"), ::OpenAPI::toJsonValue(m_builds));
    }
    if (m_first_build.isSet()) {
        obj.insert(QString("firstBuild"), ::OpenAPI::toJsonValue(m_first_build));
    }
    if (m_health_report.size() > 0) {
        obj.insert(QString("healthReport"), ::OpenAPI::toJsonValue(m_health_report));
    }
    if (m_in_queue_isSet) {
        obj.insert(QString("inQueue"), ::OpenAPI::toJsonValue(m_in_queue));
    }
    if (m_keep_dependencies_isSet) {
        obj.insert(QString("keepDependencies"), ::OpenAPI::toJsonValue(m_keep_dependencies));
    }
    if (m_last_build.isSet()) {
        obj.insert(QString("lastBuild"), ::OpenAPI::toJsonValue(m_last_build));
    }
    if (m_last_completed_build.isSet()) {
        obj.insert(QString("lastCompletedBuild"), ::OpenAPI::toJsonValue(m_last_completed_build));
    }
    if (m_last_failed_build_isSet) {
        obj.insert(QString("lastFailedBuild"), ::OpenAPI::toJsonValue(m_last_failed_build));
    }
    if (m_last_stable_build.isSet()) {
        obj.insert(QString("lastStableBuild"), ::OpenAPI::toJsonValue(m_last_stable_build));
    }
    if (m_last_successful_build.isSet()) {
        obj.insert(QString("lastSuccessfulBuild"), ::OpenAPI::toJsonValue(m_last_successful_build));
    }
    if (m_last_unstable_build_isSet) {
        obj.insert(QString("lastUnstableBuild"), ::OpenAPI::toJsonValue(m_last_unstable_build));
    }
    if (m_last_unsuccessful_build_isSet) {
        obj.insert(QString("lastUnsuccessfulBuild"), ::OpenAPI::toJsonValue(m_last_unsuccessful_build));
    }
    if (m_next_build_number_isSet) {
        obj.insert(QString("nextBuildNumber"), ::OpenAPI::toJsonValue(m_next_build_number));
    }
    if (m_queue_item_isSet) {
        obj.insert(QString("queueItem"), ::OpenAPI::toJsonValue(m_queue_item));
    }
    if (m_concurrent_build_isSet) {
        obj.insert(QString("concurrentBuild"), ::OpenAPI::toJsonValue(m_concurrent_build));
    }
    if (m_scm.isSet()) {
        obj.insert(QString("scm"), ::OpenAPI::toJsonValue(m_scm));
    }
    return obj;
}

QString OAIFreeStyleProject::getClass() const {
    return m__class;
}
void OAIFreeStyleProject::setClass(const QString &_class) {
    m__class = _class;
    m__class_isSet = true;
}

bool OAIFreeStyleProject::is__class_Set() const{
    return m__class_isSet;
}

bool OAIFreeStyleProject::is__class_Valid() const{
    return m__class_isValid;
}

QString OAIFreeStyleProject::getName() const {
    return m_name;
}
void OAIFreeStyleProject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFreeStyleProject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFreeStyleProject::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIFreeStyleProject::getUrl() const {
    return m_url;
}
void OAIFreeStyleProject::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFreeStyleProject::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFreeStyleProject::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIFreeStyleProject::getColor() const {
    return m_color;
}
void OAIFreeStyleProject::setColor(const QString &color) {
    m_color = color;
    m_color_isSet = true;
}

bool OAIFreeStyleProject::is_color_Set() const{
    return m_color_isSet;
}

bool OAIFreeStyleProject::is_color_Valid() const{
    return m_color_isValid;
}

QList<OAIFreeStyleProjectactions> OAIFreeStyleProject::getActions() const {
    return m_actions;
}
void OAIFreeStyleProject::setActions(const QList<OAIFreeStyleProjectactions> &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIFreeStyleProject::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIFreeStyleProject::is_actions_Valid() const{
    return m_actions_isValid;
}

QString OAIFreeStyleProject::getDescription() const {
    return m_description;
}
void OAIFreeStyleProject::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFreeStyleProject::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFreeStyleProject::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIFreeStyleProject::getDisplayName() const {
    return m_display_name;
}
void OAIFreeStyleProject::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIFreeStyleProject::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIFreeStyleProject::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIFreeStyleProject::getDisplayNameOrNull() const {
    return m_display_name_or_null;
}
void OAIFreeStyleProject::setDisplayNameOrNull(const QString &display_name_or_null) {
    m_display_name_or_null = display_name_or_null;
    m_display_name_or_null_isSet = true;
}

bool OAIFreeStyleProject::is_display_name_or_null_Set() const{
    return m_display_name_or_null_isSet;
}

bool OAIFreeStyleProject::is_display_name_or_null_Valid() const{
    return m_display_name_or_null_isValid;
}

QString OAIFreeStyleProject::getFullDisplayName() const {
    return m_full_display_name;
}
void OAIFreeStyleProject::setFullDisplayName(const QString &full_display_name) {
    m_full_display_name = full_display_name;
    m_full_display_name_isSet = true;
}

bool OAIFreeStyleProject::is_full_display_name_Set() const{
    return m_full_display_name_isSet;
}

bool OAIFreeStyleProject::is_full_display_name_Valid() const{
    return m_full_display_name_isValid;
}

QString OAIFreeStyleProject::getFullName() const {
    return m_full_name;
}
void OAIFreeStyleProject::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIFreeStyleProject::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIFreeStyleProject::is_full_name_Valid() const{
    return m_full_name_isValid;
}

bool OAIFreeStyleProject::isBuildable() const {
    return m_buildable;
}
void OAIFreeStyleProject::setBuildable(const bool &buildable) {
    m_buildable = buildable;
    m_buildable_isSet = true;
}

bool OAIFreeStyleProject::is_buildable_Set() const{
    return m_buildable_isSet;
}

bool OAIFreeStyleProject::is_buildable_Valid() const{
    return m_buildable_isValid;
}

QList<OAIFreeStyleBuild> OAIFreeStyleProject::getBuilds() const {
    return m_builds;
}
void OAIFreeStyleProject::setBuilds(const QList<OAIFreeStyleBuild> &builds) {
    m_builds = builds;
    m_builds_isSet = true;
}

bool OAIFreeStyleProject::is_builds_Set() const{
    return m_builds_isSet;
}

bool OAIFreeStyleProject::is_builds_Valid() const{
    return m_builds_isValid;
}

OAIFreeStyleBuild OAIFreeStyleProject::getFirstBuild() const {
    return m_first_build;
}
void OAIFreeStyleProject::setFirstBuild(const OAIFreeStyleBuild &first_build) {
    m_first_build = first_build;
    m_first_build_isSet = true;
}

bool OAIFreeStyleProject::is_first_build_Set() const{
    return m_first_build_isSet;
}

bool OAIFreeStyleProject::is_first_build_Valid() const{
    return m_first_build_isValid;
}

QList<OAIFreeStyleProjecthealthReport> OAIFreeStyleProject::getHealthReport() const {
    return m_health_report;
}
void OAIFreeStyleProject::setHealthReport(const QList<OAIFreeStyleProjecthealthReport> &health_report) {
    m_health_report = health_report;
    m_health_report_isSet = true;
}

bool OAIFreeStyleProject::is_health_report_Set() const{
    return m_health_report_isSet;
}

bool OAIFreeStyleProject::is_health_report_Valid() const{
    return m_health_report_isValid;
}

bool OAIFreeStyleProject::isInQueue() const {
    return m_in_queue;
}
void OAIFreeStyleProject::setInQueue(const bool &in_queue) {
    m_in_queue = in_queue;
    m_in_queue_isSet = true;
}

bool OAIFreeStyleProject::is_in_queue_Set() const{
    return m_in_queue_isSet;
}

bool OAIFreeStyleProject::is_in_queue_Valid() const{
    return m_in_queue_isValid;
}

bool OAIFreeStyleProject::isKeepDependencies() const {
    return m_keep_dependencies;
}
void OAIFreeStyleProject::setKeepDependencies(const bool &keep_dependencies) {
    m_keep_dependencies = keep_dependencies;
    m_keep_dependencies_isSet = true;
}

bool OAIFreeStyleProject::is_keep_dependencies_Set() const{
    return m_keep_dependencies_isSet;
}

bool OAIFreeStyleProject::is_keep_dependencies_Valid() const{
    return m_keep_dependencies_isValid;
}

OAIFreeStyleBuild OAIFreeStyleProject::getLastBuild() const {
    return m_last_build;
}
void OAIFreeStyleProject::setLastBuild(const OAIFreeStyleBuild &last_build) {
    m_last_build = last_build;
    m_last_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_build_Set() const{
    return m_last_build_isSet;
}

bool OAIFreeStyleProject::is_last_build_Valid() const{
    return m_last_build_isValid;
}

OAIFreeStyleBuild OAIFreeStyleProject::getLastCompletedBuild() const {
    return m_last_completed_build;
}
void OAIFreeStyleProject::setLastCompletedBuild(const OAIFreeStyleBuild &last_completed_build) {
    m_last_completed_build = last_completed_build;
    m_last_completed_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_completed_build_Set() const{
    return m_last_completed_build_isSet;
}

bool OAIFreeStyleProject::is_last_completed_build_Valid() const{
    return m_last_completed_build_isValid;
}

QString OAIFreeStyleProject::getLastFailedBuild() const {
    return m_last_failed_build;
}
void OAIFreeStyleProject::setLastFailedBuild(const QString &last_failed_build) {
    m_last_failed_build = last_failed_build;
    m_last_failed_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_failed_build_Set() const{
    return m_last_failed_build_isSet;
}

bool OAIFreeStyleProject::is_last_failed_build_Valid() const{
    return m_last_failed_build_isValid;
}

OAIFreeStyleBuild OAIFreeStyleProject::getLastStableBuild() const {
    return m_last_stable_build;
}
void OAIFreeStyleProject::setLastStableBuild(const OAIFreeStyleBuild &last_stable_build) {
    m_last_stable_build = last_stable_build;
    m_last_stable_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_stable_build_Set() const{
    return m_last_stable_build_isSet;
}

bool OAIFreeStyleProject::is_last_stable_build_Valid() const{
    return m_last_stable_build_isValid;
}

OAIFreeStyleBuild OAIFreeStyleProject::getLastSuccessfulBuild() const {
    return m_last_successful_build;
}
void OAIFreeStyleProject::setLastSuccessfulBuild(const OAIFreeStyleBuild &last_successful_build) {
    m_last_successful_build = last_successful_build;
    m_last_successful_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_successful_build_Set() const{
    return m_last_successful_build_isSet;
}

bool OAIFreeStyleProject::is_last_successful_build_Valid() const{
    return m_last_successful_build_isValid;
}

QString OAIFreeStyleProject::getLastUnstableBuild() const {
    return m_last_unstable_build;
}
void OAIFreeStyleProject::setLastUnstableBuild(const QString &last_unstable_build) {
    m_last_unstable_build = last_unstable_build;
    m_last_unstable_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_unstable_build_Set() const{
    return m_last_unstable_build_isSet;
}

bool OAIFreeStyleProject::is_last_unstable_build_Valid() const{
    return m_last_unstable_build_isValid;
}

QString OAIFreeStyleProject::getLastUnsuccessfulBuild() const {
    return m_last_unsuccessful_build;
}
void OAIFreeStyleProject::setLastUnsuccessfulBuild(const QString &last_unsuccessful_build) {
    m_last_unsuccessful_build = last_unsuccessful_build;
    m_last_unsuccessful_build_isSet = true;
}

bool OAIFreeStyleProject::is_last_unsuccessful_build_Set() const{
    return m_last_unsuccessful_build_isSet;
}

bool OAIFreeStyleProject::is_last_unsuccessful_build_Valid() const{
    return m_last_unsuccessful_build_isValid;
}

qint32 OAIFreeStyleProject::getNextBuildNumber() const {
    return m_next_build_number;
}
void OAIFreeStyleProject::setNextBuildNumber(const qint32 &next_build_number) {
    m_next_build_number = next_build_number;
    m_next_build_number_isSet = true;
}

bool OAIFreeStyleProject::is_next_build_number_Set() const{
    return m_next_build_number_isSet;
}

bool OAIFreeStyleProject::is_next_build_number_Valid() const{
    return m_next_build_number_isValid;
}

QString OAIFreeStyleProject::getQueueItem() const {
    return m_queue_item;
}
void OAIFreeStyleProject::setQueueItem(const QString &queue_item) {
    m_queue_item = queue_item;
    m_queue_item_isSet = true;
}

bool OAIFreeStyleProject::is_queue_item_Set() const{
    return m_queue_item_isSet;
}

bool OAIFreeStyleProject::is_queue_item_Valid() const{
    return m_queue_item_isValid;
}

bool OAIFreeStyleProject::isConcurrentBuild() const {
    return m_concurrent_build;
}
void OAIFreeStyleProject::setConcurrentBuild(const bool &concurrent_build) {
    m_concurrent_build = concurrent_build;
    m_concurrent_build_isSet = true;
}

bool OAIFreeStyleProject::is_concurrent_build_Set() const{
    return m_concurrent_build_isSet;
}

bool OAIFreeStyleProject::is_concurrent_build_Valid() const{
    return m_concurrent_build_isValid;
}

OAINullSCM OAIFreeStyleProject::getScm() const {
    return m_scm;
}
void OAIFreeStyleProject::setScm(const OAINullSCM &scm) {
    m_scm = scm;
    m_scm_isSet = true;
}

bool OAIFreeStyleProject::is_scm_Set() const{
    return m_scm_isSet;
}

bool OAIFreeStyleProject::is_scm_Valid() const{
    return m_scm_isValid;
}

bool OAIFreeStyleProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_or_null_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_buildable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_builds.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_report.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_queue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keep_dependencies_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_completed_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_failed_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_stable_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_build.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_unstable_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_unsuccessful_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_build_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_item_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_concurrent_build_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scm.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeStyleProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
