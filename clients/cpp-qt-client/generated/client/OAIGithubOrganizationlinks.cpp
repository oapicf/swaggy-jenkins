/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGithubOrganizationlinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGithubOrganizationlinks::OAIGithubOrganizationlinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGithubOrganizationlinks::OAIGithubOrganizationlinks() {
    this->initializeModel();
}

OAIGithubOrganizationlinks::~OAIGithubOrganizationlinks() {}

void OAIGithubOrganizationlinks::initializeModel() {

    m_repositories_isSet = false;
    m_repositories_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m__class_isSet = false;
    m__class_isValid = false;
}

void OAIGithubOrganizationlinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGithubOrganizationlinks::fromJsonObject(QJsonObject json) {

    m_repositories_isValid = ::OpenAPI::fromJsonValue(m_repositories, json[QString("repositories")]);
    m_repositories_isSet = !json[QString("repositories")].isNull() && m_repositories_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m__class_isValid = ::OpenAPI::fromJsonValue(m__class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;
}

QString OAIGithubOrganizationlinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGithubOrganizationlinks::asJsonObject() const {
    QJsonObject obj;
    if (m_repositories.isSet()) {
        obj.insert(QString("repositories"), ::OpenAPI::toJsonValue(m_repositories));
    }
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(m__class));
    }
    return obj;
}

OAILink OAIGithubOrganizationlinks::getRepositories() const {
    return m_repositories;
}
void OAIGithubOrganizationlinks::setRepositories(const OAILink &repositories) {
    m_repositories = repositories;
    m_repositories_isSet = true;
}

bool OAIGithubOrganizationlinks::is_repositories_Set() const{
    return m_repositories_isSet;
}

bool OAIGithubOrganizationlinks::is_repositories_Valid() const{
    return m_repositories_isValid;
}

OAILink OAIGithubOrganizationlinks::getSelf() const {
    return m_self;
}
void OAIGithubOrganizationlinks::setSelf(const OAILink &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIGithubOrganizationlinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIGithubOrganizationlinks::is_self_Valid() const{
    return m_self_isValid;
}

QString OAIGithubOrganizationlinks::getClass() const {
    return m__class;
}
void OAIGithubOrganizationlinks::setClass(const QString &_class) {
    m__class = _class;
    m__class_isSet = true;
}

bool OAIGithubOrganizationlinks::is__class_Set() const{
    return m__class_isSet;
}

bool OAIGithubOrganizationlinks::is__class_Valid() const{
    return m__class_isValid;
}

bool OAIGithubOrganizationlinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_repositories.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGithubOrganizationlinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
