/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * SwapSpaceMonitorMemoryUsage2
 */
@JsonPropertyOrder({
  SwapSpaceMonitorMemoryUsage2.JSON_PROPERTY_PROPERTY_CLASS,
  SwapSpaceMonitorMemoryUsage2.JSON_PROPERTY_AVAILABLE_PHYSICAL_MEMORY,
  SwapSpaceMonitorMemoryUsage2.JSON_PROPERTY_AVAILABLE_SWAP_SPACE,
  SwapSpaceMonitorMemoryUsage2.JSON_PROPERTY_TOTAL_PHYSICAL_MEMORY,
  SwapSpaceMonitorMemoryUsage2.JSON_PROPERTY_TOTAL_SWAP_SPACE
})
@JsonTypeName("SwapSpaceMonitorMemoryUsage2")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-03-15T14:12:15.717235233Z[Etc/UTC]", comments = "Generator version: 7.4.0")
@Introspected
public class SwapSpaceMonitorMemoryUsage2 {
    public static final String JSON_PROPERTY_PROPERTY_CLASS = "_class";
    private String propertyClass;

    public static final String JSON_PROPERTY_AVAILABLE_PHYSICAL_MEMORY = "availablePhysicalMemory";
    private Integer availablePhysicalMemory;

    public static final String JSON_PROPERTY_AVAILABLE_SWAP_SPACE = "availableSwapSpace";
    private Integer availableSwapSpace;

    public static final String JSON_PROPERTY_TOTAL_PHYSICAL_MEMORY = "totalPhysicalMemory";
    private Integer totalPhysicalMemory;

    public static final String JSON_PROPERTY_TOTAL_SWAP_SPACE = "totalSwapSpace";
    private Integer totalSwapSpace;

    public SwapSpaceMonitorMemoryUsage2() {
    }

    public SwapSpaceMonitorMemoryUsage2 propertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
        return this;
    }

    /**
     * Get propertyClass
     * @return propertyClass
     **/
    @Nullable
    @Schema(name = "_class", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPropertyClass() {
        return propertyClass;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPropertyClass(String propertyClass) {
        this.propertyClass = propertyClass;
    }

    public SwapSpaceMonitorMemoryUsage2 availablePhysicalMemory(Integer availablePhysicalMemory) {
        this.availablePhysicalMemory = availablePhysicalMemory;
        return this;
    }

    /**
     * Get availablePhysicalMemory
     * @return availablePhysicalMemory
     **/
    @Nullable
    @Schema(name = "availablePhysicalMemory", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AVAILABLE_PHYSICAL_MEMORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getAvailablePhysicalMemory() {
        return availablePhysicalMemory;
    }

    @JsonProperty(JSON_PROPERTY_AVAILABLE_PHYSICAL_MEMORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAvailablePhysicalMemory(Integer availablePhysicalMemory) {
        this.availablePhysicalMemory = availablePhysicalMemory;
    }

    public SwapSpaceMonitorMemoryUsage2 availableSwapSpace(Integer availableSwapSpace) {
        this.availableSwapSpace = availableSwapSpace;
        return this;
    }

    /**
     * Get availableSwapSpace
     * @return availableSwapSpace
     **/
    @Nullable
    @Schema(name = "availableSwapSpace", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AVAILABLE_SWAP_SPACE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getAvailableSwapSpace() {
        return availableSwapSpace;
    }

    @JsonProperty(JSON_PROPERTY_AVAILABLE_SWAP_SPACE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAvailableSwapSpace(Integer availableSwapSpace) {
        this.availableSwapSpace = availableSwapSpace;
    }

    public SwapSpaceMonitorMemoryUsage2 totalPhysicalMemory(Integer totalPhysicalMemory) {
        this.totalPhysicalMemory = totalPhysicalMemory;
        return this;
    }

    /**
     * Get totalPhysicalMemory
     * @return totalPhysicalMemory
     **/
    @Nullable
    @Schema(name = "totalPhysicalMemory", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOTAL_PHYSICAL_MEMORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getTotalPhysicalMemory() {
        return totalPhysicalMemory;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_PHYSICAL_MEMORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalPhysicalMemory(Integer totalPhysicalMemory) {
        this.totalPhysicalMemory = totalPhysicalMemory;
    }

    public SwapSpaceMonitorMemoryUsage2 totalSwapSpace(Integer totalSwapSpace) {
        this.totalSwapSpace = totalSwapSpace;
        return this;
    }

    /**
     * Get totalSwapSpace
     * @return totalSwapSpace
     **/
    @Nullable
    @Schema(name = "totalSwapSpace", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TOTAL_SWAP_SPACE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getTotalSwapSpace() {
        return totalSwapSpace;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_SWAP_SPACE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalSwapSpace(Integer totalSwapSpace) {
        this.totalSwapSpace = totalSwapSpace;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SwapSpaceMonitorMemoryUsage2 swapSpaceMonitorMemoryUsage2 = (SwapSpaceMonitorMemoryUsage2) o;
        return Objects.equals(this.propertyClass, swapSpaceMonitorMemoryUsage2.propertyClass) &&
            Objects.equals(this.availablePhysicalMemory, swapSpaceMonitorMemoryUsage2.availablePhysicalMemory) &&
            Objects.equals(this.availableSwapSpace, swapSpaceMonitorMemoryUsage2.availableSwapSpace) &&
            Objects.equals(this.totalPhysicalMemory, swapSpaceMonitorMemoryUsage2.totalPhysicalMemory) &&
            Objects.equals(this.totalSwapSpace, swapSpaceMonitorMemoryUsage2.totalSwapSpace);
    }

    @Override
    public int hashCode() {
        return Objects.hash(propertyClass, availablePhysicalMemory, availableSwapSpace, totalPhysicalMemory, totalSwapSpace);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SwapSpaceMonitorMemoryUsage2 {\n");
        sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
        sb.append("    availablePhysicalMemory: ").append(toIndentedString(availablePhysicalMemory)).append("\n");
        sb.append("    availableSwapSpace: ").append(toIndentedString(availableSwapSpace)).append("\n");
        sb.append("    totalPhysicalMemory: ").append(toIndentedString(totalPhysicalMemory)).append("\n");
        sb.append("    totalSwapSpace: ").append(toIndentedString(totalSwapSpace)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

