/* tslint:disable */
/* eslint-disable */
/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GithubRepositorypermissions } from './GithubRepositorypermissions';
import {
    GithubRepositorypermissionsFromJSON,
    GithubRepositorypermissionsFromJSONTyped,
    GithubRepositorypermissionsToJSON,
    GithubRepositorypermissionsToJSONTyped,
} from './GithubRepositorypermissions';
import type { GithubRepositorylinks } from './GithubRepositorylinks';
import {
    GithubRepositorylinksFromJSON,
    GithubRepositorylinksFromJSONTyped,
    GithubRepositorylinksToJSON,
    GithubRepositorylinksToJSONTyped,
} from './GithubRepositorylinks';

/**
 * 
 * @export
 * @interface GithubRepository
 */
export interface GithubRepository {
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    _class?: string;
    /**
     * 
     * @type {GithubRepositorylinks}
     * @memberof GithubRepository
     */
    links?: GithubRepositorylinks;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    defaultBranch?: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    name?: string;
    /**
     * 
     * @type {GithubRepositorypermissions}
     * @memberof GithubRepository
     */
    permissions?: GithubRepositorypermissions;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    _private?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    fullName?: string;
}

/**
 * Check if a given object implements the GithubRepository interface.
 */
export function instanceOfGithubRepository(value: object): value is GithubRepository {
    return true;
}

export function GithubRepositoryFromJSON(json: any): GithubRepository {
    return GithubRepositoryFromJSONTyped(json, false);
}

export function GithubRepositoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubRepository {
    if (json == null) {
        return json;
    }
    return {
        
        '_class': json['_class'] == null ? undefined : json['_class'],
        'links': json['_links'] == null ? undefined : GithubRepositorylinksFromJSON(json['_links']),
        'defaultBranch': json['defaultBranch'] == null ? undefined : json['defaultBranch'],
        'description': json['description'] == null ? undefined : json['description'],
        'name': json['name'] == null ? undefined : json['name'],
        'permissions': json['permissions'] == null ? undefined : GithubRepositorypermissionsFromJSON(json['permissions']),
        '_private': json['private'] == null ? undefined : json['private'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
    };
}

export function GithubRepositoryToJSON(json: any): GithubRepository {
    return GithubRepositoryToJSONTyped(json, false);
}

export function GithubRepositoryToJSONTyped(value?: GithubRepository | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_class': value['_class'],
        '_links': GithubRepositorylinksToJSON(value['links']),
        'defaultBranch': value['defaultBranch'],
        'description': value['description'],
        'name': value['name'],
        'permissions': GithubRepositorypermissionsToJSON(value['permissions']),
        'private': value['_private'],
        'fullName': value['fullName'],
    };
}

