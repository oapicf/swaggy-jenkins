/* tslint:disable */
/* eslint-disable */
/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AllView } from './AllView';
import {
    AllViewFromJSON,
    AllViewFromJSONTyped,
    AllViewToJSON,
} from './AllView';
import type { FreeStyleProject } from './FreeStyleProject';
import {
    FreeStyleProjectFromJSON,
    FreeStyleProjectFromJSONTyped,
    FreeStyleProjectToJSON,
} from './FreeStyleProject';
import type { HudsonassignedLabels } from './HudsonassignedLabels';
import {
    HudsonassignedLabelsFromJSON,
    HudsonassignedLabelsFromJSONTyped,
    HudsonassignedLabelsToJSON,
} from './HudsonassignedLabels';
import type { UnlabeledLoadStatistics } from './UnlabeledLoadStatistics';
import {
    UnlabeledLoadStatisticsFromJSON,
    UnlabeledLoadStatisticsFromJSONTyped,
    UnlabeledLoadStatisticsToJSON,
} from './UnlabeledLoadStatistics';

/**
 * 
 * @export
 * @interface Hudson
 */
export interface Hudson {
    /**
     * 
     * @type {string}
     * @memberof Hudson
     */
    _class?: string;
    /**
     * 
     * @type {Array<HudsonassignedLabels>}
     * @memberof Hudson
     */
    assignedLabels?: Array<HudsonassignedLabels>;
    /**
     * 
     * @type {string}
     * @memberof Hudson
     */
    mode?: string;
    /**
     * 
     * @type {string}
     * @memberof Hudson
     */
    nodeDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof Hudson
     */
    nodeName?: string;
    /**
     * 
     * @type {number}
     * @memberof Hudson
     */
    numExecutors?: number;
    /**
     * 
     * @type {string}
     * @memberof Hudson
     */
    description?: string;
    /**
     * 
     * @type {Array<FreeStyleProject>}
     * @memberof Hudson
     */
    jobs?: Array<FreeStyleProject>;
    /**
     * 
     * @type {AllView}
     * @memberof Hudson
     */
    primaryView?: AllView;
    /**
     * 
     * @type {boolean}
     * @memberof Hudson
     */
    quietingDown?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Hudson
     */
    slaveAgentPort?: number;
    /**
     * 
     * @type {UnlabeledLoadStatistics}
     * @memberof Hudson
     */
    unlabeledLoad?: UnlabeledLoadStatistics;
    /**
     * 
     * @type {boolean}
     * @memberof Hudson
     */
    useCrumbs?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Hudson
     */
    useSecurity?: boolean;
    /**
     * 
     * @type {Array<AllView>}
     * @memberof Hudson
     */
    views?: Array<AllView>;
}

/**
 * Check if a given object implements the Hudson interface.
 */
export function instanceOfHudson(value: object): boolean {
    return true;
}

export function HudsonFromJSON(json: any): Hudson {
    return HudsonFromJSONTyped(json, false);
}

export function HudsonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hudson {
    if (json == null) {
        return json;
    }
    return {
        
        '_class': json['_class'] == null ? undefined : json['_class'],
        'assignedLabels': json['assignedLabels'] == null ? undefined : ((json['assignedLabels'] as Array<any>).map(HudsonassignedLabelsFromJSON)),
        'mode': json['mode'] == null ? undefined : json['mode'],
        'nodeDescription': json['nodeDescription'] == null ? undefined : json['nodeDescription'],
        'nodeName': json['nodeName'] == null ? undefined : json['nodeName'],
        'numExecutors': json['numExecutors'] == null ? undefined : json['numExecutors'],
        'description': json['description'] == null ? undefined : json['description'],
        'jobs': json['jobs'] == null ? undefined : ((json['jobs'] as Array<any>).map(FreeStyleProjectFromJSON)),
        'primaryView': json['primaryView'] == null ? undefined : AllViewFromJSON(json['primaryView']),
        'quietingDown': json['quietingDown'] == null ? undefined : json['quietingDown'],
        'slaveAgentPort': json['slaveAgentPort'] == null ? undefined : json['slaveAgentPort'],
        'unlabeledLoad': json['unlabeledLoad'] == null ? undefined : UnlabeledLoadStatisticsFromJSON(json['unlabeledLoad']),
        'useCrumbs': json['useCrumbs'] == null ? undefined : json['useCrumbs'],
        'useSecurity': json['useSecurity'] == null ? undefined : json['useSecurity'],
        'views': json['views'] == null ? undefined : ((json['views'] as Array<any>).map(AllViewFromJSON)),
    };
}

export function HudsonToJSON(value?: Hudson | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_class': value['_class'],
        'assignedLabels': value['assignedLabels'] == null ? undefined : ((value['assignedLabels'] as Array<any>).map(HudsonassignedLabelsToJSON)),
        'mode': value['mode'],
        'nodeDescription': value['nodeDescription'],
        'nodeName': value['nodeName'],
        'numExecutors': value['numExecutors'],
        'description': value['description'],
        'jobs': value['jobs'] == null ? undefined : ((value['jobs'] as Array<any>).map(FreeStyleProjectToJSON)),
        'primaryView': AllViewToJSON(value['primaryView']),
        'quietingDown': value['quietingDown'],
        'slaveAgentPort': value['slaveAgentPort'],
        'unlabeledLoad': UnlabeledLoadStatisticsToJSON(value['unlabeledLoad']),
        'useCrumbs': value['useCrumbs'],
        'useSecurity': value['useSecurity'],
        'views': value['views'] == null ? undefined : ((value['views'] as Array<any>).map(AllViewToJSON)),
    };
}

