/* tslint:disable */
/* eslint-disable */
/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HudsonMasterComputerexecutors } from './HudsonMasterComputerexecutors';
import {
    HudsonMasterComputerexecutorsFromJSON,
    HudsonMasterComputerexecutorsFromJSONTyped,
    HudsonMasterComputerexecutorsToJSON,
    HudsonMasterComputerexecutorsToJSONTyped,
} from './HudsonMasterComputerexecutors';
import type { HudsonMasterComputermonitorData } from './HudsonMasterComputermonitorData';
import {
    HudsonMasterComputermonitorDataFromJSON,
    HudsonMasterComputermonitorDataFromJSONTyped,
    HudsonMasterComputermonitorDataToJSON,
    HudsonMasterComputermonitorDataToJSONTyped,
} from './HudsonMasterComputermonitorData';
import type { Label1 } from './Label1';
import {
    Label1FromJSON,
    Label1FromJSONTyped,
    Label1ToJSON,
    Label1ToJSONTyped,
} from './Label1';

/**
 * 
 * @export
 * @interface HudsonMasterComputer
 */
export interface HudsonMasterComputer {
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    _class?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    displayName?: string;
    /**
     * 
     * @type {Array<HudsonMasterComputerexecutors>}
     * @memberof HudsonMasterComputer
     */
    executors?: Array<HudsonMasterComputerexecutors>;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    icon?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    iconClassName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    idle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    jnlpAgent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    launchSupported?: boolean;
    /**
     * 
     * @type {Label1}
     * @memberof HudsonMasterComputer
     */
    loadStatistics?: Label1;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    manualLaunchAllowed?: boolean;
    /**
     * 
     * @type {HudsonMasterComputermonitorData}
     * @memberof HudsonMasterComputer
     */
    monitorData?: HudsonMasterComputermonitorData;
    /**
     * 
     * @type {number}
     * @memberof HudsonMasterComputer
     */
    numExecutors?: number;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    offline?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    offlineCause?: string;
    /**
     * 
     * @type {string}
     * @memberof HudsonMasterComputer
     */
    offlineCauseReason?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HudsonMasterComputer
     */
    temporarilyOffline?: boolean;
}

/**
 * Check if a given object implements the HudsonMasterComputer interface.
 */
export function instanceOfHudsonMasterComputer(value: object): value is HudsonMasterComputer {
    return true;
}

export function HudsonMasterComputerFromJSON(json: any): HudsonMasterComputer {
    return HudsonMasterComputerFromJSONTyped(json, false);
}

export function HudsonMasterComputerFromJSONTyped(json: any, ignoreDiscriminator: boolean): HudsonMasterComputer {
    if (json == null) {
        return json;
    }
    return {
        
        '_class': json['_class'] == null ? undefined : json['_class'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'executors': json['executors'] == null ? undefined : ((json['executors'] as Array<any>).map(HudsonMasterComputerexecutorsFromJSON)),
        'icon': json['icon'] == null ? undefined : json['icon'],
        'iconClassName': json['iconClassName'] == null ? undefined : json['iconClassName'],
        'idle': json['idle'] == null ? undefined : json['idle'],
        'jnlpAgent': json['jnlpAgent'] == null ? undefined : json['jnlpAgent'],
        'launchSupported': json['launchSupported'] == null ? undefined : json['launchSupported'],
        'loadStatistics': json['loadStatistics'] == null ? undefined : Label1FromJSON(json['loadStatistics']),
        'manualLaunchAllowed': json['manualLaunchAllowed'] == null ? undefined : json['manualLaunchAllowed'],
        'monitorData': json['monitorData'] == null ? undefined : HudsonMasterComputermonitorDataFromJSON(json['monitorData']),
        'numExecutors': json['numExecutors'] == null ? undefined : json['numExecutors'],
        'offline': json['offline'] == null ? undefined : json['offline'],
        'offlineCause': json['offlineCause'] == null ? undefined : json['offlineCause'],
        'offlineCauseReason': json['offlineCauseReason'] == null ? undefined : json['offlineCauseReason'],
        'temporarilyOffline': json['temporarilyOffline'] == null ? undefined : json['temporarilyOffline'],
    };
}

export function HudsonMasterComputerToJSON(json: any): HudsonMasterComputer {
    return HudsonMasterComputerToJSONTyped(json, false);
}

export function HudsonMasterComputerToJSONTyped(value?: HudsonMasterComputer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_class': value['_class'],
        'displayName': value['displayName'],
        'executors': value['executors'] == null ? undefined : ((value['executors'] as Array<any>).map(HudsonMasterComputerexecutorsToJSON)),
        'icon': value['icon'],
        'iconClassName': value['iconClassName'],
        'idle': value['idle'],
        'jnlpAgent': value['jnlpAgent'],
        'launchSupported': value['launchSupported'],
        'loadStatistics': Label1ToJSON(value['loadStatistics']),
        'manualLaunchAllowed': value['manualLaunchAllowed'],
        'monitorData': HudsonMasterComputermonitorDataToJSON(value['monitorData']),
        'numExecutors': value['numExecutors'],
        'offline': value['offline'],
        'offlineCause': value['offlineCause'],
        'offlineCauseReason': value['offlineCauseReason'],
        'temporarilyOffline': value['temporarilyOffline'],
    };
}

