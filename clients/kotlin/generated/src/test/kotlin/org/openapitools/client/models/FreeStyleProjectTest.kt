/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.FreeStyleProject
import org.openapitools.client.models.FreeStyleBuild
import org.openapitools.client.models.FreeStyleProjectactions
import org.openapitools.client.models.FreeStyleProjecthealthReport
import org.openapitools.client.models.NullSCM

class FreeStyleProjectTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FreeStyleProject
        //val modelInstance = FreeStyleProject()

        // to test the property `propertyClass`
        should("test propertyClass") {
            // uncomment below to test the property
            //modelInstance.propertyClass shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `url`
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `color`
        should("test color") {
            // uncomment below to test the property
            //modelInstance.color shouldBe ("TODO")
        }

        // to test the property `actions`
        should("test actions") {
            // uncomment below to test the property
            //modelInstance.actions shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `displayName`
        should("test displayName") {
            // uncomment below to test the property
            //modelInstance.displayName shouldBe ("TODO")
        }

        // to test the property `displayNameOrNull`
        should("test displayNameOrNull") {
            // uncomment below to test the property
            //modelInstance.displayNameOrNull shouldBe ("TODO")
        }

        // to test the property `fullDisplayName`
        should("test fullDisplayName") {
            // uncomment below to test the property
            //modelInstance.fullDisplayName shouldBe ("TODO")
        }

        // to test the property `fullName`
        should("test fullName") {
            // uncomment below to test the property
            //modelInstance.fullName shouldBe ("TODO")
        }

        // to test the property `buildable`
        should("test buildable") {
            // uncomment below to test the property
            //modelInstance.buildable shouldBe ("TODO")
        }

        // to test the property `builds`
        should("test builds") {
            // uncomment below to test the property
            //modelInstance.builds shouldBe ("TODO")
        }

        // to test the property `firstBuild`
        should("test firstBuild") {
            // uncomment below to test the property
            //modelInstance.firstBuild shouldBe ("TODO")
        }

        // to test the property `healthReport`
        should("test healthReport") {
            // uncomment below to test the property
            //modelInstance.healthReport shouldBe ("TODO")
        }

        // to test the property `inQueue`
        should("test inQueue") {
            // uncomment below to test the property
            //modelInstance.inQueue shouldBe ("TODO")
        }

        // to test the property `keepDependencies`
        should("test keepDependencies") {
            // uncomment below to test the property
            //modelInstance.keepDependencies shouldBe ("TODO")
        }

        // to test the property `lastBuild`
        should("test lastBuild") {
            // uncomment below to test the property
            //modelInstance.lastBuild shouldBe ("TODO")
        }

        // to test the property `lastCompletedBuild`
        should("test lastCompletedBuild") {
            // uncomment below to test the property
            //modelInstance.lastCompletedBuild shouldBe ("TODO")
        }

        // to test the property `lastFailedBuild`
        should("test lastFailedBuild") {
            // uncomment below to test the property
            //modelInstance.lastFailedBuild shouldBe ("TODO")
        }

        // to test the property `lastStableBuild`
        should("test lastStableBuild") {
            // uncomment below to test the property
            //modelInstance.lastStableBuild shouldBe ("TODO")
        }

        // to test the property `lastSuccessfulBuild`
        should("test lastSuccessfulBuild") {
            // uncomment below to test the property
            //modelInstance.lastSuccessfulBuild shouldBe ("TODO")
        }

        // to test the property `lastUnstableBuild`
        should("test lastUnstableBuild") {
            // uncomment below to test the property
            //modelInstance.lastUnstableBuild shouldBe ("TODO")
        }

        // to test the property `lastUnsuccessfulBuild`
        should("test lastUnsuccessfulBuild") {
            // uncomment below to test the property
            //modelInstance.lastUnsuccessfulBuild shouldBe ("TODO")
        }

        // to test the property `nextBuildNumber`
        should("test nextBuildNumber") {
            // uncomment below to test the property
            //modelInstance.nextBuildNumber shouldBe ("TODO")
        }

        // to test the property `queueItem`
        should("test queueItem") {
            // uncomment below to test the property
            //modelInstance.queueItem shouldBe ("TODO")
        }

        // to test the property `concurrentBuild`
        should("test concurrentBuild") {
            // uncomment below to test the property
            //modelInstance.concurrentBuild shouldBe ("TODO")
        }

        // to test the property `scm`
        should("test scm") {
            // uncomment below to test the property
            //modelInstance.scm shouldBe ("TODO")
        }

    }
}
