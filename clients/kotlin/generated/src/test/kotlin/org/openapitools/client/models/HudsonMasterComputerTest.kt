/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.HudsonMasterComputer
import org.openapitools.client.models.HudsonMasterComputerexecutors
import org.openapitools.client.models.HudsonMasterComputermonitorData
import org.openapitools.client.models.Label1

class HudsonMasterComputerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of HudsonMasterComputer
        //val modelInstance = HudsonMasterComputer()

        // to test the property `propertyClass`
        should("test propertyClass") {
            // uncomment below to test the property
            //modelInstance.propertyClass shouldBe ("TODO")
        }

        // to test the property `displayName`
        should("test displayName") {
            // uncomment below to test the property
            //modelInstance.displayName shouldBe ("TODO")
        }

        // to test the property `executors`
        should("test executors") {
            // uncomment below to test the property
            //modelInstance.executors shouldBe ("TODO")
        }

        // to test the property `icon`
        should("test icon") {
            // uncomment below to test the property
            //modelInstance.icon shouldBe ("TODO")
        }

        // to test the property `iconClassName`
        should("test iconClassName") {
            // uncomment below to test the property
            //modelInstance.iconClassName shouldBe ("TODO")
        }

        // to test the property `idle`
        should("test idle") {
            // uncomment below to test the property
            //modelInstance.idle shouldBe ("TODO")
        }

        // to test the property `jnlpAgent`
        should("test jnlpAgent") {
            // uncomment below to test the property
            //modelInstance.jnlpAgent shouldBe ("TODO")
        }

        // to test the property `launchSupported`
        should("test launchSupported") {
            // uncomment below to test the property
            //modelInstance.launchSupported shouldBe ("TODO")
        }

        // to test the property `loadStatistics`
        should("test loadStatistics") {
            // uncomment below to test the property
            //modelInstance.loadStatistics shouldBe ("TODO")
        }

        // to test the property `manualLaunchAllowed`
        should("test manualLaunchAllowed") {
            // uncomment below to test the property
            //modelInstance.manualLaunchAllowed shouldBe ("TODO")
        }

        // to test the property `monitorData`
        should("test monitorData") {
            // uncomment below to test the property
            //modelInstance.monitorData shouldBe ("TODO")
        }

        // to test the property `numExecutors`
        should("test numExecutors") {
            // uncomment below to test the property
            //modelInstance.numExecutors shouldBe ("TODO")
        }

        // to test the property `offline`
        should("test offline") {
            // uncomment below to test the property
            //modelInstance.offline shouldBe ("TODO")
        }

        // to test the property `offlineCause`
        should("test offlineCause") {
            // uncomment below to test the property
            //modelInstance.offlineCause shouldBe ("TODO")
        }

        // to test the property `offlineCauseReason`
        should("test offlineCauseReason") {
            // uncomment below to test the property
            //modelInstance.offlineCauseReason shouldBe ("TODO")
        }

        // to test the property `temporarilyOffline`
        should("test temporarilyOffline") {
            // uncomment below to test the property
            //modelInstance.temporarilyOffline shouldBe ("TODO")
        }

    }
}
