/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.MultibranchPipeline

class MultibranchPipelineTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MultibranchPipeline
        //val modelInstance = MultibranchPipeline()

        // to test the property `displayName`
        should("test displayName") {
            // uncomment below to test the property
            //modelInstance.displayName shouldBe ("TODO")
        }

        // to test the property `estimatedDurationInMillis`
        should("test estimatedDurationInMillis") {
            // uncomment below to test the property
            //modelInstance.estimatedDurationInMillis shouldBe ("TODO")
        }

        // to test the property `latestRun`
        should("test latestRun") {
            // uncomment below to test the property
            //modelInstance.latestRun shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `organization`
        should("test organization") {
            // uncomment below to test the property
            //modelInstance.organization shouldBe ("TODO")
        }

        // to test the property `weatherScore`
        should("test weatherScore") {
            // uncomment below to test the property
            //modelInstance.weatherScore shouldBe ("TODO")
        }

        // to test the property `branchNames`
        should("test branchNames") {
            // uncomment below to test the property
            //modelInstance.branchNames shouldBe ("TODO")
        }

        // to test the property `numberOfFailingBranches`
        should("test numberOfFailingBranches") {
            // uncomment below to test the property
            //modelInstance.numberOfFailingBranches shouldBe ("TODO")
        }

        // to test the property `numberOfFailingPullRequests`
        should("test numberOfFailingPullRequests") {
            // uncomment below to test the property
            //modelInstance.numberOfFailingPullRequests shouldBe ("TODO")
        }

        // to test the property `numberOfSuccessfulBranches`
        should("test numberOfSuccessfulBranches") {
            // uncomment below to test the property
            //modelInstance.numberOfSuccessfulBranches shouldBe ("TODO")
        }

        // to test the property `numberOfSuccessfulPullRequests`
        should("test numberOfSuccessfulPullRequests") {
            // uncomment below to test the property
            //modelInstance.numberOfSuccessfulPullRequests shouldBe ("TODO")
        }

        // to test the property `totalNumberOfBranches`
        should("test totalNumberOfBranches") {
            // uncomment below to test the property
            //modelInstance.totalNumberOfBranches shouldBe ("TODO")
        }

        // to test the property `totalNumberOfPullRequests`
        should("test totalNumberOfPullRequests") {
            // uncomment below to test the property
            //modelInstance.totalNumberOfPullRequests shouldBe ("TODO")
        }

        // to test the property `propertyClass`
        should("test propertyClass") {
            // uncomment below to test the property
            //modelInstance.propertyClass shouldBe ("TODO")
        }

    }
}
