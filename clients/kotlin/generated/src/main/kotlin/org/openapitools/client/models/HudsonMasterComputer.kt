/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.HudsonMasterComputerexecutors
import org.openapitools.client.models.HudsonMasterComputermonitorData
import org.openapitools.client.models.Label1

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param propertyClass 
 * @param displayName 
 * @param executors 
 * @param icon 
 * @param iconClassName 
 * @param idle 
 * @param jnlpAgent 
 * @param launchSupported 
 * @param loadStatistics 
 * @param manualLaunchAllowed 
 * @param monitorData 
 * @param numExecutors 
 * @param offline 
 * @param offlineCause 
 * @param offlineCauseReason 
 * @param temporarilyOffline 
 */


data class HudsonMasterComputer (

    @Json(name = "_class")
    val propertyClass: kotlin.String? = null,

    @Json(name = "displayName")
    val displayName: kotlin.String? = null,

    @Json(name = "executors")
    val executors: kotlin.collections.List<HudsonMasterComputerexecutors>? = null,

    @Json(name = "icon")
    val icon: kotlin.String? = null,

    @Json(name = "iconClassName")
    val iconClassName: kotlin.String? = null,

    @Json(name = "idle")
    val idle: kotlin.Boolean? = null,

    @Json(name = "jnlpAgent")
    val jnlpAgent: kotlin.Boolean? = null,

    @Json(name = "launchSupported")
    val launchSupported: kotlin.Boolean? = null,

    @Json(name = "loadStatistics")
    val loadStatistics: Label1? = null,

    @Json(name = "manualLaunchAllowed")
    val manualLaunchAllowed: kotlin.Boolean? = null,

    @Json(name = "monitorData")
    val monitorData: HudsonMasterComputermonitorData? = null,

    @Json(name = "numExecutors")
    val numExecutors: kotlin.Int? = null,

    @Json(name = "offline")
    val offline: kotlin.Boolean? = null,

    @Json(name = "offlineCause")
    val offlineCause: kotlin.String? = null,

    @Json(name = "offlineCauseReason")
    val offlineCauseReason: kotlin.String? = null,

    @Json(name = "temporarilyOffline")
    val temporarilyOffline: kotlin.Boolean? = null

)

