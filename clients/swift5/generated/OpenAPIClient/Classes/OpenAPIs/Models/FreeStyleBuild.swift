//
// FreeStyleBuild.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FreeStyleBuild: Codable, JSONEncodable, Hashable {

    public var _class: String?
    public var number: Int?
    public var url: String?
    public var actions: [CauseAction]?
    public var building: Bool?
    public var description: String?
    public var displayName: String?
    public var duration: Int?
    public var estimatedDuration: Int?
    public var executor: String?
    public var fullDisplayName: String?
    public var id: String?
    public var keepLog: Bool?
    public var queueId: Int?
    public var result: String?
    public var timestamp: Int?
    public var builtOn: String?
    public var changeSet: EmptyChangeLogSet?

    public init(_class: String? = nil, number: Int? = nil, url: String? = nil, actions: [CauseAction]? = nil, building: Bool? = nil, description: String? = nil, displayName: String? = nil, duration: Int? = nil, estimatedDuration: Int? = nil, executor: String? = nil, fullDisplayName: String? = nil, id: String? = nil, keepLog: Bool? = nil, queueId: Int? = nil, result: String? = nil, timestamp: Int? = nil, builtOn: String? = nil, changeSet: EmptyChangeLogSet? = nil) {
        self._class = _class
        self.number = number
        self.url = url
        self.actions = actions
        self.building = building
        self.description = description
        self.displayName = displayName
        self.duration = duration
        self.estimatedDuration = estimatedDuration
        self.executor = executor
        self.fullDisplayName = fullDisplayName
        self.id = id
        self.keepLog = keepLog
        self.queueId = queueId
        self.result = result
        self.timestamp = timestamp
        self.builtOn = builtOn
        self.changeSet = changeSet
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _class
        case number
        case url
        case actions
        case building
        case description
        case displayName
        case duration
        case estimatedDuration
        case executor
        case fullDisplayName
        case id
        case keepLog
        case queueId
        case result
        case timestamp
        case builtOn
        case changeSet
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_class, forKey: ._class)
        try container.encodeIfPresent(number, forKey: .number)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(actions, forKey: .actions)
        try container.encodeIfPresent(building, forKey: .building)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(estimatedDuration, forKey: .estimatedDuration)
        try container.encodeIfPresent(executor, forKey: .executor)
        try container.encodeIfPresent(fullDisplayName, forKey: .fullDisplayName)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(keepLog, forKey: .keepLog)
        try container.encodeIfPresent(queueId, forKey: .queueId)
        try container.encodeIfPresent(result, forKey: .result)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(builtOn, forKey: .builtOn)
        try container.encodeIfPresent(changeSet, forKey: .changeSet)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension FreeStyleBuild: Identifiable {}
