//
// PipelineRunNode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PipelineRunNode: Codable, JSONEncodable, Hashable {

    public var _class: String?
    public var displayName: String?
    public var durationInMillis: Int?
    public var edges: [PipelineRunNodeedges]?
    public var id: String?
    public var result: String?
    public var startTime: String?
    public var state: String?

    public init(_class: String? = nil, displayName: String? = nil, durationInMillis: Int? = nil, edges: [PipelineRunNodeedges]? = nil, id: String? = nil, result: String? = nil, startTime: String? = nil, state: String? = nil) {
        self._class = _class
        self.displayName = displayName
        self.durationInMillis = durationInMillis
        self.edges = edges
        self.id = id
        self.result = result
        self.startTime = startTime
        self.state = state
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _class
        case displayName
        case durationInMillis
        case edges
        case id
        case result
        case startTime
        case state
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_class, forKey: ._class)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(durationInMillis, forKey: .durationInMillis)
        try container.encodeIfPresent(edges, forKey: .edges)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(result, forKey: .result)
        try container.encodeIfPresent(startTime, forKey: .startTime)
        try container.encodeIfPresent(state, forKey: .state)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PipelineRunNode: Identifiable {}
