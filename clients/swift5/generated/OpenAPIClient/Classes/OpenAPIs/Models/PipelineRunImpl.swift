//
// PipelineRunImpl.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PipelineRunImpl: Codable, JSONEncodable, Hashable {

    public var _class: String?
    public var links: PipelineRunImpllinks?
    public var durationInMillis: Int?
    public var enQueueTime: String?
    public var endTime: String?
    public var estimatedDurationInMillis: Int?
    public var id: String?
    public var organization: String?
    public var pipeline: String?
    public var result: String?
    public var runSummary: String?
    public var startTime: String?
    public var state: String?
    public var type: String?
    public var commitId: String?

    public init(_class: String? = nil, links: PipelineRunImpllinks? = nil, durationInMillis: Int? = nil, enQueueTime: String? = nil, endTime: String? = nil, estimatedDurationInMillis: Int? = nil, id: String? = nil, organization: String? = nil, pipeline: String? = nil, result: String? = nil, runSummary: String? = nil, startTime: String? = nil, state: String? = nil, type: String? = nil, commitId: String? = nil) {
        self._class = _class
        self.links = links
        self.durationInMillis = durationInMillis
        self.enQueueTime = enQueueTime
        self.endTime = endTime
        self.estimatedDurationInMillis = estimatedDurationInMillis
        self.id = id
        self.organization = organization
        self.pipeline = pipeline
        self.result = result
        self.runSummary = runSummary
        self.startTime = startTime
        self.state = state
        self.type = type
        self.commitId = commitId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _class
        case links = "_links"
        case durationInMillis
        case enQueueTime
        case endTime
        case estimatedDurationInMillis
        case id
        case organization
        case pipeline
        case result
        case runSummary
        case startTime
        case state
        case type
        case commitId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_class, forKey: ._class)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encodeIfPresent(durationInMillis, forKey: .durationInMillis)
        try container.encodeIfPresent(enQueueTime, forKey: .enQueueTime)
        try container.encodeIfPresent(endTime, forKey: .endTime)
        try container.encodeIfPresent(estimatedDurationInMillis, forKey: .estimatedDurationInMillis)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(organization, forKey: .organization)
        try container.encodeIfPresent(pipeline, forKey: .pipeline)
        try container.encodeIfPresent(result, forKey: .result)
        try container.encodeIfPresent(runSummary, forKey: .runSummary)
        try container.encodeIfPresent(startTime, forKey: .startTime)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(commitId, forKey: .commitId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PipelineRunImpl: Identifiable {}
