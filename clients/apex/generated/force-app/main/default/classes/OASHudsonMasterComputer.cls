/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASHudsonMasterComputer
 */
public class OASHudsonMasterComputer implements OAS.MappedProperties {
    /**
     * Get propertyClass
     * @return propertyClass
     */
    public String propertyClass { get; set; }

    /**
     * Get displayName
     * @return displayName
     */
    public String displayName { get; set; }

    /**
     * Get executors
     * @return executors
     */
    public List<OASHudsonMasterComputerexecutors> executors { get; set; }

    /**
     * Get icon
     * @return icon
     */
    public String icon { get; set; }

    /**
     * Get iconClassName
     * @return iconClassName
     */
    public String iconClassName { get; set; }

    /**
     * Get idle
     * @return idle
     */
    public Boolean idle { get; set; }

    /**
     * Get jnlpAgent
     * @return jnlpAgent
     */
    public Boolean jnlpAgent { get; set; }

    /**
     * Get launchSupported
     * @return launchSupported
     */
    public Boolean launchSupported { get; set; }

    /**
     * Get loadStatistics
     * @return loadStatistics
     */
    public OASLabel1 loadStatistics { get; set; }

    /**
     * Get manualLaunchAllowed
     * @return manualLaunchAllowed
     */
    public Boolean manualLaunchAllowed { get; set; }

    /**
     * Get monitorData
     * @return monitorData
     */
    public OASHudsonMasterComputermonitorData monitorData { get; set; }

    /**
     * Get numExecutors
     * @return numExecutors
     */
    public Integer numExecutors { get; set; }

    /**
     * Get offline
     * @return offline
     */
    public Boolean offline { get; set; }

    /**
     * Get offlineCause
     * @return offlineCause
     */
    public String offlineCause { get; set; }

    /**
     * Get offlineCauseReason
     * @return offlineCauseReason
     */
    public String offlineCauseReason { get; set; }

    /**
     * Get temporarilyOffline
     * @return temporarilyOffline
     */
    public Boolean temporarilyOffline { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_class' => 'propertyClass'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASHudsonMasterComputer() {
        executors = new List<OASHudsonMasterComputerexecutors>();
    }

    public static OASHudsonMasterComputer getExample() {
        OASHudsonMasterComputer hudsonMasterComputer = new OASHudsonMasterComputer();
          hudsonMasterComputer.propertyClass = '';
          hudsonMasterComputer.displayName = '';
          hudsonMasterComputer.executors = new List<OASHudsonMasterComputerexecutors>{OASHudsonMasterComputerexecutors.getExample()};
          hudsonMasterComputer.icon = '';
          hudsonMasterComputer.iconClassName = '';
          hudsonMasterComputer.idle = true;
          hudsonMasterComputer.jnlpAgent = true;
          hudsonMasterComputer.launchSupported = true;
          hudsonMasterComputer.loadStatistics = OASLabel1.getExample();
          hudsonMasterComputer.manualLaunchAllowed = true;
          hudsonMasterComputer.monitorData = OASHudsonMasterComputermonitorData.getExample();
          hudsonMasterComputer.numExecutors = 0;
          hudsonMasterComputer.offline = true;
          hudsonMasterComputer.offlineCause = '';
          hudsonMasterComputer.offlineCauseReason = '';
          hudsonMasterComputer.temporarilyOffline = true;
        return hudsonMasterComputer;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASHudsonMasterComputer) {           
            OASHudsonMasterComputer hudsonMasterComputer = (OASHudsonMasterComputer) obj;
            return this.propertyClass == hudsonMasterComputer.propertyClass
                && this.displayName == hudsonMasterComputer.displayName
                && this.executors == hudsonMasterComputer.executors
                && this.icon == hudsonMasterComputer.icon
                && this.iconClassName == hudsonMasterComputer.iconClassName
                && this.idle == hudsonMasterComputer.idle
                && this.jnlpAgent == hudsonMasterComputer.jnlpAgent
                && this.launchSupported == hudsonMasterComputer.launchSupported
                && this.loadStatistics == hudsonMasterComputer.loadStatistics
                && this.manualLaunchAllowed == hudsonMasterComputer.manualLaunchAllowed
                && this.monitorData == hudsonMasterComputer.monitorData
                && this.numExecutors == hudsonMasterComputer.numExecutors
                && this.offline == hudsonMasterComputer.offline
                && this.offlineCause == hudsonMasterComputer.offlineCause
                && this.offlineCauseReason == hudsonMasterComputer.offlineCauseReason
                && this.temporarilyOffline == hudsonMasterComputer.temporarilyOffline;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (propertyClass == null ? 0 : System.hashCode(propertyClass));
        hashCode = (17 * hashCode) + (displayName == null ? 0 : System.hashCode(displayName));
        hashCode = (17 * hashCode) + (executors == null ? 0 : System.hashCode(executors));
        hashCode = (17 * hashCode) + (icon == null ? 0 : System.hashCode(icon));
        hashCode = (17 * hashCode) + (iconClassName == null ? 0 : System.hashCode(iconClassName));
        hashCode = (17 * hashCode) + (idle == null ? 0 : System.hashCode(idle));
        hashCode = (17 * hashCode) + (jnlpAgent == null ? 0 : System.hashCode(jnlpAgent));
        hashCode = (17 * hashCode) + (launchSupported == null ? 0 : System.hashCode(launchSupported));
        hashCode = (17 * hashCode) + (loadStatistics == null ? 0 : System.hashCode(loadStatistics));
        hashCode = (17 * hashCode) + (manualLaunchAllowed == null ? 0 : System.hashCode(manualLaunchAllowed));
        hashCode = (17 * hashCode) + (monitorData == null ? 0 : System.hashCode(monitorData));
        hashCode = (17 * hashCode) + (numExecutors == null ? 0 : System.hashCode(numExecutors));
        hashCode = (17 * hashCode) + (offline == null ? 0 : System.hashCode(offline));
        hashCode = (17 * hashCode) + (offlineCause == null ? 0 : System.hashCode(offlineCause));
        hashCode = (17 * hashCode) + (offlineCauseReason == null ? 0 : System.hashCode(offlineCauseReason));
        hashCode = (17 * hashCode) + (temporarilyOffline == null ? 0 : System.hashCode(temporarilyOffline));
        return hashCode;
    }
}

