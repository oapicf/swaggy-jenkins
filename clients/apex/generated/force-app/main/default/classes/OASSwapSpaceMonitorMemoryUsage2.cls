/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSwapSpaceMonitorMemoryUsage2
 */
public class OASSwapSpaceMonitorMemoryUsage2 implements OAS.MappedProperties {
    /**
     * Get propertyClass
     * @return propertyClass
     */
    public String propertyClass { get; set; }

    /**
     * Get availablePhysicalMemory
     * @return availablePhysicalMemory
     */
    public Integer availablePhysicalMemory { get; set; }

    /**
     * Get availableSwapSpace
     * @return availableSwapSpace
     */
    public Integer availableSwapSpace { get; set; }

    /**
     * Get totalPhysicalMemory
     * @return totalPhysicalMemory
     */
    public Integer totalPhysicalMemory { get; set; }

    /**
     * Get totalSwapSpace
     * @return totalSwapSpace
     */
    public Integer totalSwapSpace { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_class' => 'propertyClass'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSwapSpaceMonitorMemoryUsage2 getExample() {
        OASSwapSpaceMonitorMemoryUsage2 swapSpaceMonitorMemoryUsage2 = new OASSwapSpaceMonitorMemoryUsage2();
          swapSpaceMonitorMemoryUsage2.propertyClass = '';
          swapSpaceMonitorMemoryUsage2.availablePhysicalMemory = 0;
          swapSpaceMonitorMemoryUsage2.availableSwapSpace = 0;
          swapSpaceMonitorMemoryUsage2.totalPhysicalMemory = 0;
          swapSpaceMonitorMemoryUsage2.totalSwapSpace = 0;
        return swapSpaceMonitorMemoryUsage2;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSwapSpaceMonitorMemoryUsage2) {           
            OASSwapSpaceMonitorMemoryUsage2 swapSpaceMonitorMemoryUsage2 = (OASSwapSpaceMonitorMemoryUsage2) obj;
            return this.propertyClass == swapSpaceMonitorMemoryUsage2.propertyClass
                && this.availablePhysicalMemory == swapSpaceMonitorMemoryUsage2.availablePhysicalMemory
                && this.availableSwapSpace == swapSpaceMonitorMemoryUsage2.availableSwapSpace
                && this.totalPhysicalMemory == swapSpaceMonitorMemoryUsage2.totalPhysicalMemory
                && this.totalSwapSpace == swapSpaceMonitorMemoryUsage2.totalSwapSpace;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (propertyClass == null ? 0 : System.hashCode(propertyClass));
        hashCode = (17 * hashCode) + (availablePhysicalMemory == null ? 0 : System.hashCode(availablePhysicalMemory));
        hashCode = (17 * hashCode) + (availableSwapSpace == null ? 0 : System.hashCode(availableSwapSpace));
        hashCode = (17 * hashCode) + (totalPhysicalMemory == null ? 0 : System.hashCode(totalPhysicalMemory));
        hashCode = (17 * hashCode) + (totalSwapSpace == null ? 0 : System.hashCode(totalSwapSpace));
        return hashCode;
    }
}

