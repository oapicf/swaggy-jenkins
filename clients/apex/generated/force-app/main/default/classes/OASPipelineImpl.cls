/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASPipelineImpl
 */
public class OASPipelineImpl implements OAS.MappedProperties {
    /**
     * Get propertyClass
     * @return propertyClass
     */
    public String propertyClass { get; set; }

    /**
     * Get displayName
     * @return displayName
     */
    public String displayName { get; set; }

    /**
     * Get estimatedDurationInMillis
     * @return estimatedDurationInMillis
     */
    public Integer estimatedDurationInMillis { get; set; }

    /**
     * Get fullName
     * @return fullName
     */
    public String fullName { get; set; }

    /**
     * Get latestRun
     * @return latestRun
     */
    public String latestRun { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get organization
     * @return organization
     */
    public String organization { get; set; }

    /**
     * Get weatherScore
     * @return weatherScore
     */
    public Integer weatherScore { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASPipelineImpllinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_class' => 'propertyClass',
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_class' => 'propertyClass',
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPipelineImpl getExample() {
        OASPipelineImpl pipelineImpl = new OASPipelineImpl();
          pipelineImpl.propertyClass = '';
          pipelineImpl.displayName = '';
          pipelineImpl.estimatedDurationInMillis = 0;
          pipelineImpl.fullName = '';
          pipelineImpl.latestRun = '';
          pipelineImpl.name = '';
          pipelineImpl.organization = '';
          pipelineImpl.weatherScore = 0;
          pipelineImpl.links = OASPipelineImpllinks.getExample();
        return pipelineImpl;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPipelineImpl) {           
            OASPipelineImpl pipelineImpl = (OASPipelineImpl) obj;
            return this.propertyClass == pipelineImpl.propertyClass
                && this.displayName == pipelineImpl.displayName
                && this.estimatedDurationInMillis == pipelineImpl.estimatedDurationInMillis
                && this.fullName == pipelineImpl.fullName
                && this.latestRun == pipelineImpl.latestRun
                && this.name == pipelineImpl.name
                && this.organization == pipelineImpl.organization
                && this.weatherScore == pipelineImpl.weatherScore
                && this.links == pipelineImpl.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (propertyClass == null ? 0 : System.hashCode(propertyClass));
        hashCode = (17 * hashCode) + (displayName == null ? 0 : System.hashCode(displayName));
        hashCode = (17 * hashCode) + (estimatedDurationInMillis == null ? 0 : System.hashCode(estimatedDurationInMillis));
        hashCode = (17 * hashCode) + (fullName == null ? 0 : System.hashCode(fullName));
        hashCode = (17 * hashCode) + (latestRun == null ? 0 : System.hashCode(latestRun));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (organization == null ? 0 : System.hashCode(organization));
        hashCode = (17 * hashCode) + (weatherScore == null ? 0 : System.hashCode(weatherScore));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

