/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * API version: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the BaseAPI part of the API
	BaseAPI BaseAPI
	// Routes for the BlueOceanAPI part of the API
	BlueOceanAPI BlueOceanAPI
	// Routes for the RemoteAccessAPI part of the API
	RemoteAccessAPI RemoteAccessAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"GetCrumb",
			http.MethodGet,
			"/crumbIssuer/api/json",
			handleFunctions.BaseAPI.GetCrumb,
		},
		{
			"DeletePipelineQueueItem",
			http.MethodDelete,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/queue/:queue",
			handleFunctions.BlueOceanAPI.DeletePipelineQueueItem,
		},
		{
			"GetAuthenticatedUser",
			http.MethodGet,
			"/blue/rest/organizations/:organization/user/",
			handleFunctions.BlueOceanAPI.GetAuthenticatedUser,
		},
		{
			"GetClasses",
			http.MethodGet,
			"/blue/rest/classes/:class",
			handleFunctions.BlueOceanAPI.GetClasses,
		},
		{
			"GetJsonWebKey",
			http.MethodGet,
			"/jwt-auth/jwks/:key",
			handleFunctions.BlueOceanAPI.GetJsonWebKey,
		},
		{
			"GetJsonWebToken",
			http.MethodGet,
			"/jwt-auth/token",
			handleFunctions.BlueOceanAPI.GetJsonWebToken,
		},
		{
			"GetOrganisation",
			http.MethodGet,
			"/blue/rest/organizations/:organization",
			handleFunctions.BlueOceanAPI.GetOrganisation,
		},
		{
			"GetOrganisations",
			http.MethodGet,
			"/blue/rest/organizations/",
			handleFunctions.BlueOceanAPI.GetOrganisations,
		},
		{
			"GetPipeline",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline",
			handleFunctions.BlueOceanAPI.GetPipeline,
		},
		{
			"GetPipelineActivities",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/activities",
			handleFunctions.BlueOceanAPI.GetPipelineActivities,
		},
		{
			"GetPipelineBranch",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/branches/:branch/",
			handleFunctions.BlueOceanAPI.GetPipelineBranch,
		},
		{
			"GetPipelineBranchRun",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/branches/:branch/runs/:run",
			handleFunctions.BlueOceanAPI.GetPipelineBranchRun,
		},
		{
			"GetPipelineBranches",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/branches",
			handleFunctions.BlueOceanAPI.GetPipelineBranches,
		},
		{
			"GetPipelineFolder",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:folder/",
			handleFunctions.BlueOceanAPI.GetPipelineFolder,
		},
		{
			"GetPipelineFolderPipeline",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:folder/pipelines/:pipeline",
			handleFunctions.BlueOceanAPI.GetPipelineFolderPipeline,
		},
		{
			"GetPipelineQueue",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/queue",
			handleFunctions.BlueOceanAPI.GetPipelineQueue,
		},
		{
			"GetPipelineRun",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run",
			handleFunctions.BlueOceanAPI.GetPipelineRun,
		},
		{
			"GetPipelineRunLog",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/log",
			handleFunctions.BlueOceanAPI.GetPipelineRunLog,
		},
		{
			"GetPipelineRunNode",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/nodes/:node",
			handleFunctions.BlueOceanAPI.GetPipelineRunNode,
		},
		{
			"GetPipelineRunNodeStep",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/nodes/:node/steps/:step",
			handleFunctions.BlueOceanAPI.GetPipelineRunNodeStep,
		},
		{
			"GetPipelineRunNodeStepLog",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/nodes/:node/steps/:step/log",
			handleFunctions.BlueOceanAPI.GetPipelineRunNodeStepLog,
		},
		{
			"GetPipelineRunNodeSteps",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/nodes/:node/steps",
			handleFunctions.BlueOceanAPI.GetPipelineRunNodeSteps,
		},
		{
			"GetPipelineRunNodes",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/nodes",
			handleFunctions.BlueOceanAPI.GetPipelineRunNodes,
		},
		{
			"GetPipelineRuns",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs",
			handleFunctions.BlueOceanAPI.GetPipelineRuns,
		},
		{
			"GetPipelines",
			http.MethodGet,
			"/blue/rest/organizations/:organization/pipelines/",
			handleFunctions.BlueOceanAPI.GetPipelines,
		},
		{
			"GetSCM",
			http.MethodGet,
			"/blue/rest/organizations/:organization/scm/:scm",
			handleFunctions.BlueOceanAPI.GetSCM,
		},
		{
			"GetSCMOrganisationRepositories",
			http.MethodGet,
			"/blue/rest/organizations/:organization/scm/:scm/organizations/:scmOrganisation/repositories",
			handleFunctions.BlueOceanAPI.GetSCMOrganisationRepositories,
		},
		{
			"GetSCMOrganisationRepository",
			http.MethodGet,
			"/blue/rest/organizations/:organization/scm/:scm/organizations/:scmOrganisation/repositories/:repository",
			handleFunctions.BlueOceanAPI.GetSCMOrganisationRepository,
		},
		{
			"GetSCMOrganisations",
			http.MethodGet,
			"/blue/rest/organizations/:organization/scm/:scm/organizations",
			handleFunctions.BlueOceanAPI.GetSCMOrganisations,
		},
		{
			"GetUser",
			http.MethodGet,
			"/blue/rest/organizations/:organization/users/:user",
			handleFunctions.BlueOceanAPI.GetUser,
		},
		{
			"GetUserFavorites",
			http.MethodGet,
			"/blue/rest/users/:user/favorites",
			handleFunctions.BlueOceanAPI.GetUserFavorites,
		},
		{
			"GetUsers",
			http.MethodGet,
			"/blue/rest/organizations/:organization/users/",
			handleFunctions.BlueOceanAPI.GetUsers,
		},
		{
			"PostPipelineRun",
			http.MethodPost,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/replay",
			handleFunctions.BlueOceanAPI.PostPipelineRun,
		},
		{
			"PostPipelineRuns",
			http.MethodPost,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs",
			handleFunctions.BlueOceanAPI.PostPipelineRuns,
		},
		{
			"PutPipelineFavorite",
			http.MethodPut,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/favorite",
			handleFunctions.BlueOceanAPI.PutPipelineFavorite,
		},
		{
			"PutPipelineRun",
			http.MethodPut,
			"/blue/rest/organizations/:organization/pipelines/:pipeline/runs/:run/stop",
			handleFunctions.BlueOceanAPI.PutPipelineRun,
		},
		{
			"Search",
			http.MethodGet,
			"/blue/rest/search/",
			handleFunctions.BlueOceanAPI.Search,
		},
		{
			"SearchClasses",
			http.MethodGet,
			"/blue/rest/classes/",
			handleFunctions.BlueOceanAPI.SearchClasses,
		},
		{
			"GetComputer",
			http.MethodGet,
			"/computer/api/json",
			handleFunctions.RemoteAccessAPI.GetComputer,
		},
		{
			"GetJenkins",
			http.MethodGet,
			"/api/json",
			handleFunctions.RemoteAccessAPI.GetJenkins,
		},
		{
			"GetJob",
			http.MethodGet,
			"/job/:name/api/json",
			handleFunctions.RemoteAccessAPI.GetJob,
		},
		{
			"GetJobConfig",
			http.MethodGet,
			"/job/:name/config.xml",
			handleFunctions.RemoteAccessAPI.GetJobConfig,
		},
		{
			"GetJobLastBuild",
			http.MethodGet,
			"/job/:name/lastBuild/api/json",
			handleFunctions.RemoteAccessAPI.GetJobLastBuild,
		},
		{
			"GetJobProgressiveText",
			http.MethodGet,
			"/job/:name/:number/logText/progressiveText",
			handleFunctions.RemoteAccessAPI.GetJobProgressiveText,
		},
		{
			"GetQueue",
			http.MethodGet,
			"/queue/api/json",
			handleFunctions.RemoteAccessAPI.GetQueue,
		},
		{
			"GetQueueItem",
			http.MethodGet,
			"/queue/item/:number/api/json",
			handleFunctions.RemoteAccessAPI.GetQueueItem,
		},
		{
			"GetView",
			http.MethodGet,
			"/view/:name/api/json",
			handleFunctions.RemoteAccessAPI.GetView,
		},
		{
			"GetViewConfig",
			http.MethodGet,
			"/view/:name/config.xml",
			handleFunctions.RemoteAccessAPI.GetViewConfig,
		},
		{
			"HeadJenkins",
			http.MethodHead,
			"/api/json",
			handleFunctions.RemoteAccessAPI.HeadJenkins,
		},
		{
			"PostCreateItem",
			http.MethodPost,
			"/createItem",
			handleFunctions.RemoteAccessAPI.PostCreateItem,
		},
		{
			"PostCreateView",
			http.MethodPost,
			"/createView",
			handleFunctions.RemoteAccessAPI.PostCreateView,
		},
		{
			"PostJobBuild",
			http.MethodPost,
			"/job/:name/build",
			handleFunctions.RemoteAccessAPI.PostJobBuild,
		},
		{
			"PostJobConfig",
			http.MethodPost,
			"/job/:name/config.xml",
			handleFunctions.RemoteAccessAPI.PostJobConfig,
		},
		{
			"PostJobDelete",
			http.MethodPost,
			"/job/:name/doDelete",
			handleFunctions.RemoteAccessAPI.PostJobDelete,
		},
		{
			"PostJobDisable",
			http.MethodPost,
			"/job/:name/disable",
			handleFunctions.RemoteAccessAPI.PostJobDisable,
		},
		{
			"PostJobEnable",
			http.MethodPost,
			"/job/:name/enable",
			handleFunctions.RemoteAccessAPI.PostJobEnable,
		},
		{
			"PostJobLastBuildStop",
			http.MethodPost,
			"/job/:name/lastBuild/stop",
			handleFunctions.RemoteAccessAPI.PostJobLastBuildStop,
		},
		{
			"PostViewConfig",
			http.MethodPost,
			"/view/:name/config.xml",
			handleFunctions.RemoteAccessAPI.PostViewConfig,
		},
	}
}
