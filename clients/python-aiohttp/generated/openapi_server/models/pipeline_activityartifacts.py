# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PipelineActivityartifacts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, size: int=None, url: str=None, _class: str=None):
        """PipelineActivityartifacts - a model defined in OpenAPI

        :param name: The name of this PipelineActivityartifacts.
        :param size: The size of this PipelineActivityartifacts.
        :param url: The url of this PipelineActivityartifacts.
        :param _class: The _class of this PipelineActivityartifacts.
        """
        self.openapi_types = {
            'name': str,
            'size': int,
            'url': str,
            '_class': str
        }

        self.attribute_map = {
            'name': 'name',
            'size': 'size',
            'url': 'url',
            '_class': '_class'
        }

        self._name = name
        self._size = size
        self._url = url
        self.__class = _class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipelineActivityartifacts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipelineActivityartifacts of this PipelineActivityartifacts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PipelineActivityartifacts.


        :return: The name of this PipelineActivityartifacts.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PipelineActivityartifacts.


        :param name: The name of this PipelineActivityartifacts.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this PipelineActivityartifacts.


        :return: The size of this PipelineActivityartifacts.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PipelineActivityartifacts.


        :param size: The size of this PipelineActivityartifacts.
        :type size: int
        """

        self._size = size

    @property
    def url(self):
        """Gets the url of this PipelineActivityartifacts.


        :return: The url of this PipelineActivityartifacts.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PipelineActivityartifacts.


        :param url: The url of this PipelineActivityartifacts.
        :type url: str
        """

        self._url = url

    @property
    def _class(self):
        """Gets the _class of this PipelineActivityartifacts.


        :return: The _class of this PipelineActivityartifacts.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this PipelineActivityartifacts.


        :param _class: The _class of this PipelineActivityartifacts.
        :type _class: str
        """

        self.__class = _class
