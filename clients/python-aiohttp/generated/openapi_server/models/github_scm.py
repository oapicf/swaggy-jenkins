# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.github_scmlinks import GithubScmlinks
from openapi_server import util


class GithubScm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _class: str=None, links: GithubScmlinks=None, credential_id: str=None, id: str=None, uri: str=None):
        """GithubScm - a model defined in OpenAPI

        :param _class: The _class of this GithubScm.
        :param links: The links of this GithubScm.
        :param credential_id: The credential_id of this GithubScm.
        :param id: The id of this GithubScm.
        :param uri: The uri of this GithubScm.
        """
        self.openapi_types = {
            '_class': str,
            'links': GithubScmlinks,
            'credential_id': str,
            'id': str,
            'uri': str
        }

        self.attribute_map = {
            '_class': '_class',
            'links': '_links',
            'credential_id': 'credentialId',
            'id': 'id',
            'uri': 'uri'
        }

        self.__class = _class
        self._links = links
        self._credential_id = credential_id
        self._id = id
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GithubScm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GithubScm of this GithubScm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _class(self):
        """Gets the _class of this GithubScm.


        :return: The _class of this GithubScm.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this GithubScm.


        :param _class: The _class of this GithubScm.
        :type _class: str
        """

        self.__class = _class

    @property
    def links(self):
        """Gets the links of this GithubScm.


        :return: The links of this GithubScm.
        :rtype: GithubScmlinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GithubScm.


        :param links: The links of this GithubScm.
        :type links: GithubScmlinks
        """

        self._links = links

    @property
    def credential_id(self):
        """Gets the credential_id of this GithubScm.


        :return: The credential_id of this GithubScm.
        :rtype: str
        """
        return self._credential_id

    @credential_id.setter
    def credential_id(self, credential_id):
        """Sets the credential_id of this GithubScm.


        :param credential_id: The credential_id of this GithubScm.
        :type credential_id: str
        """

        self._credential_id = credential_id

    @property
    def id(self):
        """Gets the id of this GithubScm.


        :return: The id of this GithubScm.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GithubScm.


        :param id: The id of this GithubScm.
        :type id: str
        """

        self._id = id

    @property
    def uri(self):
        """Gets the uri of this GithubScm.


        :return: The uri of this GithubScm.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GithubScm.


        :param uri: The uri of this GithubScm.
        :type uri: str
        """

        self._uri = uri
