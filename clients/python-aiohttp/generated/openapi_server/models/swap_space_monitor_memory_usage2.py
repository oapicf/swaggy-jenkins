# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SwapSpaceMonitorMemoryUsage2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _class: str=None, available_physical_memory: int=None, available_swap_space: int=None, total_physical_memory: int=None, total_swap_space: int=None):
        """SwapSpaceMonitorMemoryUsage2 - a model defined in OpenAPI

        :param _class: The _class of this SwapSpaceMonitorMemoryUsage2.
        :param available_physical_memory: The available_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :param available_swap_space: The available_swap_space of this SwapSpaceMonitorMemoryUsage2.
        :param total_physical_memory: The total_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :param total_swap_space: The total_swap_space of this SwapSpaceMonitorMemoryUsage2.
        """
        self.openapi_types = {
            '_class': str,
            'available_physical_memory': int,
            'available_swap_space': int,
            'total_physical_memory': int,
            'total_swap_space': int
        }

        self.attribute_map = {
            '_class': '_class',
            'available_physical_memory': 'availablePhysicalMemory',
            'available_swap_space': 'availableSwapSpace',
            'total_physical_memory': 'totalPhysicalMemory',
            'total_swap_space': 'totalSwapSpace'
        }

        self.__class = _class
        self._available_physical_memory = available_physical_memory
        self._available_swap_space = available_swap_space
        self._total_physical_memory = total_physical_memory
        self._total_swap_space = total_swap_space

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SwapSpaceMonitorMemoryUsage2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SwapSpaceMonitorMemoryUsage2 of this SwapSpaceMonitorMemoryUsage2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _class(self):
        """Gets the _class of this SwapSpaceMonitorMemoryUsage2.


        :return: The _class of this SwapSpaceMonitorMemoryUsage2.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this SwapSpaceMonitorMemoryUsage2.


        :param _class: The _class of this SwapSpaceMonitorMemoryUsage2.
        :type _class: str
        """

        self.__class = _class

    @property
    def available_physical_memory(self):
        """Gets the available_physical_memory of this SwapSpaceMonitorMemoryUsage2.


        :return: The available_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :rtype: int
        """
        return self._available_physical_memory

    @available_physical_memory.setter
    def available_physical_memory(self, available_physical_memory):
        """Sets the available_physical_memory of this SwapSpaceMonitorMemoryUsage2.


        :param available_physical_memory: The available_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :type available_physical_memory: int
        """

        self._available_physical_memory = available_physical_memory

    @property
    def available_swap_space(self):
        """Gets the available_swap_space of this SwapSpaceMonitorMemoryUsage2.


        :return: The available_swap_space of this SwapSpaceMonitorMemoryUsage2.
        :rtype: int
        """
        return self._available_swap_space

    @available_swap_space.setter
    def available_swap_space(self, available_swap_space):
        """Sets the available_swap_space of this SwapSpaceMonitorMemoryUsage2.


        :param available_swap_space: The available_swap_space of this SwapSpaceMonitorMemoryUsage2.
        :type available_swap_space: int
        """

        self._available_swap_space = available_swap_space

    @property
    def total_physical_memory(self):
        """Gets the total_physical_memory of this SwapSpaceMonitorMemoryUsage2.


        :return: The total_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :rtype: int
        """
        return self._total_physical_memory

    @total_physical_memory.setter
    def total_physical_memory(self, total_physical_memory):
        """Sets the total_physical_memory of this SwapSpaceMonitorMemoryUsage2.


        :param total_physical_memory: The total_physical_memory of this SwapSpaceMonitorMemoryUsage2.
        :type total_physical_memory: int
        """

        self._total_physical_memory = total_physical_memory

    @property
    def total_swap_space(self):
        """Gets the total_swap_space of this SwapSpaceMonitorMemoryUsage2.


        :return: The total_swap_space of this SwapSpaceMonitorMemoryUsage2.
        :rtype: int
        """
        return self._total_swap_space

    @total_swap_space.setter
    def total_swap_space(self, total_swap_space):
        """Sets the total_swap_space of this SwapSpaceMonitorMemoryUsage2.


        :param total_swap_space: The total_swap_space of this SwapSpaceMonitorMemoryUsage2.
        :type total_swap_space: int
        """

        self._total_swap_space = total_swap_space
