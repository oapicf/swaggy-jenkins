# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server import util


class PipelineRunImpllinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nodes: Link=None, log: Link=None, _self: Link=None, actions: Link=None, steps: Link=None, _class: str=None):
        """PipelineRunImpllinks - a model defined in OpenAPI

        :param nodes: The nodes of this PipelineRunImpllinks.
        :param log: The log of this PipelineRunImpllinks.
        :param _self: The _self of this PipelineRunImpllinks.
        :param actions: The actions of this PipelineRunImpllinks.
        :param steps: The steps of this PipelineRunImpllinks.
        :param _class: The _class of this PipelineRunImpllinks.
        """
        self.openapi_types = {
            'nodes': Link,
            'log': Link,
            '_self': Link,
            'actions': Link,
            'steps': Link,
            '_class': str
        }

        self.attribute_map = {
            'nodes': 'nodes',
            'log': 'log',
            '_self': 'self',
            'actions': 'actions',
            'steps': 'steps',
            '_class': '_class'
        }

        self._nodes = nodes
        self._log = log
        self.__self = _self
        self._actions = actions
        self._steps = steps
        self.__class = _class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipelineRunImpllinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipelineRunImpllinks of this PipelineRunImpllinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodes(self):
        """Gets the nodes of this PipelineRunImpllinks.


        :return: The nodes of this PipelineRunImpllinks.
        :rtype: Link
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """Sets the nodes of this PipelineRunImpllinks.


        :param nodes: The nodes of this PipelineRunImpllinks.
        :type nodes: Link
        """

        self._nodes = nodes

    @property
    def log(self):
        """Gets the log of this PipelineRunImpllinks.


        :return: The log of this PipelineRunImpllinks.
        :rtype: Link
        """
        return self._log

    @log.setter
    def log(self, log):
        """Sets the log of this PipelineRunImpllinks.


        :param log: The log of this PipelineRunImpllinks.
        :type log: Link
        """

        self._log = log

    @property
    def _self(self):
        """Gets the _self of this PipelineRunImpllinks.


        :return: The _self of this PipelineRunImpllinks.
        :rtype: Link
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this PipelineRunImpllinks.


        :param _self: The _self of this PipelineRunImpllinks.
        :type _self: Link
        """

        self.__self = _self

    @property
    def actions(self):
        """Gets the actions of this PipelineRunImpllinks.


        :return: The actions of this PipelineRunImpllinks.
        :rtype: Link
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this PipelineRunImpllinks.


        :param actions: The actions of this PipelineRunImpllinks.
        :type actions: Link
        """

        self._actions = actions

    @property
    def steps(self):
        """Gets the steps of this PipelineRunImpllinks.


        :return: The steps of this PipelineRunImpllinks.
        :rtype: Link
        """
        return self._steps

    @steps.setter
    def steps(self, steps):
        """Sets the steps of this PipelineRunImpllinks.


        :param steps: The steps of this PipelineRunImpllinks.
        :type steps: Link
        """

        self._steps = steps

    @property
    def _class(self):
        """Gets the _class of this PipelineRunImpllinks.


        :return: The _class of this PipelineRunImpllinks.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this PipelineRunImpllinks.


        :param _class: The _class of this PipelineRunImpllinks.
        :type _class: str
        """

        self.__class = _class
