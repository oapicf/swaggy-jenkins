/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 3.0.2-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FreeStyleProjecthealthReport.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FreeStyleProjecthealthReport::FreeStyleProjecthealthReport()
{
    m_Description = "";
    m_DescriptionIsSet = false;
    m_IconClassName = "";
    m_IconClassNameIsSet = false;
    m_IconUrl = "";
    m_IconUrlIsSet = false;
    m_Score = 0;
    m_ScoreIsSet = false;
    m__class = "";
    m__classIsSet = false;
    
}

void FreeStyleProjecthealthReport::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FreeStyleProjecthealthReport::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FreeStyleProjecthealthReport::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FreeStyleProjecthealthReport" : pathPrefix;

                        
    return success;
}

bool FreeStyleProjecthealthReport::operator==(const FreeStyleProjecthealthReport& rhs) const
{
    return
    
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!iconClassNameIsSet() && !rhs.iconClassNameIsSet()) || (iconClassNameIsSet() && rhs.iconClassNameIsSet() && getIconClassName() == rhs.getIconClassName())) &&
    
    
    ((!iconUrlIsSet() && !rhs.iconUrlIsSet()) || (iconUrlIsSet() && rhs.iconUrlIsSet() && getIconUrl() == rhs.getIconUrl())) &&
    
    
    ((!scoreIsSet() && !rhs.scoreIsSet()) || (scoreIsSet() && rhs.scoreIsSet() && getScore() == rhs.getScore())) &&
    
    
    ((!r_classIsSet() && !rhs.r_classIsSet()) || (r_classIsSet() && rhs.r_classIsSet() && getClass() == rhs.getClass()))
    
    ;
}

bool FreeStyleProjecthealthReport::operator!=(const FreeStyleProjecthealthReport& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FreeStyleProjecthealthReport& o)
{
    j = nlohmann::json::object();
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.iconClassNameIsSet())
        j["iconClassName"] = o.m_IconClassName;
    if(o.iconUrlIsSet())
        j["iconUrl"] = o.m_IconUrl;
    if(o.scoreIsSet())
        j["score"] = o.m_Score;
    if(o.r_classIsSet())
        j["_class"] = o.m__class;
    
}

void from_json(const nlohmann::json& j, FreeStyleProjecthealthReport& o)
{
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("iconClassName") != j.end())
    {
        j.at("iconClassName").get_to(o.m_IconClassName);
        o.m_IconClassNameIsSet = true;
    } 
    if(j.find("iconUrl") != j.end())
    {
        j.at("iconUrl").get_to(o.m_IconUrl);
        o.m_IconUrlIsSet = true;
    } 
    if(j.find("score") != j.end())
    {
        j.at("score").get_to(o.m_Score);
        o.m_ScoreIsSet = true;
    } 
    if(j.find("_class") != j.end())
    {
        j.at("_class").get_to(o.m__class);
        o.m__classIsSet = true;
    } 
    
}

std::string FreeStyleProjecthealthReport::getDescription() const
{
    return m_Description;
}
void FreeStyleProjecthealthReport::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool FreeStyleProjecthealthReport::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void FreeStyleProjecthealthReport::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::string FreeStyleProjecthealthReport::getIconClassName() const
{
    return m_IconClassName;
}
void FreeStyleProjecthealthReport::setIconClassName(std::string const& value)
{
    m_IconClassName = value;
    m_IconClassNameIsSet = true;
}
bool FreeStyleProjecthealthReport::iconClassNameIsSet() const
{
    return m_IconClassNameIsSet;
}
void FreeStyleProjecthealthReport::unsetIconClassName()
{
    m_IconClassNameIsSet = false;
}
std::string FreeStyleProjecthealthReport::getIconUrl() const
{
    return m_IconUrl;
}
void FreeStyleProjecthealthReport::setIconUrl(std::string const& value)
{
    m_IconUrl = value;
    m_IconUrlIsSet = true;
}
bool FreeStyleProjecthealthReport::iconUrlIsSet() const
{
    return m_IconUrlIsSet;
}
void FreeStyleProjecthealthReport::unsetIconUrl()
{
    m_IconUrlIsSet = false;
}
int32_t FreeStyleProjecthealthReport::getScore() const
{
    return m_Score;
}
void FreeStyleProjecthealthReport::setScore(int32_t const value)
{
    m_Score = value;
    m_ScoreIsSet = true;
}
bool FreeStyleProjecthealthReport::scoreIsSet() const
{
    return m_ScoreIsSet;
}
void FreeStyleProjecthealthReport::unsetScore()
{
    m_ScoreIsSet = false;
}
std::string FreeStyleProjecthealthReport::getClass() const
{
    return m__class;
}
void FreeStyleProjecthealthReport::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool FreeStyleProjecthealthReport::r_classIsSet() const
{
    return m__classIsSet;
}
void FreeStyleProjecthealthReport::unset_class()
{
    m__classIsSet = false;
}


} // namespace org::openapitools::server::model

