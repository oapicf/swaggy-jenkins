/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 2.0.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Pipeline.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Pipeline::Pipeline()
{
    m__class = "";
    m__classIsSet = false;
    m_Organization = "";
    m_OrganizationIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    m_DisplayName = "";
    m_DisplayNameIsSet = false;
    m_FullName = "";
    m_FullNameIsSet = false;
    m_WeatherScore = 0;
    m_WeatherScoreIsSet = false;
    m_EstimatedDurationInMillis = 0;
    m_EstimatedDurationInMillisIsSet = false;
    m_LatestRunIsSet = false;
    
}

void Pipeline::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Pipeline::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Pipeline::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Pipeline" : pathPrefix;

                                    
    return success;
}

bool Pipeline::operator==(const Pipeline& rhs) const
{
    return
    
    
    
    ((!r_classIsSet() && !rhs.r_classIsSet()) || (r_classIsSet() && rhs.r_classIsSet() && getClass() == rhs.getClass())) &&
    
    
    ((!organizationIsSet() && !rhs.organizationIsSet()) || (organizationIsSet() && rhs.organizationIsSet() && getOrganization() == rhs.getOrganization())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!displayNameIsSet() && !rhs.displayNameIsSet()) || (displayNameIsSet() && rhs.displayNameIsSet() && getDisplayName() == rhs.getDisplayName())) &&
    
    
    ((!fullNameIsSet() && !rhs.fullNameIsSet()) || (fullNameIsSet() && rhs.fullNameIsSet() && getFullName() == rhs.getFullName())) &&
    
    
    ((!weatherScoreIsSet() && !rhs.weatherScoreIsSet()) || (weatherScoreIsSet() && rhs.weatherScoreIsSet() && getWeatherScore() == rhs.getWeatherScore())) &&
    
    
    ((!estimatedDurationInMillisIsSet() && !rhs.estimatedDurationInMillisIsSet()) || (estimatedDurationInMillisIsSet() && rhs.estimatedDurationInMillisIsSet() && getEstimatedDurationInMillis() == rhs.getEstimatedDurationInMillis())) &&
    
    
    ((!latestRunIsSet() && !rhs.latestRunIsSet()) || (latestRunIsSet() && rhs.latestRunIsSet() && getLatestRun() == rhs.getLatestRun()))
    
    ;
}

bool Pipeline::operator!=(const Pipeline& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Pipeline& o)
{
    j = nlohmann::json::object();
    if(o.r_classIsSet())
        j["_class"] = o.m__class;
    if(o.organizationIsSet())
        j["organization"] = o.m_Organization;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.displayNameIsSet())
        j["displayName"] = o.m_DisplayName;
    if(o.fullNameIsSet())
        j["fullName"] = o.m_FullName;
    if(o.weatherScoreIsSet())
        j["weatherScore"] = o.m_WeatherScore;
    if(o.estimatedDurationInMillisIsSet())
        j["estimatedDurationInMillis"] = o.m_EstimatedDurationInMillis;
    if(o.latestRunIsSet())
        j["latestRun"] = o.m_LatestRun;
    
}

void from_json(const nlohmann::json& j, Pipeline& o)
{
    if(j.find("_class") != j.end())
    {
        j.at("_class").get_to(o.m__class);
        o.m__classIsSet = true;
    } 
    if(j.find("organization") != j.end())
    {
        j.at("organization").get_to(o.m_Organization);
        o.m_OrganizationIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("displayName") != j.end())
    {
        j.at("displayName").get_to(o.m_DisplayName);
        o.m_DisplayNameIsSet = true;
    } 
    if(j.find("fullName") != j.end())
    {
        j.at("fullName").get_to(o.m_FullName);
        o.m_FullNameIsSet = true;
    } 
    if(j.find("weatherScore") != j.end())
    {
        j.at("weatherScore").get_to(o.m_WeatherScore);
        o.m_WeatherScoreIsSet = true;
    } 
    if(j.find("estimatedDurationInMillis") != j.end())
    {
        j.at("estimatedDurationInMillis").get_to(o.m_EstimatedDurationInMillis);
        o.m_EstimatedDurationInMillisIsSet = true;
    } 
    if(j.find("latestRun") != j.end())
    {
        j.at("latestRun").get_to(o.m_LatestRun);
        o.m_LatestRunIsSet = true;
    } 
    
}

std::string Pipeline::getClass() const
{
    return m__class;
}
void Pipeline::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool Pipeline::r_classIsSet() const
{
    return m__classIsSet;
}
void Pipeline::unset_class()
{
    m__classIsSet = false;
}
std::string Pipeline::getOrganization() const
{
    return m_Organization;
}
void Pipeline::setOrganization(std::string const& value)
{
    m_Organization = value;
    m_OrganizationIsSet = true;
}
bool Pipeline::organizationIsSet() const
{
    return m_OrganizationIsSet;
}
void Pipeline::unsetOrganization()
{
    m_OrganizationIsSet = false;
}
std::string Pipeline::getName() const
{
    return m_Name;
}
void Pipeline::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool Pipeline::nameIsSet() const
{
    return m_NameIsSet;
}
void Pipeline::unsetName()
{
    m_NameIsSet = false;
}
std::string Pipeline::getDisplayName() const
{
    return m_DisplayName;
}
void Pipeline::setDisplayName(std::string const& value)
{
    m_DisplayName = value;
    m_DisplayNameIsSet = true;
}
bool Pipeline::displayNameIsSet() const
{
    return m_DisplayNameIsSet;
}
void Pipeline::unsetDisplayName()
{
    m_DisplayNameIsSet = false;
}
std::string Pipeline::getFullName() const
{
    return m_FullName;
}
void Pipeline::setFullName(std::string const& value)
{
    m_FullName = value;
    m_FullNameIsSet = true;
}
bool Pipeline::fullNameIsSet() const
{
    return m_FullNameIsSet;
}
void Pipeline::unsetFullName()
{
    m_FullNameIsSet = false;
}
int32_t Pipeline::getWeatherScore() const
{
    return m_WeatherScore;
}
void Pipeline::setWeatherScore(int32_t const value)
{
    m_WeatherScore = value;
    m_WeatherScoreIsSet = true;
}
bool Pipeline::weatherScoreIsSet() const
{
    return m_WeatherScoreIsSet;
}
void Pipeline::unsetWeatherScore()
{
    m_WeatherScoreIsSet = false;
}
int32_t Pipeline::getEstimatedDurationInMillis() const
{
    return m_EstimatedDurationInMillis;
}
void Pipeline::setEstimatedDurationInMillis(int32_t const value)
{
    m_EstimatedDurationInMillis = value;
    m_EstimatedDurationInMillisIsSet = true;
}
bool Pipeline::estimatedDurationInMillisIsSet() const
{
    return m_EstimatedDurationInMillisIsSet;
}
void Pipeline::unsetEstimatedDurationInMillis()
{
    m_EstimatedDurationInMillisIsSet = false;
}
org::openapitools::server::model::PipelinelatestRun Pipeline::getLatestRun() const
{
    return m_LatestRun;
}
void Pipeline::setLatestRun(org::openapitools::server::model::PipelinelatestRun const& value)
{
    m_LatestRun = value;
    m_LatestRunIsSet = true;
}
bool Pipeline::latestRunIsSet() const
{
    return m_LatestRunIsSet;
}
void Pipeline::unsetLatestRun()
{
    m_LatestRunIsSet = false;
}


} // namespace org::openapitools::server::model

