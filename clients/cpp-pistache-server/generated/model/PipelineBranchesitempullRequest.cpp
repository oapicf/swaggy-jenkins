/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 3.0.2-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PipelineBranchesitempullRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

PipelineBranchesitempullRequest::PipelineBranchesitempullRequest()
{
    m__linksIsSet = false;
    m_Author = "";
    m_AuthorIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_Title = "";
    m_TitleIsSet = false;
    m_Url = "";
    m_UrlIsSet = false;
    m__class = "";
    m__classIsSet = false;
    
}

void PipelineBranchesitempullRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool PipelineBranchesitempullRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool PipelineBranchesitempullRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "PipelineBranchesitempullRequest" : pathPrefix;

                            
    return success;
}

bool PipelineBranchesitempullRequest::operator==(const PipelineBranchesitempullRequest& rhs) const
{
    return
    
    
    
    ((!linksIsSet() && !rhs.linksIsSet()) || (linksIsSet() && rhs.linksIsSet() && getLinks() == rhs.getLinks())) &&
    
    
    ((!authorIsSet() && !rhs.authorIsSet()) || (authorIsSet() && rhs.authorIsSet() && getAuthor() == rhs.getAuthor())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!titleIsSet() && !rhs.titleIsSet()) || (titleIsSet() && rhs.titleIsSet() && getTitle() == rhs.getTitle())) &&
    
    
    ((!urlIsSet() && !rhs.urlIsSet()) || (urlIsSet() && rhs.urlIsSet() && getUrl() == rhs.getUrl())) &&
    
    
    ((!r_classIsSet() && !rhs.r_classIsSet()) || (r_classIsSet() && rhs.r_classIsSet() && getClass() == rhs.getClass()))
    
    ;
}

bool PipelineBranchesitempullRequest::operator!=(const PipelineBranchesitempullRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PipelineBranchesitempullRequest& o)
{
    j = nlohmann::json::object();
    if(o.linksIsSet())
        j["_links"] = o.m__links;
    if(o.authorIsSet())
        j["author"] = o.m_Author;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.titleIsSet())
        j["title"] = o.m_Title;
    if(o.urlIsSet())
        j["url"] = o.m_Url;
    if(o.r_classIsSet())
        j["_class"] = o.m__class;
    
}

void from_json(const nlohmann::json& j, PipelineBranchesitempullRequest& o)
{
    if(j.find("_links") != j.end())
    {
        j.at("_links").get_to(o.m__links);
        o.m__linksIsSet = true;
    } 
    if(j.find("author") != j.end())
    {
        j.at("author").get_to(o.m_Author);
        o.m_AuthorIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("title") != j.end())
    {
        j.at("title").get_to(o.m_Title);
        o.m_TitleIsSet = true;
    } 
    if(j.find("url") != j.end())
    {
        j.at("url").get_to(o.m_Url);
        o.m_UrlIsSet = true;
    } 
    if(j.find("_class") != j.end())
    {
        j.at("_class").get_to(o.m__class);
        o.m__classIsSet = true;
    } 
    
}

org::openapitools::server::model::PipelineBranchesitempullRequestlinks PipelineBranchesitempullRequest::getLinks() const
{
    return m__links;
}
void PipelineBranchesitempullRequest::setLinks(org::openapitools::server::model::PipelineBranchesitempullRequestlinks const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool PipelineBranchesitempullRequest::linksIsSet() const
{
    return m__linksIsSet;
}
void PipelineBranchesitempullRequest::unset_links()
{
    m__linksIsSet = false;
}
std::string PipelineBranchesitempullRequest::getAuthor() const
{
    return m_Author;
}
void PipelineBranchesitempullRequest::setAuthor(std::string const& value)
{
    m_Author = value;
    m_AuthorIsSet = true;
}
bool PipelineBranchesitempullRequest::authorIsSet() const
{
    return m_AuthorIsSet;
}
void PipelineBranchesitempullRequest::unsetAuthor()
{
    m_AuthorIsSet = false;
}
std::string PipelineBranchesitempullRequest::getId() const
{
    return m_Id;
}
void PipelineBranchesitempullRequest::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool PipelineBranchesitempullRequest::idIsSet() const
{
    return m_IdIsSet;
}
void PipelineBranchesitempullRequest::unsetId()
{
    m_IdIsSet = false;
}
std::string PipelineBranchesitempullRequest::getTitle() const
{
    return m_Title;
}
void PipelineBranchesitempullRequest::setTitle(std::string const& value)
{
    m_Title = value;
    m_TitleIsSet = true;
}
bool PipelineBranchesitempullRequest::titleIsSet() const
{
    return m_TitleIsSet;
}
void PipelineBranchesitempullRequest::unsetTitle()
{
    m_TitleIsSet = false;
}
std::string PipelineBranchesitempullRequest::getUrl() const
{
    return m_Url;
}
void PipelineBranchesitempullRequest::setUrl(std::string const& value)
{
    m_Url = value;
    m_UrlIsSet = true;
}
bool PipelineBranchesitempullRequest::urlIsSet() const
{
    return m_UrlIsSet;
}
void PipelineBranchesitempullRequest::unsetUrl()
{
    m_UrlIsSet = false;
}
std::string PipelineBranchesitempullRequest::getClass() const
{
    return m__class;
}
void PipelineBranchesitempullRequest::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool PipelineBranchesitempullRequest::r_classIsSet() const
{
    return m__classIsSet;
}
void PipelineBranchesitempullRequest::unset_class()
{
    m__classIsSet = false;
}


} // namespace org::openapitools::server::model

