/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 3.0.2-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * QueueLeftItem.h
 *
 * 
 */

#ifndef QueueLeftItem_H_
#define QueueLeftItem_H_


#include "FreeStyleBuild.h"
#include <string>
#include "CauseAction.h"
#include "FreeStyleProject.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  QueueLeftItem
{
public:
    QueueLeftItem();
    virtual ~QueueLeftItem() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const QueueLeftItem& rhs) const;
    bool operator!=(const QueueLeftItem& rhs) const;

    /////////////////////////////////////////////
    /// QueueLeftItem members

    /// <summary>
    /// 
    /// </summary>
    std::string getClass() const;
    void setClass(std::string const& value);
    bool r_classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    std::vector<org::openapitools::server::model::CauseAction> getActions() const;
    void setActions(std::vector<org::openapitools::server::model::CauseAction> const& value);
    bool actionsIsSet() const;
    void unsetActions();
    /// <summary>
    /// 
    /// </summary>
    bool isBlocked() const;
    void setBlocked(bool const value);
    bool blockedIsSet() const;
    void unsetBlocked();
    /// <summary>
    /// 
    /// </summary>
    bool isBuildable() const;
    void setBuildable(bool const value);
    bool buildableIsSet() const;
    void unsetBuildable();
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t const value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    int32_t getInQueueSince() const;
    void setInQueueSince(int32_t const value);
    bool inQueueSinceIsSet() const;
    void unsetInQueueSince();
    /// <summary>
    /// 
    /// </summary>
    std::string getParams() const;
    void setParams(std::string const& value);
    bool paramsIsSet() const;
    void unsetParams();
    /// <summary>
    /// 
    /// </summary>
    bool isStuck() const;
    void setStuck(bool const value);
    bool stuckIsSet() const;
    void unsetStuck();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::FreeStyleProject getTask() const;
    void setTask(org::openapitools::server::model::FreeStyleProject const& value);
    bool taskIsSet() const;
    void unsetTask();
    /// <summary>
    /// 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string const& value);
    bool urlIsSet() const;
    void unsetUrl();
    /// <summary>
    /// 
    /// </summary>
    std::string getWhy() const;
    void setWhy(std::string const& value);
    bool whyIsSet() const;
    void unsetWhy();
    /// <summary>
    /// 
    /// </summary>
    bool isCancelled() const;
    void setCancelled(bool const value);
    bool cancelledIsSet() const;
    void unsetCancelled();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::FreeStyleBuild getExecutable() const;
    void setExecutable(org::openapitools::server::model::FreeStyleBuild const& value);
    bool executableIsSet() const;
    void unsetExecutable();

    friend  void to_json(nlohmann::json& j, const QueueLeftItem& o);
    friend  void from_json(const nlohmann::json& j, QueueLeftItem& o);
protected:
    std::string m__class;
    bool m__classIsSet;
    std::vector<org::openapitools::server::model::CauseAction> m_Actions;
    bool m_ActionsIsSet;
    bool m_Blocked;
    bool m_BlockedIsSet;
    bool m_Buildable;
    bool m_BuildableIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    int32_t m_InQueueSince;
    bool m_InQueueSinceIsSet;
    std::string m_Params;
    bool m_ParamsIsSet;
    bool m_Stuck;
    bool m_StuckIsSet;
    org::openapitools::server::model::FreeStyleProject m_Task;
    bool m_TaskIsSet;
    std::string m_Url;
    bool m_UrlIsSet;
    std::string m_Why;
    bool m_WhyIsSet;
    bool m_Cancelled;
    bool m_CancelledIsSet;
    org::openapitools::server::model::FreeStyleBuild m_Executable;
    bool m_ExecutableIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* QueueLeftItem_H_ */
