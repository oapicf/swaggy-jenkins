/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 2.0.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GithubContent.h
 *
 * 
 */

#ifndef GithubContent_H_
#define GithubContent_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  GithubContent
{
public:
    GithubContent();
    virtual ~GithubContent() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GithubContent& rhs) const;
    bool operator!=(const GithubContent& rhs) const;

    /////////////////////////////////////////////
    /// GithubContent members

    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    std::string getSha() const;
    void setSha(std::string const& value);
    bool shaIsSet() const;
    void unsetSha();
    /// <summary>
    /// 
    /// </summary>
    std::string getClass() const;
    void setClass(std::string const& value);
    bool r_classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    std::string getRepo() const;
    void setRepo(std::string const& value);
    bool repoIsSet() const;
    void unsetRepo();
    /// <summary>
    /// 
    /// </summary>
    int32_t getSize() const;
    void setSize(int32_t const value);
    bool sizeIsSet() const;
    void unsetSize();
    /// <summary>
    /// 
    /// </summary>
    std::string getOwner() const;
    void setOwner(std::string const& value);
    bool ownerIsSet() const;
    void unsetOwner();
    /// <summary>
    /// 
    /// </summary>
    std::string getPath() const;
    void setPath(std::string const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    std::string getBase64Data() const;
    void setBase64Data(std::string const& value);
    bool base64DataIsSet() const;
    void unsetBase64Data();

    friend  void to_json(nlohmann::json& j, const GithubContent& o);
    friend  void from_json(const nlohmann::json& j, GithubContent& o);
protected:
    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Sha;
    bool m_ShaIsSet;
    std::string m__class;
    bool m__classIsSet;
    std::string m_Repo;
    bool m_RepoIsSet;
    int32_t m_Size;
    bool m_SizeIsSet;
    std::string m_Owner;
    bool m_OwnerIsSet;
    std::string m_Path;
    bool m_PathIsSet;
    std::string m_Base64Data;
    bool m_Base64DataIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GithubContent_H_ */
