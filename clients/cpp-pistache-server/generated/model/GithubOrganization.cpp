/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 3.0.2-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GithubOrganization.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GithubOrganization::GithubOrganization()
{
    m__class = "";
    m__classIsSet = false;
    m__linksIsSet = false;
    m_JenkinsOrganizationPipeline = false;
    m_JenkinsOrganizationPipelineIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    
}

void GithubOrganization::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GithubOrganization::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GithubOrganization::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GithubOrganization" : pathPrefix;

                    
    return success;
}

bool GithubOrganization::operator==(const GithubOrganization& rhs) const
{
    return
    
    
    
    ((!r_classIsSet() && !rhs.r_classIsSet()) || (r_classIsSet() && rhs.r_classIsSet() && getClass() == rhs.getClass())) &&
    
    
    ((!linksIsSet() && !rhs.linksIsSet()) || (linksIsSet() && rhs.linksIsSet() && getLinks() == rhs.getLinks())) &&
    
    
    ((!jenkinsOrganizationPipelineIsSet() && !rhs.jenkinsOrganizationPipelineIsSet()) || (jenkinsOrganizationPipelineIsSet() && rhs.jenkinsOrganizationPipelineIsSet() && isJenkinsOrganizationPipeline() == rhs.isJenkinsOrganizationPipeline())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName()))
    
    ;
}

bool GithubOrganization::operator!=(const GithubOrganization& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GithubOrganization& o)
{
    j = nlohmann::json::object();
    if(o.r_classIsSet())
        j["_class"] = o.m__class;
    if(o.linksIsSet())
        j["_links"] = o.m__links;
    if(o.jenkinsOrganizationPipelineIsSet())
        j["jenkinsOrganizationPipeline"] = o.m_JenkinsOrganizationPipeline;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    
}

void from_json(const nlohmann::json& j, GithubOrganization& o)
{
    if(j.find("_class") != j.end())
    {
        j.at("_class").get_to(o.m__class);
        o.m__classIsSet = true;
    } 
    if(j.find("_links") != j.end())
    {
        j.at("_links").get_to(o.m__links);
        o.m__linksIsSet = true;
    } 
    if(j.find("jenkinsOrganizationPipeline") != j.end())
    {
        j.at("jenkinsOrganizationPipeline").get_to(o.m_JenkinsOrganizationPipeline);
        o.m_JenkinsOrganizationPipelineIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    
}

std::string GithubOrganization::getClass() const
{
    return m__class;
}
void GithubOrganization::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool GithubOrganization::r_classIsSet() const
{
    return m__classIsSet;
}
void GithubOrganization::unset_class()
{
    m__classIsSet = false;
}
org::openapitools::server::model::GithubOrganizationlinks GithubOrganization::getLinks() const
{
    return m__links;
}
void GithubOrganization::setLinks(org::openapitools::server::model::GithubOrganizationlinks const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool GithubOrganization::linksIsSet() const
{
    return m__linksIsSet;
}
void GithubOrganization::unset_links()
{
    m__linksIsSet = false;
}
bool GithubOrganization::isJenkinsOrganizationPipeline() const
{
    return m_JenkinsOrganizationPipeline;
}
void GithubOrganization::setJenkinsOrganizationPipeline(bool const value)
{
    m_JenkinsOrganizationPipeline = value;
    m_JenkinsOrganizationPipelineIsSet = true;
}
bool GithubOrganization::jenkinsOrganizationPipelineIsSet() const
{
    return m_JenkinsOrganizationPipelineIsSet;
}
void GithubOrganization::unsetJenkinsOrganizationPipeline()
{
    m_JenkinsOrganizationPipelineIsSet = false;
}
std::string GithubOrganization::getName() const
{
    return m_Name;
}
void GithubOrganization::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool GithubOrganization::nameIsSet() const
{
    return m_NameIsSet;
}
void GithubOrganization::unsetName()
{
    m_NameIsSet = false;
}


} // namespace org::openapitools::server::model

