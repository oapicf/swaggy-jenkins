/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* The version of the OpenAPI document: 2.0.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "StringParameterDefinition.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

StringParameterDefinition::StringParameterDefinition()
{
    m__class = "";
    m__classIsSet = false;
    m_DefaultParameterValueIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    m_Type = "";
    m_TypeIsSet = false;
    
}

void StringParameterDefinition::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool StringParameterDefinition::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool StringParameterDefinition::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "StringParameterDefinition" : pathPrefix;

                        
    return success;
}

bool StringParameterDefinition::operator==(const StringParameterDefinition& rhs) const
{
    return
    
    
    
    ((!r_classIsSet() && !rhs.r_classIsSet()) || (r_classIsSet() && rhs.r_classIsSet() && getClass() == rhs.getClass())) &&
    
    
    ((!defaultParameterValueIsSet() && !rhs.defaultParameterValueIsSet()) || (defaultParameterValueIsSet() && rhs.defaultParameterValueIsSet() && getDefaultParameterValue() == rhs.getDefaultParameterValue())) &&
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType()))
    
    ;
}

bool StringParameterDefinition::operator!=(const StringParameterDefinition& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const StringParameterDefinition& o)
{
    j = nlohmann::json::object();
    if(o.r_classIsSet())
        j["_class"] = o.m__class;
    if(o.defaultParameterValueIsSet())
        j["defaultParameterValue"] = o.m_DefaultParameterValue;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    
}

void from_json(const nlohmann::json& j, StringParameterDefinition& o)
{
    if(j.find("_class") != j.end())
    {
        j.at("_class").get_to(o.m__class);
        o.m__classIsSet = true;
    } 
    if(j.find("defaultParameterValue") != j.end())
    {
        j.at("defaultParameterValue").get_to(o.m_DefaultParameterValue);
        o.m_DefaultParameterValueIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    
}

std::string StringParameterDefinition::getClass() const
{
    return m__class;
}
void StringParameterDefinition::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool StringParameterDefinition::r_classIsSet() const
{
    return m__classIsSet;
}
void StringParameterDefinition::unset_class()
{
    m__classIsSet = false;
}
org::openapitools::server::model::StringParameterValue StringParameterDefinition::getDefaultParameterValue() const
{
    return m_DefaultParameterValue;
}
void StringParameterDefinition::setDefaultParameterValue(org::openapitools::server::model::StringParameterValue const& value)
{
    m_DefaultParameterValue = value;
    m_DefaultParameterValueIsSet = true;
}
bool StringParameterDefinition::defaultParameterValueIsSet() const
{
    return m_DefaultParameterValueIsSet;
}
void StringParameterDefinition::unsetDefaultParameterValue()
{
    m_DefaultParameterValueIsSet = false;
}
std::string StringParameterDefinition::getDescription() const
{
    return m_Description;
}
void StringParameterDefinition::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool StringParameterDefinition::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void StringParameterDefinition::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::string StringParameterDefinition::getName() const
{
    return m_Name;
}
void StringParameterDefinition::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool StringParameterDefinition::nameIsSet() const
{
    return m_NameIsSet;
}
void StringParameterDefinition::unsetName()
{
    m_NameIsSet = false;
}
std::string StringParameterDefinition::getType() const
{
    return m_Type;
}
void StringParameterDefinition::setType(std::string const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool StringParameterDefinition::typeIsSet() const
{
    return m_TypeIsSet;
}
void StringParameterDefinition::unsetType()
{
    m_TypeIsSet = false;
}


} // namespace org::openapitools::server::model

