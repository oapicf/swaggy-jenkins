/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PipelineRun
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PipelineRunTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PipelineRun
        //private PipelineRun instance;

        public PipelineRunTests()
        {
            // TODO uncomment below to create an instance of PipelineRun
            //instance = new PipelineRun();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PipelineRun
        /// </summary>
        [Fact]
        public void PipelineRunInstanceTest()
        {
            // TODO uncomment below to test "IsType" PipelineRun
            //Assert.IsType<PipelineRun>(instance);
        }

        /// <summary>
        /// Test the property 'Class'
        /// </summary>
        [Fact]
        public void ClassTest()
        {
            // TODO unit test for the property 'Class'
        }

        /// <summary>
        /// Test the property 'Artifacts'
        /// </summary>
        [Fact]
        public void ArtifactsTest()
        {
            // TODO unit test for the property 'Artifacts'
        }

        /// <summary>
        /// Test the property 'DurationInMillis'
        /// </summary>
        [Fact]
        public void DurationInMillisTest()
        {
            // TODO unit test for the property 'DurationInMillis'
        }

        /// <summary>
        /// Test the property 'EstimatedDurationInMillis'
        /// </summary>
        [Fact]
        public void EstimatedDurationInMillisTest()
        {
            // TODO unit test for the property 'EstimatedDurationInMillis'
        }

        /// <summary>
        /// Test the property 'EnQueueTime'
        /// </summary>
        [Fact]
        public void EnQueueTimeTest()
        {
            // TODO unit test for the property 'EnQueueTime'
        }

        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Fact]
        public void OrganizationTest()
        {
            // TODO unit test for the property 'Organization'
        }

        /// <summary>
        /// Test the property 'Pipeline'
        /// </summary>
        [Fact]
        public void PipelineTest()
        {
            // TODO unit test for the property 'Pipeline'
        }

        /// <summary>
        /// Test the property 'Result'
        /// </summary>
        [Fact]
        public void ResultTest()
        {
            // TODO unit test for the property 'Result'
        }

        /// <summary>
        /// Test the property 'RunSummary'
        /// </summary>
        [Fact]
        public void RunSummaryTest()
        {
            // TODO unit test for the property 'RunSummary'
        }

        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'CommitId'
        /// </summary>
        [Fact]
        public void CommitIdTest()
        {
            // TODO unit test for the property 'CommitId'
        }
    }
}
