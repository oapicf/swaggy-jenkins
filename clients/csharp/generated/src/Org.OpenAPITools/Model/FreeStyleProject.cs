/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// FreeStyleProject
    /// </summary>
    [DataContract(Name = "FreeStyleProject")]
    public partial class FreeStyleProject : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FreeStyleProject" /> class.
        /// </summary>
        /// <param name="varClass">varClass.</param>
        /// <param name="name">name.</param>
        /// <param name="url">url.</param>
        /// <param name="color">color.</param>
        /// <param name="actions">actions.</param>
        /// <param name="description">description.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="displayNameOrNull">displayNameOrNull.</param>
        /// <param name="fullDisplayName">fullDisplayName.</param>
        /// <param name="fullName">fullName.</param>
        /// <param name="buildable">buildable.</param>
        /// <param name="builds">builds.</param>
        /// <param name="firstBuild">firstBuild.</param>
        /// <param name="healthReport">healthReport.</param>
        /// <param name="inQueue">inQueue.</param>
        /// <param name="keepDependencies">keepDependencies.</param>
        /// <param name="lastBuild">lastBuild.</param>
        /// <param name="lastCompletedBuild">lastCompletedBuild.</param>
        /// <param name="lastFailedBuild">lastFailedBuild.</param>
        /// <param name="lastStableBuild">lastStableBuild.</param>
        /// <param name="lastSuccessfulBuild">lastSuccessfulBuild.</param>
        /// <param name="lastUnstableBuild">lastUnstableBuild.</param>
        /// <param name="lastUnsuccessfulBuild">lastUnsuccessfulBuild.</param>
        /// <param name="nextBuildNumber">nextBuildNumber.</param>
        /// <param name="queueItem">queueItem.</param>
        /// <param name="concurrentBuild">concurrentBuild.</param>
        /// <param name="scm">scm.</param>
        public FreeStyleProject(string varClass = default(string), string name = default(string), string url = default(string), string color = default(string), List<FreeStyleProjectactions> actions = default(List<FreeStyleProjectactions>), string description = default(string), string displayName = default(string), string displayNameOrNull = default(string), string fullDisplayName = default(string), string fullName = default(string), bool buildable = default(bool), List<FreeStyleBuild> builds = default(List<FreeStyleBuild>), FreeStyleBuild firstBuild = default(FreeStyleBuild), List<FreeStyleProjecthealthReport> healthReport = default(List<FreeStyleProjecthealthReport>), bool inQueue = default(bool), bool keepDependencies = default(bool), FreeStyleBuild lastBuild = default(FreeStyleBuild), FreeStyleBuild lastCompletedBuild = default(FreeStyleBuild), string lastFailedBuild = default(string), FreeStyleBuild lastStableBuild = default(FreeStyleBuild), FreeStyleBuild lastSuccessfulBuild = default(FreeStyleBuild), string lastUnstableBuild = default(string), string lastUnsuccessfulBuild = default(string), int nextBuildNumber = default(int), string queueItem = default(string), bool concurrentBuild = default(bool), NullSCM scm = default(NullSCM))
        {
            this.VarClass = varClass;
            this.Name = name;
            this.Url = url;
            this.Color = color;
            this.Actions = actions;
            this.Description = description;
            this.DisplayName = displayName;
            this.DisplayNameOrNull = displayNameOrNull;
            this.FullDisplayName = fullDisplayName;
            this.FullName = fullName;
            this.Buildable = buildable;
            this.Builds = builds;
            this.FirstBuild = firstBuild;
            this.HealthReport = healthReport;
            this.InQueue = inQueue;
            this.KeepDependencies = keepDependencies;
            this.LastBuild = lastBuild;
            this.LastCompletedBuild = lastCompletedBuild;
            this.LastFailedBuild = lastFailedBuild;
            this.LastStableBuild = lastStableBuild;
            this.LastSuccessfulBuild = lastSuccessfulBuild;
            this.LastUnstableBuild = lastUnstableBuild;
            this.LastUnsuccessfulBuild = lastUnsuccessfulBuild;
            this.NextBuildNumber = nextBuildNumber;
            this.QueueItem = queueItem;
            this.ConcurrentBuild = concurrentBuild;
            this.Scm = scm;
        }

        /// <summary>
        /// Gets or Sets VarClass
        /// </summary>
        [DataMember(Name = "_class", EmitDefaultValue = false)]
        public string VarClass { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Color
        /// </summary>
        [DataMember(Name = "color", EmitDefaultValue = false)]
        public string Color { get; set; }

        /// <summary>
        /// Gets or Sets Actions
        /// </summary>
        [DataMember(Name = "actions", EmitDefaultValue = false)]
        public List<FreeStyleProjectactions> Actions { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets DisplayNameOrNull
        /// </summary>
        [DataMember(Name = "displayNameOrNull", EmitDefaultValue = false)]
        public string DisplayNameOrNull { get; set; }

        /// <summary>
        /// Gets or Sets FullDisplayName
        /// </summary>
        [DataMember(Name = "fullDisplayName", EmitDefaultValue = false)]
        public string FullDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name = "fullName", EmitDefaultValue = false)]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or Sets Buildable
        /// </summary>
        [DataMember(Name = "buildable", EmitDefaultValue = true)]
        public bool Buildable { get; set; }

        /// <summary>
        /// Gets or Sets Builds
        /// </summary>
        [DataMember(Name = "builds", EmitDefaultValue = false)]
        public List<FreeStyleBuild> Builds { get; set; }

        /// <summary>
        /// Gets or Sets FirstBuild
        /// </summary>
        [DataMember(Name = "firstBuild", EmitDefaultValue = false)]
        public FreeStyleBuild FirstBuild { get; set; }

        /// <summary>
        /// Gets or Sets HealthReport
        /// </summary>
        [DataMember(Name = "healthReport", EmitDefaultValue = false)]
        public List<FreeStyleProjecthealthReport> HealthReport { get; set; }

        /// <summary>
        /// Gets or Sets InQueue
        /// </summary>
        [DataMember(Name = "inQueue", EmitDefaultValue = true)]
        public bool InQueue { get; set; }

        /// <summary>
        /// Gets or Sets KeepDependencies
        /// </summary>
        [DataMember(Name = "keepDependencies", EmitDefaultValue = true)]
        public bool KeepDependencies { get; set; }

        /// <summary>
        /// Gets or Sets LastBuild
        /// </summary>
        [DataMember(Name = "lastBuild", EmitDefaultValue = false)]
        public FreeStyleBuild LastBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastCompletedBuild
        /// </summary>
        [DataMember(Name = "lastCompletedBuild", EmitDefaultValue = false)]
        public FreeStyleBuild LastCompletedBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastFailedBuild
        /// </summary>
        [DataMember(Name = "lastFailedBuild", EmitDefaultValue = false)]
        public string LastFailedBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastStableBuild
        /// </summary>
        [DataMember(Name = "lastStableBuild", EmitDefaultValue = false)]
        public FreeStyleBuild LastStableBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastSuccessfulBuild
        /// </summary>
        [DataMember(Name = "lastSuccessfulBuild", EmitDefaultValue = false)]
        public FreeStyleBuild LastSuccessfulBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastUnstableBuild
        /// </summary>
        [DataMember(Name = "lastUnstableBuild", EmitDefaultValue = false)]
        public string LastUnstableBuild { get; set; }

        /// <summary>
        /// Gets or Sets LastUnsuccessfulBuild
        /// </summary>
        [DataMember(Name = "lastUnsuccessfulBuild", EmitDefaultValue = false)]
        public string LastUnsuccessfulBuild { get; set; }

        /// <summary>
        /// Gets or Sets NextBuildNumber
        /// </summary>
        [DataMember(Name = "nextBuildNumber", EmitDefaultValue = false)]
        public int NextBuildNumber { get; set; }

        /// <summary>
        /// Gets or Sets QueueItem
        /// </summary>
        [DataMember(Name = "queueItem", EmitDefaultValue = false)]
        public string QueueItem { get; set; }

        /// <summary>
        /// Gets or Sets ConcurrentBuild
        /// </summary>
        [DataMember(Name = "concurrentBuild", EmitDefaultValue = true)]
        public bool ConcurrentBuild { get; set; }

        /// <summary>
        /// Gets or Sets Scm
        /// </summary>
        [DataMember(Name = "scm", EmitDefaultValue = false)]
        public NullSCM Scm { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FreeStyleProject {\n");
            sb.Append("  VarClass: ").Append(VarClass).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Color: ").Append(Color).Append("\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  DisplayNameOrNull: ").Append(DisplayNameOrNull).Append("\n");
            sb.Append("  FullDisplayName: ").Append(FullDisplayName).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  Buildable: ").Append(Buildable).Append("\n");
            sb.Append("  Builds: ").Append(Builds).Append("\n");
            sb.Append("  FirstBuild: ").Append(FirstBuild).Append("\n");
            sb.Append("  HealthReport: ").Append(HealthReport).Append("\n");
            sb.Append("  InQueue: ").Append(InQueue).Append("\n");
            sb.Append("  KeepDependencies: ").Append(KeepDependencies).Append("\n");
            sb.Append("  LastBuild: ").Append(LastBuild).Append("\n");
            sb.Append("  LastCompletedBuild: ").Append(LastCompletedBuild).Append("\n");
            sb.Append("  LastFailedBuild: ").Append(LastFailedBuild).Append("\n");
            sb.Append("  LastStableBuild: ").Append(LastStableBuild).Append("\n");
            sb.Append("  LastSuccessfulBuild: ").Append(LastSuccessfulBuild).Append("\n");
            sb.Append("  LastUnstableBuild: ").Append(LastUnstableBuild).Append("\n");
            sb.Append("  LastUnsuccessfulBuild: ").Append(LastUnsuccessfulBuild).Append("\n");
            sb.Append("  NextBuildNumber: ").Append(NextBuildNumber).Append("\n");
            sb.Append("  QueueItem: ").Append(QueueItem).Append("\n");
            sb.Append("  ConcurrentBuild: ").Append(ConcurrentBuild).Append("\n");
            sb.Append("  Scm: ").Append(Scm).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
