/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// HudsonMasterComputerexecutors
    /// </summary>
    [DataContract(Name = "HudsonMasterComputerexecutors")]
    public partial class HudsonMasterComputerexecutors : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HudsonMasterComputerexecutors" /> class.
        /// </summary>
        /// <param name="currentExecutable">currentExecutable.</param>
        /// <param name="idle">idle.</param>
        /// <param name="likelyStuck">likelyStuck.</param>
        /// <param name="number">number.</param>
        /// <param name="progress">progress.</param>
        /// <param name="varClass">varClass.</param>
        public HudsonMasterComputerexecutors(FreeStyleBuild currentExecutable = default(FreeStyleBuild), bool idle = default(bool), bool likelyStuck = default(bool), int number = default(int), int progress = default(int), string varClass = default(string))
        {
            this.CurrentExecutable = currentExecutable;
            this.Idle = idle;
            this.LikelyStuck = likelyStuck;
            this.Number = number;
            this.Progress = progress;
            this.VarClass = varClass;
        }

        /// <summary>
        /// Gets or Sets CurrentExecutable
        /// </summary>
        [DataMember(Name = "currentExecutable", EmitDefaultValue = false)]
        public FreeStyleBuild CurrentExecutable { get; set; }

        /// <summary>
        /// Gets or Sets Idle
        /// </summary>
        [DataMember(Name = "idle", EmitDefaultValue = true)]
        public bool Idle { get; set; }

        /// <summary>
        /// Gets or Sets LikelyStuck
        /// </summary>
        [DataMember(Name = "likelyStuck", EmitDefaultValue = true)]
        public bool LikelyStuck { get; set; }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public int Number { get; set; }

        /// <summary>
        /// Gets or Sets Progress
        /// </summary>
        [DataMember(Name = "progress", EmitDefaultValue = false)]
        public int Progress { get; set; }

        /// <summary>
        /// Gets or Sets VarClass
        /// </summary>
        [DataMember(Name = "_class", EmitDefaultValue = false)]
        public string VarClass { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HudsonMasterComputerexecutors {\n");
            sb.Append("  CurrentExecutable: ").Append(CurrentExecutable).Append("\n");
            sb.Append("  Idle: ").Append(Idle).Append("\n");
            sb.Append("  LikelyStuck: ").Append(LikelyStuck).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Progress: ").Append(Progress).Append("\n");
            sb.Append("  VarClass: ").Append(VarClass).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
