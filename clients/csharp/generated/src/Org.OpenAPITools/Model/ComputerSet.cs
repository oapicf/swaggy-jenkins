/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComputerSet
    /// </summary>
    [DataContract(Name = "ComputerSet")]
    public partial class ComputerSet : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComputerSet" /> class.
        /// </summary>
        /// <param name="varClass">varClass.</param>
        /// <param name="busyExecutors">busyExecutors.</param>
        /// <param name="computer">computer.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="totalExecutors">totalExecutors.</param>
        public ComputerSet(string varClass = default(string), int busyExecutors = default(int), List<HudsonMasterComputer> computer = default(List<HudsonMasterComputer>), string displayName = default(string), int totalExecutors = default(int))
        {
            this.VarClass = varClass;
            this.BusyExecutors = busyExecutors;
            this.Computer = computer;
            this.DisplayName = displayName;
            this.TotalExecutors = totalExecutors;
        }

        /// <summary>
        /// Gets or Sets VarClass
        /// </summary>
        [DataMember(Name = "_class", EmitDefaultValue = false)]
        public string VarClass { get; set; }

        /// <summary>
        /// Gets or Sets BusyExecutors
        /// </summary>
        [DataMember(Name = "busyExecutors", EmitDefaultValue = false)]
        public int BusyExecutors { get; set; }

        /// <summary>
        /// Gets or Sets Computer
        /// </summary>
        [DataMember(Name = "computer", EmitDefaultValue = false)]
        public List<HudsonMasterComputer> Computer { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets TotalExecutors
        /// </summary>
        [DataMember(Name = "totalExecutors", EmitDefaultValue = false)]
        public int TotalExecutors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComputerSet {\n");
            sb.Append("  VarClass: ").Append(VarClass).Append("\n");
            sb.Append("  BusyExecutors: ").Append(BusyExecutors).Append("\n");
            sb.Append("  Computer: ").Append(Computer).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  TotalExecutors: ").Append(TotalExecutors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
