/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// FreeStyleBuild
    /// </summary>
    [DataContract(Name = "FreeStyleBuild")]
    public partial class FreeStyleBuild : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FreeStyleBuild" /> class.
        /// </summary>
        /// <param name="varClass">varClass.</param>
        /// <param name="number">number.</param>
        /// <param name="url">url.</param>
        /// <param name="actions">actions.</param>
        /// <param name="building">building.</param>
        /// <param name="description">description.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="duration">duration.</param>
        /// <param name="estimatedDuration">estimatedDuration.</param>
        /// <param name="executor">executor.</param>
        /// <param name="fullDisplayName">fullDisplayName.</param>
        /// <param name="id">id.</param>
        /// <param name="keepLog">keepLog.</param>
        /// <param name="queueId">queueId.</param>
        /// <param name="result">result.</param>
        /// <param name="timestamp">timestamp.</param>
        /// <param name="builtOn">builtOn.</param>
        /// <param name="changeSet">changeSet.</param>
        public FreeStyleBuild(string varClass = default(string), int number = default(int), string url = default(string), List<CauseAction> actions = default(List<CauseAction>), bool building = default(bool), string description = default(string), string displayName = default(string), int duration = default(int), int estimatedDuration = default(int), string executor = default(string), string fullDisplayName = default(string), string id = default(string), bool keepLog = default(bool), int queueId = default(int), string result = default(string), int timestamp = default(int), string builtOn = default(string), EmptyChangeLogSet changeSet = default(EmptyChangeLogSet))
        {
            this.VarClass = varClass;
            this.Number = number;
            this.Url = url;
            this.Actions = actions;
            this.Building = building;
            this.Description = description;
            this.DisplayName = displayName;
            this.Duration = duration;
            this.EstimatedDuration = estimatedDuration;
            this.Executor = executor;
            this.FullDisplayName = fullDisplayName;
            this.Id = id;
            this.KeepLog = keepLog;
            this.QueueId = queueId;
            this.Result = result;
            this.Timestamp = timestamp;
            this.BuiltOn = builtOn;
            this.ChangeSet = changeSet;
        }

        /// <summary>
        /// Gets or Sets VarClass
        /// </summary>
        [DataMember(Name = "_class", EmitDefaultValue = false)]
        public string VarClass { get; set; }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public int Number { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Actions
        /// </summary>
        [DataMember(Name = "actions", EmitDefaultValue = false)]
        public List<CauseAction> Actions { get; set; }

        /// <summary>
        /// Gets or Sets Building
        /// </summary>
        [DataMember(Name = "building", EmitDefaultValue = true)]
        public bool Building { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public int Duration { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedDuration
        /// </summary>
        [DataMember(Name = "estimatedDuration", EmitDefaultValue = false)]
        public int EstimatedDuration { get; set; }

        /// <summary>
        /// Gets or Sets Executor
        /// </summary>
        [DataMember(Name = "executor", EmitDefaultValue = false)]
        public string Executor { get; set; }

        /// <summary>
        /// Gets or Sets FullDisplayName
        /// </summary>
        [DataMember(Name = "fullDisplayName", EmitDefaultValue = false)]
        public string FullDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets KeepLog
        /// </summary>
        [DataMember(Name = "keepLog", EmitDefaultValue = true)]
        public bool KeepLog { get; set; }

        /// <summary>
        /// Gets or Sets QueueId
        /// </summary>
        [DataMember(Name = "queueId", EmitDefaultValue = false)]
        public int QueueId { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "result", EmitDefaultValue = false)]
        public string Result { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public int Timestamp { get; set; }

        /// <summary>
        /// Gets or Sets BuiltOn
        /// </summary>
        [DataMember(Name = "builtOn", EmitDefaultValue = false)]
        public string BuiltOn { get; set; }

        /// <summary>
        /// Gets or Sets ChangeSet
        /// </summary>
        [DataMember(Name = "changeSet", EmitDefaultValue = false)]
        public EmptyChangeLogSet ChangeSet { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FreeStyleBuild {\n");
            sb.Append("  VarClass: ").Append(VarClass).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  Building: ").Append(Building).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  EstimatedDuration: ").Append(EstimatedDuration).Append("\n");
            sb.Append("  Executor: ").Append(Executor).Append("\n");
            sb.Append("  FullDisplayName: ").Append(FullDisplayName).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  KeepLog: ").Append(KeepLog).Append("\n");
            sb.Append("  QueueId: ").Append(QueueId).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  BuiltOn: ").Append(BuiltOn).Append("\n");
            sb.Append("  ChangeSet: ").Append(ChangeSet).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
