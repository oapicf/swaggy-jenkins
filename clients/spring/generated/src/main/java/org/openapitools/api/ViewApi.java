/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.ListView;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-04-27T08:11:13.649076561Z[Etc/UTC]", comments = "Generator version: 7.12.0")
@Validated
@Tag(name = "remoteAccess", description = "the remoteAccess API")
public interface ViewApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /view/{name}/api/json
     * Retrieve view details
     *
     * @param name Name of the view (required)
     * @return Successfully retrieved view details (status code 200)
     *         or Authentication failed - incorrect username and/or password (status code 401)
     *         or Jenkins requires authentication - please set username and password (status code 403)
     *         or View cannot be found on Jenkins instance (status code 404)
     */
    @Operation(
        operationId = "getView",
        description = "Retrieve view details",
        tags = { "remoteAccess" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved view details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ListView.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication failed - incorrect username and/or password"),
            @ApiResponse(responseCode = "403", description = "Jenkins requires authentication - please set username and password"),
            @ApiResponse(responseCode = "404", description = "View cannot be found on Jenkins instance")
        },
        security = {
            @SecurityRequirement(name = "jenkins_auth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/view/{name}/api/json",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ListView> getView(
        @Parameter(name = "name", description = "Name of the view", required = true, in = ParameterIn.PATH) @PathVariable("name") String name
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"jobs\" : [ { \"color\" : \"color\", \"displayName\" : \"displayName\", \"lastSuccessfulBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"lastUnstableBuild\" : \"lastUnstableBuild\", \"queueItem\" : \"queueItem\", \"buildable\" : true, \"firstBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"lastFailedBuild\" : \"lastFailedBuild\", \"lastBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"nextBuildNumber\" : 9, \"builds\" : [ { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 } ], \"scm\" : { \"_class\" : \"_class\" }, \"keepDependencies\" : true, \"displayNameOrNull\" : \"displayNameOrNull\", \"inQueue\" : true, \"lastCompletedBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"fullName\" : \"fullName\", \"healthReport\" : [ { \"score\" : 7, \"description\" : \"description\", \"iconClassName\" : \"iconClassName\", \"iconUrl\" : \"iconUrl\", \"_class\" : \"_class\" }, { \"score\" : 7, \"description\" : \"description\", \"iconClassName\" : \"iconClassName\", \"iconUrl\" : \"iconUrl\", \"_class\" : \"_class\" } ], \"lastStableBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"lastUnsuccessfulBuild\" : \"lastUnsuccessfulBuild\", \"url\" : \"url\", \"concurrentBuild\" : true, \"name\" : \"name\", \"_class\" : \"_class\", \"actions\" : [ { \"_class\" : \"_class\" }, { \"_class\" : \"_class\" } ] }, { \"color\" : \"color\", \"displayName\" : \"displayName\", \"lastSuccessfulBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"lastUnstableBuild\" : \"lastUnstableBuild\", \"queueItem\" : \"queueItem\", \"buildable\" : true, \"firstBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"lastFailedBuild\" : \"lastFailedBuild\", \"lastBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"nextBuildNumber\" : 9, \"builds\" : [ { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 } ], \"scm\" : { \"_class\" : \"_class\" }, \"keepDependencies\" : true, \"displayNameOrNull\" : \"displayNameOrNull\", \"inQueue\" : true, \"lastCompletedBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"fullName\" : \"fullName\", \"healthReport\" : [ { \"score\" : 7, \"description\" : \"description\", \"iconClassName\" : \"iconClassName\", \"iconUrl\" : \"iconUrl\", \"_class\" : \"_class\" }, { \"score\" : 7, \"description\" : \"description\", \"iconClassName\" : \"iconClassName\", \"iconUrl\" : \"iconUrl\", \"_class\" : \"_class\" } ], \"lastStableBuild\" : { \"queueId\" : 5, \"displayName\" : \"displayName\", \"keepLog\" : true, \"description\" : \"description\", \"fullDisplayName\" : \"fullDisplayName\", \"estimatedDuration\" : 5, \"url\" : \"url\", \"building\" : true, \"changeSet\" : { \"kind\" : \"kind\", \"_class\" : \"_class\" }, \"duration\" : 1, \"result\" : \"result\", \"number\" : 6, \"executor\" : \"executor\", \"builtOn\" : \"builtOn\", \"_class\" : \"_class\", \"id\" : \"id\", \"actions\" : [ { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" }, { \"causes\" : [ { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" }, { \"_class\" : \"_class\", \"shortDescription\" : \"shortDescription\", \"userName\" : \"userName\", \"userId\" : \"userId\" } ], \"_class\" : \"_class\" } ], \"timestamp\" : 2 }, \"lastUnsuccessfulBuild\" : \"lastUnsuccessfulBuild\", \"url\" : \"url\", \"concurrentBuild\" : true, \"name\" : \"name\", \"_class\" : \"_class\", \"actions\" : [ { \"_class\" : \"_class\" }, { \"_class\" : \"_class\" } ] } ], \"name\" : \"name\", \"description\" : \"description\", \"_class\" : \"_class\", \"url\" : \"url\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /view/{name}/config.xml
     * Retrieve view configuration
     *
     * @param name Name of the view (required)
     * @return Successfully retrieved view configuration in config.xml format (status code 200)
     *         or Authentication failed - incorrect username and/or password (status code 401)
     *         or Jenkins requires authentication - please set username and password (status code 403)
     *         or View cannot be found on Jenkins instance (status code 404)
     */
    @Operation(
        operationId = "getViewConfig",
        description = "Retrieve view configuration",
        tags = { "remoteAccess" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved view configuration in config.xml format", content = {
                @Content(mediaType = "text/xml", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication failed - incorrect username and/or password"),
            @ApiResponse(responseCode = "403", description = "Jenkins requires authentication - please set username and password"),
            @ApiResponse(responseCode = "404", description = "View cannot be found on Jenkins instance")
        },
        security = {
            @SecurityRequirement(name = "jenkins_auth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/view/{name}/config.xml",
        produces = { "text/xml" }
    )
    
    default ResponseEntity<String> getViewConfig(
        @Parameter(name = "name", description = "Name of the view", required = true, in = ParameterIn.PATH) @PathVariable("name") String name
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /view/{name}/config.xml
     * Update view configuration
     *
     * @param name Name of the view (required)
     * @param body View configuration in config.xml format (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @return Successfully updated view configuration (status code 200)
     *         or An error has occurred - error message is embedded inside the HTML response (status code 400)
     *         or Authentication failed - incorrect username and/or password (status code 401)
     *         or Jenkins requires authentication - please set username and password (status code 403)
     *         or View cannot be found on Jenkins instance (status code 404)
     */
    @Operation(
        operationId = "postViewConfig",
        description = "Update view configuration",
        tags = { "remoteAccess" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully updated view configuration"),
            @ApiResponse(responseCode = "400", description = "An error has occurred - error message is embedded inside the HTML response", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication failed - incorrect username and/or password"),
            @ApiResponse(responseCode = "403", description = "Jenkins requires authentication - please set username and password"),
            @ApiResponse(responseCode = "404", description = "View cannot be found on Jenkins instance")
        },
        security = {
            @SecurityRequirement(name = "jenkins_auth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/view/{name}/config.xml",
        produces = { "*/*" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> postViewConfig(
        @Parameter(name = "name", description = "Name of the view", required = true, in = ParameterIn.PATH) @PathVariable("name") String name,
        @Parameter(name = "body", description = "View configuration in config.xml format", required = true) @Valid @RequestBody String body,
        @Parameter(name = "Jenkins-Crumb", description = "CSRF protection token", in = ParameterIn.HEADER) @RequestHeader(value = "Jenkins-Crumb", required = false) String jenkinsCrumb
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
