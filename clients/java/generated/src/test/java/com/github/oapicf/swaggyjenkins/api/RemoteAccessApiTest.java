/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.swaggyjenkins.api;

import com.github.oapicf.swaggyjenkins.ApiException;
import com.github.oapicf.swaggyjenkins.model.ComputerSet;
import com.github.oapicf.swaggyjenkins.model.FreeStyleBuild;
import com.github.oapicf.swaggyjenkins.model.FreeStyleProject;
import com.github.oapicf.swaggyjenkins.model.Hudson;
import com.github.oapicf.swaggyjenkins.model.ListView;
import com.github.oapicf.swaggyjenkins.model.Queue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RemoteAccessApi
 */
@Disabled
public class RemoteAccessApiTest {

    private final RemoteAccessApi api = new RemoteAccessApi();

    /**
     * Retrieve computer details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComputerTest() throws ApiException {
        Integer depth = null;
        ComputerSet response = api.getComputer(depth);
        // TODO: test validations
    }

    /**
     * Retrieve Jenkins details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJenkinsTest() throws ApiException {
        Hudson response = api.getJenkins();
        // TODO: test validations
    }

    /**
     * Retrieve job details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String name = null;
        FreeStyleProject response = api.getJob(name);
        // TODO: test validations
    }

    /**
     * Retrieve job configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobConfigTest() throws ApiException {
        String name = null;
        String response = api.getJobConfig(name);
        // TODO: test validations
    }

    /**
     * Retrieve job&#39;s last build details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobLastBuildTest() throws ApiException {
        String name = null;
        FreeStyleBuild response = api.getJobLastBuild(name);
        // TODO: test validations
    }

    /**
     * Retrieve job&#39;s build progressive text output
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobProgressiveTextTest() throws ApiException {
        String name = null;
        String number = null;
        String start = null;
        api.getJobProgressiveText(name, number, start);
        // TODO: test validations
    }

    /**
     * Retrieve queue details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQueueTest() throws ApiException {
        Queue response = api.getQueue();
        // TODO: test validations
    }

    /**
     * Retrieve queued item details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQueueItemTest() throws ApiException {
        String number = null;
        Queue response = api.getQueueItem(number);
        // TODO: test validations
    }

    /**
     * Retrieve view details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getViewTest() throws ApiException {
        String name = null;
        ListView response = api.getView(name);
        // TODO: test validations
    }

    /**
     * Retrieve view configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getViewConfigTest() throws ApiException {
        String name = null;
        String response = api.getViewConfig(name);
        // TODO: test validations
    }

    /**
     * Retrieve Jenkins headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void headJenkinsTest() throws ApiException {
        api.headJenkins();
        // TODO: test validations
    }

    /**
     * Create a new job using job configuration, or copied from an existing job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCreateItemTest() throws ApiException {
        String name = null;
        String from = null;
        String mode = null;
        String jenkinsCrumb = null;
        String contentType = null;
        String body = null;
        api.postCreateItem(name, from, mode, jenkinsCrumb, contentType, body);
        // TODO: test validations
    }

    /**
     * Create a new view using view configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCreateViewTest() throws ApiException {
        String name = null;
        String jenkinsCrumb = null;
        String contentType = null;
        String body = null;
        api.postCreateView(name, jenkinsCrumb, contentType, body);
        // TODO: test validations
    }

    /**
     * Build a job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobBuildTest() throws ApiException {
        String name = null;
        String json = null;
        String token = null;
        String jenkinsCrumb = null;
        api.postJobBuild(name, json, token, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Update job configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobConfigTest() throws ApiException {
        String name = null;
        String body = null;
        String jenkinsCrumb = null;
        api.postJobConfig(name, body, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Delete a job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobDeleteTest() throws ApiException {
        String name = null;
        String jenkinsCrumb = null;
        api.postJobDelete(name, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Disable a job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobDisableTest() throws ApiException {
        String name = null;
        String jenkinsCrumb = null;
        api.postJobDisable(name, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Enable a job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobEnableTest() throws ApiException {
        String name = null;
        String jenkinsCrumb = null;
        api.postJobEnable(name, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Stop a job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postJobLastBuildStopTest() throws ApiException {
        String name = null;
        String jenkinsCrumb = null;
        api.postJobLastBuildStop(name, jenkinsCrumb);
        // TODO: test validations
    }

    /**
     * Update view configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postViewConfigTest() throws ApiException {
        String name = null;
        String body = null;
        String jenkinsCrumb = null;
        api.postViewConfig(name, body, jenkinsCrumb);
        // TODO: test validations
    }

}
