/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.swaggyjenkins.model;

import java.util.Objects;
import com.github.oapicf.swaggyjenkins.model.CauseAction;
import com.github.oapicf.swaggyjenkins.model.EmptyChangeLogSet;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.swaggyjenkins.JSON;

/**
 * FreeStyleBuild
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-27T08:09:10.220672823Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class FreeStyleBuild {
  public static final String SERIALIZED_NAME_PROPERTY_CLASS = "_class";
  @SerializedName(SERIALIZED_NAME_PROPERTY_CLASS)
  @javax.annotation.Nullable
  private String propertyClass;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  @javax.annotation.Nullable
  private Integer number;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nullable
  private String url;

  public static final String SERIALIZED_NAME_ACTIONS = "actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  @javax.annotation.Nullable
  private List<CauseAction> actions = new ArrayList<>();

  public static final String SERIALIZED_NAME_BUILDING = "building";
  @SerializedName(SERIALIZED_NAME_BUILDING)
  @javax.annotation.Nullable
  private Boolean building;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String displayName;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  @javax.annotation.Nullable
  private Integer duration;

  public static final String SERIALIZED_NAME_ESTIMATED_DURATION = "estimatedDuration";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_DURATION)
  @javax.annotation.Nullable
  private Integer estimatedDuration;

  public static final String SERIALIZED_NAME_EXECUTOR = "executor";
  @SerializedName(SERIALIZED_NAME_EXECUTOR)
  @javax.annotation.Nullable
  private String executor;

  public static final String SERIALIZED_NAME_FULL_DISPLAY_NAME = "fullDisplayName";
  @SerializedName(SERIALIZED_NAME_FULL_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String fullDisplayName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_KEEP_LOG = "keepLog";
  @SerializedName(SERIALIZED_NAME_KEEP_LOG)
  @javax.annotation.Nullable
  private Boolean keepLog;

  public static final String SERIALIZED_NAME_QUEUE_ID = "queueId";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  @javax.annotation.Nullable
  private Integer queueId;

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  @javax.annotation.Nullable
  private String result;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nullable
  private Integer timestamp;

  public static final String SERIALIZED_NAME_BUILT_ON = "builtOn";
  @SerializedName(SERIALIZED_NAME_BUILT_ON)
  @javax.annotation.Nullable
  private String builtOn;

  public static final String SERIALIZED_NAME_CHANGE_SET = "changeSet";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET)
  @javax.annotation.Nullable
  private EmptyChangeLogSet changeSet;

  public FreeStyleBuild() {
  }

  public FreeStyleBuild propertyClass(@javax.annotation.Nullable String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

  /**
   * Get propertyClass
   * @return propertyClass
   */
  @javax.annotation.Nullable
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(@javax.annotation.Nullable String propertyClass) {
    this.propertyClass = propertyClass;
  }


  public FreeStyleBuild number(@javax.annotation.Nullable Integer number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public Integer getNumber() {
    return number;
  }

  public void setNumber(@javax.annotation.Nullable Integer number) {
    this.number = number;
  }


  public FreeStyleBuild url(@javax.annotation.Nullable String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nullable String url) {
    this.url = url;
  }


  public FreeStyleBuild actions(@javax.annotation.Nullable List<CauseAction> actions) {
    this.actions = actions;
    return this;
  }

  public FreeStyleBuild addActionsItem(CauseAction actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

  /**
   * Get actions
   * @return actions
   */
  @javax.annotation.Nullable
  public List<CauseAction> getActions() {
    return actions;
  }

  public void setActions(@javax.annotation.Nullable List<CauseAction> actions) {
    this.actions = actions;
  }


  public FreeStyleBuild building(@javax.annotation.Nullable Boolean building) {
    this.building = building;
    return this;
  }

  /**
   * Get building
   * @return building
   */
  @javax.annotation.Nullable
  public Boolean getBuilding() {
    return building;
  }

  public void setBuilding(@javax.annotation.Nullable Boolean building) {
    this.building = building;
  }


  public FreeStyleBuild description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public FreeStyleBuild displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public FreeStyleBuild duration(@javax.annotation.Nullable Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(@javax.annotation.Nullable Integer duration) {
    this.duration = duration;
  }


  public FreeStyleBuild estimatedDuration(@javax.annotation.Nullable Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
    return this;
  }

  /**
   * Get estimatedDuration
   * @return estimatedDuration
   */
  @javax.annotation.Nullable
  public Integer getEstimatedDuration() {
    return estimatedDuration;
  }

  public void setEstimatedDuration(@javax.annotation.Nullable Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
  }


  public FreeStyleBuild executor(@javax.annotation.Nullable String executor) {
    this.executor = executor;
    return this;
  }

  /**
   * Get executor
   * @return executor
   */
  @javax.annotation.Nullable
  public String getExecutor() {
    return executor;
  }

  public void setExecutor(@javax.annotation.Nullable String executor) {
    this.executor = executor;
  }


  public FreeStyleBuild fullDisplayName(@javax.annotation.Nullable String fullDisplayName) {
    this.fullDisplayName = fullDisplayName;
    return this;
  }

  /**
   * Get fullDisplayName
   * @return fullDisplayName
   */
  @javax.annotation.Nullable
  public String getFullDisplayName() {
    return fullDisplayName;
  }

  public void setFullDisplayName(@javax.annotation.Nullable String fullDisplayName) {
    this.fullDisplayName = fullDisplayName;
  }


  public FreeStyleBuild id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public FreeStyleBuild keepLog(@javax.annotation.Nullable Boolean keepLog) {
    this.keepLog = keepLog;
    return this;
  }

  /**
   * Get keepLog
   * @return keepLog
   */
  @javax.annotation.Nullable
  public Boolean getKeepLog() {
    return keepLog;
  }

  public void setKeepLog(@javax.annotation.Nullable Boolean keepLog) {
    this.keepLog = keepLog;
  }


  public FreeStyleBuild queueId(@javax.annotation.Nullable Integer queueId) {
    this.queueId = queueId;
    return this;
  }

  /**
   * Get queueId
   * @return queueId
   */
  @javax.annotation.Nullable
  public Integer getQueueId() {
    return queueId;
  }

  public void setQueueId(@javax.annotation.Nullable Integer queueId) {
    this.queueId = queueId;
  }


  public FreeStyleBuild result(@javax.annotation.Nullable String result) {
    this.result = result;
    return this;
  }

  /**
   * Get result
   * @return result
   */
  @javax.annotation.Nullable
  public String getResult() {
    return result;
  }

  public void setResult(@javax.annotation.Nullable String result) {
    this.result = result;
  }


  public FreeStyleBuild timestamp(@javax.annotation.Nullable Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable Integer timestamp) {
    this.timestamp = timestamp;
  }


  public FreeStyleBuild builtOn(@javax.annotation.Nullable String builtOn) {
    this.builtOn = builtOn;
    return this;
  }

  /**
   * Get builtOn
   * @return builtOn
   */
  @javax.annotation.Nullable
  public String getBuiltOn() {
    return builtOn;
  }

  public void setBuiltOn(@javax.annotation.Nullable String builtOn) {
    this.builtOn = builtOn;
  }


  public FreeStyleBuild changeSet(@javax.annotation.Nullable EmptyChangeLogSet changeSet) {
    this.changeSet = changeSet;
    return this;
  }

  /**
   * Get changeSet
   * @return changeSet
   */
  @javax.annotation.Nullable
  public EmptyChangeLogSet getChangeSet() {
    return changeSet;
  }

  public void setChangeSet(@javax.annotation.Nullable EmptyChangeLogSet changeSet) {
    this.changeSet = changeSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreeStyleBuild freeStyleBuild = (FreeStyleBuild) o;
    return Objects.equals(this.propertyClass, freeStyleBuild.propertyClass) &&
        Objects.equals(this.number, freeStyleBuild.number) &&
        Objects.equals(this.url, freeStyleBuild.url) &&
        Objects.equals(this.actions, freeStyleBuild.actions) &&
        Objects.equals(this.building, freeStyleBuild.building) &&
        Objects.equals(this.description, freeStyleBuild.description) &&
        Objects.equals(this.displayName, freeStyleBuild.displayName) &&
        Objects.equals(this.duration, freeStyleBuild.duration) &&
        Objects.equals(this.estimatedDuration, freeStyleBuild.estimatedDuration) &&
        Objects.equals(this.executor, freeStyleBuild.executor) &&
        Objects.equals(this.fullDisplayName, freeStyleBuild.fullDisplayName) &&
        Objects.equals(this.id, freeStyleBuild.id) &&
        Objects.equals(this.keepLog, freeStyleBuild.keepLog) &&
        Objects.equals(this.queueId, freeStyleBuild.queueId) &&
        Objects.equals(this.result, freeStyleBuild.result) &&
        Objects.equals(this.timestamp, freeStyleBuild.timestamp) &&
        Objects.equals(this.builtOn, freeStyleBuild.builtOn) &&
        Objects.equals(this.changeSet, freeStyleBuild.changeSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyClass, number, url, actions, building, description, displayName, duration, estimatedDuration, executor, fullDisplayName, id, keepLog, queueId, result, timestamp, builtOn, changeSet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreeStyleBuild {\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    building: ").append(toIndentedString(building)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    estimatedDuration: ").append(toIndentedString(estimatedDuration)).append("\n");
    sb.append("    executor: ").append(toIndentedString(executor)).append("\n");
    sb.append("    fullDisplayName: ").append(toIndentedString(fullDisplayName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    keepLog: ").append(toIndentedString(keepLog)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    builtOn: ").append(toIndentedString(builtOn)).append("\n");
    sb.append("    changeSet: ").append(toIndentedString(changeSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_class");
    openapiFields.add("number");
    openapiFields.add("url");
    openapiFields.add("actions");
    openapiFields.add("building");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("duration");
    openapiFields.add("estimatedDuration");
    openapiFields.add("executor");
    openapiFields.add("fullDisplayName");
    openapiFields.add("id");
    openapiFields.add("keepLog");
    openapiFields.add("queueId");
    openapiFields.add("result");
    openapiFields.add("timestamp");
    openapiFields.add("builtOn");
    openapiFields.add("changeSet");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FreeStyleBuild
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FreeStyleBuild.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FreeStyleBuild is not found in the empty JSON string", FreeStyleBuild.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FreeStyleBuild.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FreeStyleBuild` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("_class") != null && !jsonObj.get("_class").isJsonNull()) && !jsonObj.get("_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_class").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (jsonObj.get("actions") != null && !jsonObj.get("actions").isJsonNull()) {
        JsonArray jsonArrayactions = jsonObj.getAsJsonArray("actions");
        if (jsonArrayactions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("actions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `actions` to be an array in the JSON string but got `%s`", jsonObj.get("actions").toString()));
          }

          // validate the optional field `actions` (array)
          for (int i = 0; i < jsonArrayactions.size(); i++) {
            CauseAction.validateJsonElement(jsonArrayactions.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("executor") != null && !jsonObj.get("executor").isJsonNull()) && !jsonObj.get("executor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executor").toString()));
      }
      if ((jsonObj.get("fullDisplayName") != null && !jsonObj.get("fullDisplayName").isJsonNull()) && !jsonObj.get("fullDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullDisplayName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("result") != null && !jsonObj.get("result").isJsonNull()) && !jsonObj.get("result").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `result` to be a primitive type in the JSON string but got `%s`", jsonObj.get("result").toString()));
      }
      if ((jsonObj.get("builtOn") != null && !jsonObj.get("builtOn").isJsonNull()) && !jsonObj.get("builtOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `builtOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("builtOn").toString()));
      }
      // validate the optional field `changeSet`
      if (jsonObj.get("changeSet") != null && !jsonObj.get("changeSet").isJsonNull()) {
        EmptyChangeLogSet.validateJsonElement(jsonObj.get("changeSet"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FreeStyleBuild.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FreeStyleBuild' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FreeStyleBuild> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FreeStyleBuild.class));

       return (TypeAdapter<T>) new TypeAdapter<FreeStyleBuild>() {
           @Override
           public void write(JsonWriter out, FreeStyleBuild value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FreeStyleBuild read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FreeStyleBuild given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FreeStyleBuild
   * @throws IOException if the JSON string is invalid with respect to FreeStyleBuild
   */
  public static FreeStyleBuild fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FreeStyleBuild.class);
  }

  /**
   * Convert an instance of FreeStyleBuild to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

