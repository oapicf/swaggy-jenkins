note
 description:"[
		Swaggy Jenkins
 		Jenkins API clients generated from Swagger / Open API specification
  		The version of the OpenAPI document: 2.0.1-pre.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class HUDSON




feature --Access

    var_class: detachable STRING_32
      
    assigned_labels: detachable LIST [HUDSONASSIGNED_LABELS]
      
    mode: detachable STRING_32
      
    node_description: detachable STRING_32
      
    node_name: detachable STRING_32
      
    num_executors: INTEGER_32
      
    description: detachable STRING_32
      
    jobs: detachable LIST [FREE_STYLE_PROJECT]
      
    primary_view: detachable ALL_VIEW
      
    quieting_down: BOOLEAN
      
    slave_agent_port: INTEGER_32
      
    unlabeled_load: detachable UNLABELED_LOAD_STATISTICS
      
    use_crumbs: BOOLEAN
      
    use_security: BOOLEAN
      
    views: detachable LIST [ALL_VIEW]
      

feature -- Change Element

    set_var_class (a_name: like var_class)
        -- Set 'var_class' with 'a_name'.
      do
        var_class := a_name
      ensure
        var_class_set: var_class = a_name
      end

    set_assigned_labels (a_name: like assigned_labels)
        -- Set 'assigned_labels' with 'a_name'.
      do
        assigned_labels := a_name
      ensure
        assigned_labels_set: assigned_labels = a_name
      end

    set_mode (a_name: like mode)
        -- Set 'mode' with 'a_name'.
      do
        mode := a_name
      ensure
        mode_set: mode = a_name
      end

    set_node_description (a_name: like node_description)
        -- Set 'node_description' with 'a_name'.
      do
        node_description := a_name
      ensure
        node_description_set: node_description = a_name
      end

    set_node_name (a_name: like node_name)
        -- Set 'node_name' with 'a_name'.
      do
        node_name := a_name
      ensure
        node_name_set: node_name = a_name
      end

    set_num_executors (a_name: like num_executors)
        -- Set 'num_executors' with 'a_name'.
      do
        num_executors := a_name
      ensure
        num_executors_set: num_executors = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_jobs (a_name: like jobs)
        -- Set 'jobs' with 'a_name'.
      do
        jobs := a_name
      ensure
        jobs_set: jobs = a_name
      end

    set_primary_view (a_name: like primary_view)
        -- Set 'primary_view' with 'a_name'.
      do
        primary_view := a_name
      ensure
        primary_view_set: primary_view = a_name
      end

    set_quieting_down (a_name: like quieting_down)
        -- Set 'quieting_down' with 'a_name'.
      do
        quieting_down := a_name
      ensure
        quieting_down_set: quieting_down = a_name
      end

    set_slave_agent_port (a_name: like slave_agent_port)
        -- Set 'slave_agent_port' with 'a_name'.
      do
        slave_agent_port := a_name
      ensure
        slave_agent_port_set: slave_agent_port = a_name
      end

    set_unlabeled_load (a_name: like unlabeled_load)
        -- Set 'unlabeled_load' with 'a_name'.
      do
        unlabeled_load := a_name
      ensure
        unlabeled_load_set: unlabeled_load = a_name
      end

    set_use_crumbs (a_name: like use_crumbs)
        -- Set 'use_crumbs' with 'a_name'.
      do
        use_crumbs := a_name
      ensure
        use_crumbs_set: use_crumbs = a_name
      end

    set_use_security (a_name: like use_security)
        -- Set 'use_security' with 'a_name'.
      do
        use_security := a_name
      ensure
        use_security_set: use_security = a_name
      end

    set_views (a_name: like views)
        -- Set 'views' with 'a_name'.
      do
        views := a_name
      ensure
        views_set: views = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass HUDSON%N")
        if attached var_class as l_var_class then
          Result.append ("%Nvar_class:")
          Result.append (l_var_class.out)
          Result.append ("%N")
        end
        if attached assigned_labels as l_assigned_labels then
          across l_assigned_labels as ic loop
            Result.append ("%N assigned_labels:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached mode as l_mode then
          Result.append ("%Nmode:")
          Result.append (l_mode.out)
          Result.append ("%N")
        end
        if attached node_description as l_node_description then
          Result.append ("%Nnode_description:")
          Result.append (l_node_description.out)
          Result.append ("%N")
        end
        if attached node_name as l_node_name then
          Result.append ("%Nnode_name:")
          Result.append (l_node_name.out)
          Result.append ("%N")
        end
        if attached num_executors as l_num_executors then
          Result.append ("%Nnum_executors:")
          Result.append (l_num_executors.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached jobs as l_jobs then
          across l_jobs as ic loop
            Result.append ("%N jobs:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached primary_view as l_primary_view then
          Result.append ("%Nprimary_view:")
          Result.append (l_primary_view.out)
          Result.append ("%N")
        end
        if attached quieting_down as l_quieting_down then
          Result.append ("%Nquieting_down:")
          Result.append (l_quieting_down.out)
          Result.append ("%N")
        end
        if attached slave_agent_port as l_slave_agent_port then
          Result.append ("%Nslave_agent_port:")
          Result.append (l_slave_agent_port.out)
          Result.append ("%N")
        end
        if attached unlabeled_load as l_unlabeled_load then
          Result.append ("%Nunlabeled_load:")
          Result.append (l_unlabeled_load.out)
          Result.append ("%N")
        end
        if attached use_crumbs as l_use_crumbs then
          Result.append ("%Nuse_crumbs:")
          Result.append (l_use_crumbs.out)
          Result.append ("%N")
        end
        if attached use_security as l_use_security then
          Result.append ("%Nuse_security:")
          Result.append (l_use_security.out)
          Result.append ("%N")
        end
        if attached views as l_views then
          across l_views as ic loop
            Result.append ("%N views:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

