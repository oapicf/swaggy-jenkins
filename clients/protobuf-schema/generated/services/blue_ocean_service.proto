/*
  Swaggy Jenkins

  Jenkins API clients generated from Swagger / Open API specification

  The version of the OpenAPI document: 3.0.2-pre.0

  Contact: blah+oapicf@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.blueoceanservice;

import "google/protobuf/empty.proto";
import public "models/branch_impl.proto";
import public "models/favorite_impl.proto";
import public "models/github_organization.proto";
import public "models/github_scm.proto";
import public "models/multibranch_pipeline.proto";
import public "models/organisation.proto";
import public "models/pipeline.proto";
import public "models/pipeline_activity.proto";
import public "models/pipeline_folder_impl.proto";
import public "models/pipeline_impl.proto";
import public "models/pipeline_run.proto";
import public "models/pipeline_run_node.proto";
import public "models/pipeline_step_impl.proto";
import public "models/queue_item_impl.proto";
import public "models/user.proto";

service BlueOceanService {
  rpc DeletePipelineQueueItem (DeletePipelineQueueItemRequest) returns (google.protobuf.Empty);

  rpc GetAuthenticatedUser (GetAuthenticatedUserRequest) returns (User);

  rpc GetClasses (GetClassesRequest) returns (GetClassesResponse);

  rpc GetJsonWebKey (GetJsonWebKeyRequest) returns (GetJsonWebKeyResponse);

  rpc GetJsonWebToken (GetJsonWebTokenRequest) returns (GetJsonWebTokenResponse);

  rpc GetOrganisation (GetOrganisationRequest) returns (Organisation);

  rpc GetOrganisations (google.protobuf.Empty) returns (GetOrganisationsResponse);

  rpc GetPipeline (GetPipelineRequest) returns (Pipeline);

  rpc GetPipelineActivities (GetPipelineActivitiesRequest) returns (GetPipelineActivitiesResponse);

  rpc GetPipelineBranch (GetPipelineBranchRequest) returns (BranchImpl);

  rpc GetPipelineBranchRun (GetPipelineBranchRunRequest) returns (PipelineRun);

  rpc GetPipelineBranches (GetPipelineBranchesRequest) returns (MultibranchPipeline);

  rpc GetPipelineFolder (GetPipelineFolderRequest) returns (PipelineFolderImpl);

  rpc GetPipelineFolderPipeline (GetPipelineFolderPipelineRequest) returns (PipelineImpl);

  rpc GetPipelineQueue (GetPipelineQueueRequest) returns (GetPipelineQueueResponse);

  rpc GetPipelineRun (GetPipelineRunRequest) returns (PipelineRun);

  rpc GetPipelineRunLog (GetPipelineRunLogRequest) returns (GetPipelineRunLogResponse);

  rpc GetPipelineRunNode (GetPipelineRunNodeRequest) returns (PipelineRunNode);

  rpc GetPipelineRunNodeStep (GetPipelineRunNodeStepRequest) returns (PipelineStepImpl);

  rpc GetPipelineRunNodeStepLog (GetPipelineRunNodeStepLogRequest) returns (GetPipelineRunNodeStepLogResponse);

  rpc GetPipelineRunNodeSteps (GetPipelineRunNodeStepsRequest) returns (GetPipelineRunNodeStepsResponse);

  rpc GetPipelineRunNodes (GetPipelineRunNodesRequest) returns (GetPipelineRunNodesResponse);

  rpc GetPipelineRuns (GetPipelineRunsRequest) returns (GetPipelineRunsResponse);

  rpc GetPipelines (GetPipelinesRequest) returns (GetPipelinesResponse);

  rpc GetSCM (GetSCMRequest) returns (GithubScm);

  rpc GetSCMOrganisationRepositories (GetSCMOrganisationRepositoriesRequest) returns (GetSCMOrganisationRepositoriesResponse);

  rpc GetSCMOrganisationRepository (GetSCMOrganisationRepositoryRequest) returns (GetSCMOrganisationRepositoryResponse);

  rpc GetSCMOrganisations (GetSCMOrganisationsRequest) returns (GetSCMOrganisationsResponse);

  rpc GetUser (GetUserRequest) returns (User);

  rpc GetUserFavorites (GetUserFavoritesRequest) returns (GetUserFavoritesResponse);

  rpc GetUsers (GetUsersRequest) returns (User);

  rpc PostPipelineRun (PostPipelineRunRequest) returns (QueueItemImpl);

  rpc PostPipelineRuns (PostPipelineRunsRequest) returns (QueueItemImpl);

  rpc PutPipelineFavorite (PutPipelineFavoriteRequest) returns (FavoriteImpl);

  rpc PutPipelineRun (PutPipelineRunRequest) returns (PipelineRun);

  rpc Search (SearchRequest) returns (SearchResponse);

  rpc SearchClasses (SearchClassesRequest) returns (SearchClassesResponse);

}

message DeletePipelineQueueItemRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the queue item
  string queue = 3;

}

message GetAuthenticatedUserRequest {
  // Name of the organization
  string organization = 1;

}

message GetClassesRequest {
  // Name of the class
  string class = 1;

}

message GetClassesResponse {
  string data = 1;
}

message GetJsonWebKeyRequest {
  // Key ID received as part of JWT header field kid
  int32 key = 1;

}

message GetJsonWebKeyResponse {
  string data = 1;
}

message GetJsonWebTokenRequest {
  // Token expiry time in minutes, default: 30 minutes
  int32 expiryTimeInMins = 1;
  // Maximum token expiry time in minutes, default: 480 minutes
  int32 maxExpiryTimeInMins = 2;

}

message GetJsonWebTokenResponse {
  string data = 1;
}

message GetOrganisationRequest {
  // Name of the organization
  string organization = 1;

}

message GetOrganisationsResponse {
  repeated Organisation data = 1;
}

message GetPipelineRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message GetPipelineActivitiesRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message GetPipelineActivitiesResponse {
  repeated PipelineActivity data = 1;
}

message GetPipelineBranchRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the branch
  string branch = 3;

}

message GetPipelineBranchRunRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the branch
  string branch = 3;
  // Name of the run
  string run = 4;

}

message GetPipelineBranchesRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message GetPipelineFolderRequest {
  // Name of the organization
  string organization = 1;
  // Name of the folder
  string folder = 2;

}

message GetPipelineFolderPipelineRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the folder
  string folder = 3;

}

message GetPipelineQueueRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message GetPipelineQueueResponse {
  repeated QueueItemImpl data = 1;
}

message GetPipelineRunRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;

}

message GetPipelineRunLogRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Start position of the log
  int32 start = 4;
  // Set to true in order to download the file, otherwise it's passed as a response body
  bool download = 5;

}

message GetPipelineRunLogResponse {
  string data = 1;
}

message GetPipelineRunNodeRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Name of the node
  string node = 4;

}

message GetPipelineRunNodeStepRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Name of the node
  string node = 4;
  // Name of the step
  string step = 5;

}

message GetPipelineRunNodeStepLogRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Name of the node
  string node = 4;
  // Name of the step
  string step = 5;

}

message GetPipelineRunNodeStepLogResponse {
  string data = 1;
}

message GetPipelineRunNodeStepsRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Name of the node
  string node = 4;

}

message GetPipelineRunNodeStepsResponse {
  repeated PipelineStepImpl data = 1;
}

message GetPipelineRunNodesRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;

}

message GetPipelineRunNodesResponse {
  repeated PipelineRunNode data = 1;
}

message GetPipelineRunsRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message GetPipelineRunsResponse {
  repeated PipelineRun data = 1;
}

message GetPipelinesRequest {
  // Name of the organization
  string organization = 1;

}

message GetPipelinesResponse {
  repeated Pipeline data = 1;
}

message GetSCMRequest {
  // Name of the organization
  string organization = 1;
  // Name of SCM
  string scm = 2;

}

message GetSCMOrganisationRepositoriesRequest {
  // Name of the organization
  string organization = 1;
  // Name of SCM
  string scm = 2;
  // Name of the SCM organization
  string scmOrganisation = 3;
  // Credential ID
  string credentialId = 4;
  // Number of items in a page
  int32 pageSize = 5;
  // Page number
  int32 pageNumber = 6;

}

message GetSCMOrganisationRepositoriesResponse {
  repeated GithubOrganization data = 1;
}

message GetSCMOrganisationRepositoryRequest {
  // Name of the organization
  string organization = 1;
  // Name of SCM
  string scm = 2;
  // Name of the SCM organization
  string scmOrganisation = 3;
  // Name of the SCM repository
  string repository = 4;
  // Credential ID
  string credentialId = 5;

}

message GetSCMOrganisationRepositoryResponse {
  repeated GithubOrganization data = 1;
}

message GetSCMOrganisationsRequest {
  // Name of the organization
  string organization = 1;
  // Name of SCM
  string scm = 2;
  // Credential ID
  string credentialId = 3;

}

message GetSCMOrganisationsResponse {
  repeated GithubOrganization data = 1;
}

message GetUserRequest {
  // Name of the organization
  string organization = 1;
  // Name of the user
  string user = 2;

}

message GetUserFavoritesRequest {
  // Name of the user
  string user = 1;

}

message GetUserFavoritesResponse {
  repeated FavoriteImpl data = 1;
}

message GetUsersRequest {
  // Name of the organization
  string organization = 1;

}

message PostPipelineRunRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;

}

message PostPipelineRunsRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;

}

message PutPipelineFavoriteRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Set JSON string body to {\"favorite\": true} to favorite, set value to false to unfavorite
  bool body = 3;

}

message PutPipelineRunRequest {
  // Name of the organization
  string organization = 1;
  // Name of the pipeline
  string pipeline = 2;
  // Name of the run
  string run = 3;
  // Set to true to make blocking stop, default: false
  string blocking = 4;
  // Timeout in seconds, default: 10 seconds
  int32 timeOutInSecs = 5;

}

message SearchRequest {
  // Query string
  string q = 1;

}

message SearchResponse {
  string data = 1;
}

message SearchClassesRequest {
  // Query string containing an array of class names
  string q = 1;

}

message SearchClassesResponse {
  string data = 1;
}

