<?php

/**
 * Swaggy Jenkins
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Jenkins API clients generated from Swagger / Open API specification
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\PipelineBranchesitemlatestRun;

/**
 * PipelineBranchesitemlatestRunTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\PipelineBranchesitemlatestRun
 */
class PipelineBranchesitemlatestRunTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PipelineBranchesitemlatestRun"
     */
    public function testPipelineBranchesitemlatestRun()
    {
        $testPipelineBranchesitemlatestRun = new PipelineBranchesitemlatestRun();
        $namespacedClassname = PipelineBranchesitemlatestRun::getModelsNamespace() . '\\PipelineBranchesitemlatestRun';
        $this->assertSame('\\' . PipelineBranchesitemlatestRun::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "durationInMillis"
     */
    public function testPropertyDurationInMillis()
    {
        self::markTestIncomplete(
            'Test of "durationInMillis" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "estimatedDurationInMillis"
     */
    public function testPropertyEstimatedDurationInMillis()
    {
        self::markTestIncomplete(
            'Test of "estimatedDurationInMillis" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "enQueueTime"
     */
    public function testPropertyEnQueueTime()
    {
        self::markTestIncomplete(
            'Test of "enQueueTime" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "endTime"
     */
    public function testPropertyEndTime()
    {
        self::markTestIncomplete(
            'Test of "endTime" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        self::markTestIncomplete(
            'Test of "id" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "organization"
     */
    public function testPropertyOrganization()
    {
        self::markTestIncomplete(
            'Test of "organization" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "pipeline"
     */
    public function testPropertyPipeline()
    {
        self::markTestIncomplete(
            'Test of "pipeline" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "result"
     */
    public function testPropertyResult()
    {
        self::markTestIncomplete(
            'Test of "result" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "runSummary"
     */
    public function testPropertyRunSummary()
    {
        self::markTestIncomplete(
            'Test of "runSummary" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "startTime"
     */
    public function testPropertyStartTime()
    {
        self::markTestIncomplete(
            'Test of "startTime" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
        self::markTestIncomplete(
            'Test of "state" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        self::markTestIncomplete(
            'Test of "type" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "commitId"
     */
    public function testPropertyCommitId()
    {
        self::markTestIncomplete(
            'Test of "commitId" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "class"
     */
    public function testPropertyClass()
    {
        self::markTestIncomplete(
            'Test of "class" property in "PipelineBranchesitemlatestRun" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = PipelineBranchesitemlatestRun::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

