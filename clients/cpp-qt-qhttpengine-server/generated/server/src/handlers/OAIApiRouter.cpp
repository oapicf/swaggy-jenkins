/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>


#include "OAIApiRouter.h"
#include "OAIBaseApiRequest.h"
#include "OAIBlueOceanApiRequest.h"
#include "OAIRemoteAccessApiRequest.h"


namespace OpenAPI {

OAIApiRouter::OAIApiRouter() {
    createApiHandlers();
}

OAIApiRouter::~OAIApiRouter(){

}

void OAIApiRouter::createApiHandlers() { 
    mOAIBaseApiHandler = QSharedPointer<OAIBaseApiHandler>::create();
    mOAIBlueOceanApiHandler = QSharedPointer<OAIBlueOceanApiHandler>::create();
    mOAIRemoteAccessApiHandler = QSharedPointer<OAIRemoteAccessApiHandler>::create();
}


void OAIApiRouter::setOAIBaseApiHandler(QSharedPointer<OAIBaseApiHandler> handler){
    mOAIBaseApiHandler = handler;
}
void OAIApiRouter::setOAIBlueOceanApiHandler(QSharedPointer<OAIBlueOceanApiHandler> handler){
    mOAIBlueOceanApiHandler = handler;
}
void OAIApiRouter::setOAIRemoteAccessApiHandler(QSharedPointer<OAIRemoteAccessApiHandler> handler){
    mOAIRemoteAccessApiHandler = handler;
}

void OAIApiRouter::setUpRoutes() {
    
    Routes.insert(QString("%1 %2").arg("GET").arg("/crumbIssuer/api/json").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBaseApiRequest(socket, mOAIBaseApiHandler);
            reqObj->getCrumbRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/jwt-auth/token").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
            reqObj->getJsonWebTokenRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/blue/rest/organizations/").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
            reqObj->getOrganisationsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/blue/rest/search/").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
            reqObj->searchRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/blue/rest/classes/").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
            reqObj->searchClassesRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/computer/api/json").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->getComputerRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/api/json").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->getJenkinsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/queue/api/json").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->getQueueRequest();
    });
    Routes.insert(QString("%1 %2").arg("HEAD").arg("/api/json").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->headJenkinsRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/createItem").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->postCreateItemRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/createView").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
            reqObj->postCreateViewRequest();
    });
}

void OAIApiRouter::processRequest(QHttpEngine::Socket *socket){
    if( handleRequest(socket) ){
        return;
    }
    if( handleRequestAndExtractPathParam(socket) ){
        return;
    }
    socket->setStatusCode(QHttpEngine::Socket::NotFound);
    if(socket->isOpen()){
        socket->writeHeaders();
        socket->close();
    }
}

bool OAIApiRouter::handleRequest(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    if ( Routes.contains(reqPath) ) {
        Routes.value(reqPath).operator()(socket);
        return true;
    }
    return false;
}

bool OAIApiRouter::handleRequestAndExtractPathParam(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString queue = match.captured(QString("queue").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->deletePipelineQueueItemRequest(organization, pipeline, queue);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/user/").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getAuthenticatedUserRequest(organization);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/classes/{class}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString class = match.captured(QString("class").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getClassesRequest(class);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/jwt-auth/jwks/{key}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString key = match.captured(QString("key").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getJsonWebKeyRequest(key);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getOrganisationRequest(organization);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/activities").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineActivitiesRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString branch = match.captured(QString("branch").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineBranchRequest(organization, pipeline, branch);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString branch = match.captured(QString("branch").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineBranchRunRequest(organization, pipeline, branch, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/branches").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineBranchesRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{folder}/").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString folder = match.captured(QString("folder").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineFolderRequest(organization, folder);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString folder = match.captured(QString("folder").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineFolderPipelineRequest(organization, pipeline, folder);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/queue").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineQueueRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunRequest(organization, pipeline, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunLogRequest(organization, pipeline, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                QString node = match.captured(QString("node").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunNodeRequest(organization, pipeline, run, node);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                QString node = match.captured(QString("node").toLower());
                QString step = match.captured(QString("step").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunNodeStepRequest(organization, pipeline, run, node, step);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                QString node = match.captured(QString("node").toLower());
                QString step = match.captured(QString("step").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(organization, pipeline, run, node, step);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                QString node = match.captured(QString("node").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunNodeStepsRequest(organization, pipeline, run, node);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunNodesRequest(organization, pipeline, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelineRunsRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/pipelines/").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getPipelinesRequest(organization);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/scm/{scm}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString scm = match.captured(QString("scm").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getSCMRequest(organization, scm);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString scm = match.captured(QString("scm").toLower());
                QString scmOrganisation = match.captured(QString("scmOrganisation").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getSCMOrganisationRepositoriesRequest(organization, scm, scmOrganisation);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString scm = match.captured(QString("scm").toLower());
                QString scmOrganisation = match.captured(QString("scmOrganisation").toLower());
                QString repository = match.captured(QString("repository").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getSCMOrganisationRepositoryRequest(organization, scm, scmOrganisation, repository);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/scm/{scm}/organizations").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString scm = match.captured(QString("scm").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getSCMOrganisationsRequest(organization, scm);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/users/{user}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString user = match.captured(QString("user").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getUserRequest(organization, user);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/users/{user}/favorites").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString user = match.captured(QString("user").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getUserFavoritesRequest(user);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/blue/rest/organizations/{organization}/users/").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->getUsersRequest(organization);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->postPipelineRunRequest(organization, pipeline, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->postPipelineRunsRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PUT").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->putPipelineFavoriteRequest(organization, pipeline);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PUT").arg("/blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString organization = match.captured(QString("organization").toLower());
                QString pipeline = match.captured(QString("pipeline").toLower());
                QString run = match.captured(QString("run").toLower());
                auto reqObj = new OAIBlueOceanApiRequest(socket, mOAIBlueOceanApiHandler);
                reqObj->putPipelineRunRequest(organization, pipeline, run);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/job/{name}/api/json").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getJobRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/job/{name}/config.xml").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getJobConfigRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/job/{name}/lastBuild/api/json").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getJobLastBuildRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/job/{name}/{number}/logText/progressiveText").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                QString number = match.captured(QString("number").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getJobProgressiveTextRequest(name, number);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/queue/item/{number}/api/json").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString number = match.captured(QString("number").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getQueueItemRequest(number);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/view/{name}/api/json").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getViewRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/view/{name}/config.xml").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->getViewConfigRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/build").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobBuildRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/config.xml").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobConfigRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/doDelete").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobDeleteRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/disable").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobDisableRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/enable").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobEnableRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/job/{name}/lastBuild/stop").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postJobLastBuildStopRequest(name);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/view/{name}/config.xml").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString name = match.captured(QString("name").toLower());
                auto reqObj = new OAIRemoteAccessApiRequest(socket, mOAIRemoteAccessApiHandler);
                reqObj->postViewConfigRequest(name);
                return true;
            }
        }
    }
    return false;
}

}
