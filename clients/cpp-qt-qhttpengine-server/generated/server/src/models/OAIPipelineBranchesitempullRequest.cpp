/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPipelineBranchesitempullRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPipelineBranchesitempullRequest::OAIPipelineBranchesitempullRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPipelineBranchesitempullRequest::OAIPipelineBranchesitempullRequest() {
    this->initializeModel();
}

OAIPipelineBranchesitempullRequest::~OAIPipelineBranchesitempullRequest() {}

void OAIPipelineBranchesitempullRequest::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_author_isSet = false;
    m_author_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m__class_isSet = false;
    m__class_isValid = false;
}

void OAIPipelineBranchesitempullRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPipelineBranchesitempullRequest::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(_links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_author_isValid = ::OpenAPI::fromJsonValue(author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;
}

QString OAIPipelineBranchesitempullRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPipelineBranchesitempullRequest::asJsonObject() const {
    QJsonObject obj;
    if (_links.isSet()) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(_links));
    }
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(author));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(url));
    }
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    return obj;
}

OAIPipelineBranchesitempullRequestlinks OAIPipelineBranchesitempullRequest::getLinks() const {
    return _links;
}
void OAIPipelineBranchesitempullRequest::setLinks(const OAIPipelineBranchesitempullRequestlinks &_links) {
    this->_links = _links;
    this->m__links_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is__links_Set() const{
    return m__links_isSet;
}

bool OAIPipelineBranchesitempullRequest::is__links_Valid() const{
    return m__links_isValid;
}

QString OAIPipelineBranchesitempullRequest::getAuthor() const {
    return author;
}
void OAIPipelineBranchesitempullRequest::setAuthor(const QString &author) {
    this->author = author;
    this->m_author_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is_author_Set() const{
    return m_author_isSet;
}

bool OAIPipelineBranchesitempullRequest::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIPipelineBranchesitempullRequest::getId() const {
    return id;
}
void OAIPipelineBranchesitempullRequest::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPipelineBranchesitempullRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPipelineBranchesitempullRequest::getTitle() const {
    return title;
}
void OAIPipelineBranchesitempullRequest::setTitle(const QString &title) {
    this->title = title;
    this->m_title_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPipelineBranchesitempullRequest::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIPipelineBranchesitempullRequest::getUrl() const {
    return url;
}
void OAIPipelineBranchesitempullRequest::setUrl(const QString &url) {
    this->url = url;
    this->m_url_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPipelineBranchesitempullRequest::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIPipelineBranchesitempullRequest::getClass() const {
    return _class;
}
void OAIPipelineBranchesitempullRequest::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAIPipelineBranchesitempullRequest::is__class_Set() const{
    return m__class_isSet;
}

bool OAIPipelineBranchesitempullRequest::is__class_Valid() const{
    return m__class_isValid;
}

bool OAIPipelineBranchesitempullRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (_links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPipelineBranchesitempullRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
