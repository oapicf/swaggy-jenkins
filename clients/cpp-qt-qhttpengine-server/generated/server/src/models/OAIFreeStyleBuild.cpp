/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeStyleBuild.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeStyleBuild::OAIFreeStyleBuild(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeStyleBuild::OAIFreeStyleBuild() {
    this->initializeModel();
}

OAIFreeStyleBuild::~OAIFreeStyleBuild() {}

void OAIFreeStyleBuild::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_building_isSet = false;
    m_building_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_estimated_duration_isSet = false;
    m_estimated_duration_isValid = false;

    m_executor_isSet = false;
    m_executor_isValid = false;

    m_full_display_name_isSet = false;
    m_full_display_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_keep_log_isSet = false;
    m_keep_log_isValid = false;

    m_queue_id_isSet = false;
    m_queue_id_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_built_on_isSet = false;
    m_built_on_isValid = false;

    m_change_set_isSet = false;
    m_change_set_isValid = false;
}

void OAIFreeStyleBuild::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeStyleBuild::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_actions_isValid = ::OpenAPI::fromJsonValue(actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_building_isValid = ::OpenAPI::fromJsonValue(building, json[QString("building")]);
    m_building_isSet = !json[QString("building")].isNull() && m_building_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_estimated_duration_isValid = ::OpenAPI::fromJsonValue(estimated_duration, json[QString("estimatedDuration")]);
    m_estimated_duration_isSet = !json[QString("estimatedDuration")].isNull() && m_estimated_duration_isValid;

    m_executor_isValid = ::OpenAPI::fromJsonValue(executor, json[QString("executor")]);
    m_executor_isSet = !json[QString("executor")].isNull() && m_executor_isValid;

    m_full_display_name_isValid = ::OpenAPI::fromJsonValue(full_display_name, json[QString("fullDisplayName")]);
    m_full_display_name_isSet = !json[QString("fullDisplayName")].isNull() && m_full_display_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_keep_log_isValid = ::OpenAPI::fromJsonValue(keep_log, json[QString("keepLog")]);
    m_keep_log_isSet = !json[QString("keepLog")].isNull() && m_keep_log_isValid;

    m_queue_id_isValid = ::OpenAPI::fromJsonValue(queue_id, json[QString("queueId")]);
    m_queue_id_isSet = !json[QString("queueId")].isNull() && m_queue_id_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_built_on_isValid = ::OpenAPI::fromJsonValue(built_on, json[QString("builtOn")]);
    m_built_on_isSet = !json[QString("builtOn")].isNull() && m_built_on_isValid;

    m_change_set_isValid = ::OpenAPI::fromJsonValue(change_set, json[QString("changeSet")]);
    m_change_set_isSet = !json[QString("changeSet")].isNull() && m_change_set_isValid;
}

QString OAIFreeStyleBuild::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeStyleBuild::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(number));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(url));
    }
    if (actions.size() > 0) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(actions));
    }
    if (m_building_isSet) {
        obj.insert(QString("building"), ::OpenAPI::toJsonValue(building));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(display_name));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(duration));
    }
    if (m_estimated_duration_isSet) {
        obj.insert(QString("estimatedDuration"), ::OpenAPI::toJsonValue(estimated_duration));
    }
    if (m_executor_isSet) {
        obj.insert(QString("executor"), ::OpenAPI::toJsonValue(executor));
    }
    if (m_full_display_name_isSet) {
        obj.insert(QString("fullDisplayName"), ::OpenAPI::toJsonValue(full_display_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_keep_log_isSet) {
        obj.insert(QString("keepLog"), ::OpenAPI::toJsonValue(keep_log));
    }
    if (m_queue_id_isSet) {
        obj.insert(QString("queueId"), ::OpenAPI::toJsonValue(queue_id));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(result));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(timestamp));
    }
    if (m_built_on_isSet) {
        obj.insert(QString("builtOn"), ::OpenAPI::toJsonValue(built_on));
    }
    if (change_set.isSet()) {
        obj.insert(QString("changeSet"), ::OpenAPI::toJsonValue(change_set));
    }
    return obj;
}

QString OAIFreeStyleBuild::getClass() const {
    return _class;
}
void OAIFreeStyleBuild::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAIFreeStyleBuild::is__class_Set() const{
    return m__class_isSet;
}

bool OAIFreeStyleBuild::is__class_Valid() const{
    return m__class_isValid;
}

qint32 OAIFreeStyleBuild::getNumber() const {
    return number;
}
void OAIFreeStyleBuild::setNumber(const qint32 &number) {
    this->number = number;
    this->m_number_isSet = true;
}

bool OAIFreeStyleBuild::is_number_Set() const{
    return m_number_isSet;
}

bool OAIFreeStyleBuild::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIFreeStyleBuild::getUrl() const {
    return url;
}
void OAIFreeStyleBuild::setUrl(const QString &url) {
    this->url = url;
    this->m_url_isSet = true;
}

bool OAIFreeStyleBuild::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFreeStyleBuild::is_url_Valid() const{
    return m_url_isValid;
}

QList<OAICauseAction> OAIFreeStyleBuild::getActions() const {
    return actions;
}
void OAIFreeStyleBuild::setActions(const QList<OAICauseAction> &actions) {
    this->actions = actions;
    this->m_actions_isSet = true;
}

bool OAIFreeStyleBuild::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIFreeStyleBuild::is_actions_Valid() const{
    return m_actions_isValid;
}

bool OAIFreeStyleBuild::isBuilding() const {
    return building;
}
void OAIFreeStyleBuild::setBuilding(const bool &building) {
    this->building = building;
    this->m_building_isSet = true;
}

bool OAIFreeStyleBuild::is_building_Set() const{
    return m_building_isSet;
}

bool OAIFreeStyleBuild::is_building_Valid() const{
    return m_building_isValid;
}

QString OAIFreeStyleBuild::getDescription() const {
    return description;
}
void OAIFreeStyleBuild::setDescription(const QString &description) {
    this->description = description;
    this->m_description_isSet = true;
}

bool OAIFreeStyleBuild::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFreeStyleBuild::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIFreeStyleBuild::getDisplayName() const {
    return display_name;
}
void OAIFreeStyleBuild::setDisplayName(const QString &display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

bool OAIFreeStyleBuild::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIFreeStyleBuild::is_display_name_Valid() const{
    return m_display_name_isValid;
}

qint32 OAIFreeStyleBuild::getDuration() const {
    return duration;
}
void OAIFreeStyleBuild::setDuration(const qint32 &duration) {
    this->duration = duration;
    this->m_duration_isSet = true;
}

bool OAIFreeStyleBuild::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIFreeStyleBuild::is_duration_Valid() const{
    return m_duration_isValid;
}

qint32 OAIFreeStyleBuild::getEstimatedDuration() const {
    return estimated_duration;
}
void OAIFreeStyleBuild::setEstimatedDuration(const qint32 &estimated_duration) {
    this->estimated_duration = estimated_duration;
    this->m_estimated_duration_isSet = true;
}

bool OAIFreeStyleBuild::is_estimated_duration_Set() const{
    return m_estimated_duration_isSet;
}

bool OAIFreeStyleBuild::is_estimated_duration_Valid() const{
    return m_estimated_duration_isValid;
}

QString OAIFreeStyleBuild::getExecutor() const {
    return executor;
}
void OAIFreeStyleBuild::setExecutor(const QString &executor) {
    this->executor = executor;
    this->m_executor_isSet = true;
}

bool OAIFreeStyleBuild::is_executor_Set() const{
    return m_executor_isSet;
}

bool OAIFreeStyleBuild::is_executor_Valid() const{
    return m_executor_isValid;
}

QString OAIFreeStyleBuild::getFullDisplayName() const {
    return full_display_name;
}
void OAIFreeStyleBuild::setFullDisplayName(const QString &full_display_name) {
    this->full_display_name = full_display_name;
    this->m_full_display_name_isSet = true;
}

bool OAIFreeStyleBuild::is_full_display_name_Set() const{
    return m_full_display_name_isSet;
}

bool OAIFreeStyleBuild::is_full_display_name_Valid() const{
    return m_full_display_name_isValid;
}

QString OAIFreeStyleBuild::getId() const {
    return id;
}
void OAIFreeStyleBuild::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIFreeStyleBuild::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFreeStyleBuild::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIFreeStyleBuild::isKeepLog() const {
    return keep_log;
}
void OAIFreeStyleBuild::setKeepLog(const bool &keep_log) {
    this->keep_log = keep_log;
    this->m_keep_log_isSet = true;
}

bool OAIFreeStyleBuild::is_keep_log_Set() const{
    return m_keep_log_isSet;
}

bool OAIFreeStyleBuild::is_keep_log_Valid() const{
    return m_keep_log_isValid;
}

qint32 OAIFreeStyleBuild::getQueueId() const {
    return queue_id;
}
void OAIFreeStyleBuild::setQueueId(const qint32 &queue_id) {
    this->queue_id = queue_id;
    this->m_queue_id_isSet = true;
}

bool OAIFreeStyleBuild::is_queue_id_Set() const{
    return m_queue_id_isSet;
}

bool OAIFreeStyleBuild::is_queue_id_Valid() const{
    return m_queue_id_isValid;
}

QString OAIFreeStyleBuild::getResult() const {
    return result;
}
void OAIFreeStyleBuild::setResult(const QString &result) {
    this->result = result;
    this->m_result_isSet = true;
}

bool OAIFreeStyleBuild::is_result_Set() const{
    return m_result_isSet;
}

bool OAIFreeStyleBuild::is_result_Valid() const{
    return m_result_isValid;
}

qint32 OAIFreeStyleBuild::getTimestamp() const {
    return timestamp;
}
void OAIFreeStyleBuild::setTimestamp(const qint32 &timestamp) {
    this->timestamp = timestamp;
    this->m_timestamp_isSet = true;
}

bool OAIFreeStyleBuild::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIFreeStyleBuild::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

QString OAIFreeStyleBuild::getBuiltOn() const {
    return built_on;
}
void OAIFreeStyleBuild::setBuiltOn(const QString &built_on) {
    this->built_on = built_on;
    this->m_built_on_isSet = true;
}

bool OAIFreeStyleBuild::is_built_on_Set() const{
    return m_built_on_isSet;
}

bool OAIFreeStyleBuild::is_built_on_Valid() const{
    return m_built_on_isValid;
}

OAIEmptyChangeLogSet OAIFreeStyleBuild::getChangeSet() const {
    return change_set;
}
void OAIFreeStyleBuild::setChangeSet(const OAIEmptyChangeLogSet &change_set) {
    this->change_set = change_set;
    this->m_change_set_isSet = true;
}

bool OAIFreeStyleBuild::is_change_set_Set() const{
    return m_change_set_isSet;
}

bool OAIFreeStyleBuild::is_change_set_Valid() const{
    return m_change_set_isValid;
}

bool OAIFreeStyleBuild::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_building_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_executor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keep_log_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_built_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (change_set.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeStyleBuild::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
