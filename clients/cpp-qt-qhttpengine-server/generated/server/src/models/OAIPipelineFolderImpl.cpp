/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPipelineFolderImpl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPipelineFolderImpl::OAIPipelineFolderImpl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPipelineFolderImpl::OAIPipelineFolderImpl() {
    this->initializeModel();
}

OAIPipelineFolderImpl::~OAIPipelineFolderImpl() {}

void OAIPipelineFolderImpl::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;

    m_number_of_folders_isSet = false;
    m_number_of_folders_isValid = false;

    m_number_of_pipelines_isSet = false;
    m_number_of_pipelines_isValid = false;
}

void OAIPipelineFolderImpl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPipelineFolderImpl::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(full_name, json[QString("fullName")]);
    m_full_name_isSet = !json[QString("fullName")].isNull() && m_full_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;

    m_number_of_folders_isValid = ::OpenAPI::fromJsonValue(number_of_folders, json[QString("numberOfFolders")]);
    m_number_of_folders_isSet = !json[QString("numberOfFolders")].isNull() && m_number_of_folders_isValid;

    m_number_of_pipelines_isValid = ::OpenAPI::fromJsonValue(number_of_pipelines, json[QString("numberOfPipelines")]);
    m_number_of_pipelines_isSet = !json[QString("numberOfPipelines")].isNull() && m_number_of_pipelines_isValid;
}

QString OAIPipelineFolderImpl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPipelineFolderImpl::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(display_name));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(full_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_organization_isSet) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(organization));
    }
    if (m_number_of_folders_isSet) {
        obj.insert(QString("numberOfFolders"), ::OpenAPI::toJsonValue(number_of_folders));
    }
    if (m_number_of_pipelines_isSet) {
        obj.insert(QString("numberOfPipelines"), ::OpenAPI::toJsonValue(number_of_pipelines));
    }
    return obj;
}

QString OAIPipelineFolderImpl::getClass() const {
    return _class;
}
void OAIPipelineFolderImpl::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAIPipelineFolderImpl::is__class_Set() const{
    return m__class_isSet;
}

bool OAIPipelineFolderImpl::is__class_Valid() const{
    return m__class_isValid;
}

QString OAIPipelineFolderImpl::getDisplayName() const {
    return display_name;
}
void OAIPipelineFolderImpl::setDisplayName(const QString &display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

bool OAIPipelineFolderImpl::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIPipelineFolderImpl::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIPipelineFolderImpl::getFullName() const {
    return full_name;
}
void OAIPipelineFolderImpl::setFullName(const QString &full_name) {
    this->full_name = full_name;
    this->m_full_name_isSet = true;
}

bool OAIPipelineFolderImpl::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIPipelineFolderImpl::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIPipelineFolderImpl::getName() const {
    return name;
}
void OAIPipelineFolderImpl::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIPipelineFolderImpl::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPipelineFolderImpl::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPipelineFolderImpl::getOrganization() const {
    return organization;
}
void OAIPipelineFolderImpl::setOrganization(const QString &organization) {
    this->organization = organization;
    this->m_organization_isSet = true;
}

bool OAIPipelineFolderImpl::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIPipelineFolderImpl::is_organization_Valid() const{
    return m_organization_isValid;
}

qint32 OAIPipelineFolderImpl::getNumberOfFolders() const {
    return number_of_folders;
}
void OAIPipelineFolderImpl::setNumberOfFolders(const qint32 &number_of_folders) {
    this->number_of_folders = number_of_folders;
    this->m_number_of_folders_isSet = true;
}

bool OAIPipelineFolderImpl::is_number_of_folders_Set() const{
    return m_number_of_folders_isSet;
}

bool OAIPipelineFolderImpl::is_number_of_folders_Valid() const{
    return m_number_of_folders_isValid;
}

qint32 OAIPipelineFolderImpl::getNumberOfPipelines() const {
    return number_of_pipelines;
}
void OAIPipelineFolderImpl::setNumberOfPipelines(const qint32 &number_of_pipelines) {
    this->number_of_pipelines = number_of_pipelines;
    this->m_number_of_pipelines_isSet = true;
}

bool OAIPipelineFolderImpl::is_number_of_pipelines_Set() const{
    return m_number_of_pipelines_isSet;
}

bool OAIPipelineFolderImpl::is_number_of_pipelines_Valid() const{
    return m_number_of_pipelines_isValid;
}

bool OAIPipelineFolderImpl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_folders_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_pipelines_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPipelineFolderImpl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
