/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGithubRepositorypermissions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGithubRepositorypermissions::OAIGithubRepositorypermissions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGithubRepositorypermissions::OAIGithubRepositorypermissions() {
    this->initializeModel();
}

OAIGithubRepositorypermissions::~OAIGithubRepositorypermissions() {}

void OAIGithubRepositorypermissions::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_push_isSet = false;
    m_push_isValid = false;

    m_pull_isSet = false;
    m_pull_isValid = false;

    m__class_isSet = false;
    m__class_isValid = false;
}

void OAIGithubRepositorypermissions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGithubRepositorypermissions::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(admin, json[QString("admin")]);
    m_admin_isSet = !json[QString("admin")].isNull() && m_admin_isValid;

    m_push_isValid = ::OpenAPI::fromJsonValue(push, json[QString("push")]);
    m_push_isSet = !json[QString("push")].isNull() && m_push_isValid;

    m_pull_isValid = ::OpenAPI::fromJsonValue(pull, json[QString("pull")]);
    m_pull_isSet = !json[QString("pull")].isNull() && m_pull_isValid;

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;
}

QString OAIGithubRepositorypermissions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGithubRepositorypermissions::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_isSet) {
        obj.insert(QString("admin"), ::OpenAPI::toJsonValue(admin));
    }
    if (m_push_isSet) {
        obj.insert(QString("push"), ::OpenAPI::toJsonValue(push));
    }
    if (m_pull_isSet) {
        obj.insert(QString("pull"), ::OpenAPI::toJsonValue(pull));
    }
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    return obj;
}

bool OAIGithubRepositorypermissions::isAdmin() const {
    return admin;
}
void OAIGithubRepositorypermissions::setAdmin(const bool &admin) {
    this->admin = admin;
    this->m_admin_isSet = true;
}

bool OAIGithubRepositorypermissions::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIGithubRepositorypermissions::is_admin_Valid() const{
    return m_admin_isValid;
}

bool OAIGithubRepositorypermissions::isPush() const {
    return push;
}
void OAIGithubRepositorypermissions::setPush(const bool &push) {
    this->push = push;
    this->m_push_isSet = true;
}

bool OAIGithubRepositorypermissions::is_push_Set() const{
    return m_push_isSet;
}

bool OAIGithubRepositorypermissions::is_push_Valid() const{
    return m_push_isValid;
}

bool OAIGithubRepositorypermissions::isPull() const {
    return pull;
}
void OAIGithubRepositorypermissions::setPull(const bool &pull) {
    this->pull = pull;
    this->m_pull_isSet = true;
}

bool OAIGithubRepositorypermissions::is_pull_Set() const{
    return m_pull_isSet;
}

bool OAIGithubRepositorypermissions::is_pull_Valid() const{
    return m_pull_isValid;
}

QString OAIGithubRepositorypermissions::getClass() const {
    return _class;
}
void OAIGithubRepositorypermissions::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAIGithubRepositorypermissions::is__class_Set() const{
    return m__class_isSet;
}

bool OAIGithubRepositorypermissions::is__class_Valid() const{
    return m__class_isValid;
}

bool OAIGithubRepositorypermissions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_push_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pull_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGithubRepositorypermissions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
