/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultCrumbIssuer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultCrumbIssuer::OAIDefaultCrumbIssuer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultCrumbIssuer::OAIDefaultCrumbIssuer() {
    this->initializeModel();
}

OAIDefaultCrumbIssuer::~OAIDefaultCrumbIssuer() {}

void OAIDefaultCrumbIssuer::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m_crumb_isSet = false;
    m_crumb_isValid = false;

    m_crumb_request_field_isSet = false;
    m_crumb_request_field_isValid = false;
}

void OAIDefaultCrumbIssuer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultCrumbIssuer::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m_crumb_isValid = ::OpenAPI::fromJsonValue(crumb, json[QString("crumb")]);
    m_crumb_isSet = !json[QString("crumb")].isNull() && m_crumb_isValid;

    m_crumb_request_field_isValid = ::OpenAPI::fromJsonValue(crumb_request_field, json[QString("crumbRequestField")]);
    m_crumb_request_field_isSet = !json[QString("crumbRequestField")].isNull() && m_crumb_request_field_isValid;
}

QString OAIDefaultCrumbIssuer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultCrumbIssuer::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    if (m_crumb_isSet) {
        obj.insert(QString("crumb"), ::OpenAPI::toJsonValue(crumb));
    }
    if (m_crumb_request_field_isSet) {
        obj.insert(QString("crumbRequestField"), ::OpenAPI::toJsonValue(crumb_request_field));
    }
    return obj;
}

QString OAIDefaultCrumbIssuer::getClass() const {
    return _class;
}
void OAIDefaultCrumbIssuer::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAIDefaultCrumbIssuer::is__class_Set() const{
    return m__class_isSet;
}

bool OAIDefaultCrumbIssuer::is__class_Valid() const{
    return m__class_isValid;
}

QString OAIDefaultCrumbIssuer::getCrumb() const {
    return crumb;
}
void OAIDefaultCrumbIssuer::setCrumb(const QString &crumb) {
    this->crumb = crumb;
    this->m_crumb_isSet = true;
}

bool OAIDefaultCrumbIssuer::is_crumb_Set() const{
    return m_crumb_isSet;
}

bool OAIDefaultCrumbIssuer::is_crumb_Valid() const{
    return m_crumb_isValid;
}

QString OAIDefaultCrumbIssuer::getCrumbRequestField() const {
    return crumb_request_field;
}
void OAIDefaultCrumbIssuer::setCrumbRequestField(const QString &crumb_request_field) {
    this->crumb_request_field = crumb_request_field;
    this->m_crumb_request_field_isSet = true;
}

bool OAIDefaultCrumbIssuer::is_crumb_request_field_Set() const{
    return m_crumb_request_field_isSet;
}

bool OAIDefaultCrumbIssuer::is_crumb_request_field_Valid() const{
    return m_crumb_request_field_isValid;
}

bool OAIDefaultCrumbIssuer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crumb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_crumb_request_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultCrumbIssuer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
