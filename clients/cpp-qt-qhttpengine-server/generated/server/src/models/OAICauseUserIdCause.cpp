/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICauseUserIdCause.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICauseUserIdCause::OAICauseUserIdCause(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICauseUserIdCause::OAICauseUserIdCause() {
    this->initializeModel();
}

OAICauseUserIdCause::~OAICauseUserIdCause() {}

void OAICauseUserIdCause::initializeModel() {

    m__class_isSet = false;
    m__class_isValid = false;

    m_short_description_isSet = false;
    m_short_description_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_user_name_isSet = false;
    m_user_name_isValid = false;
}

void OAICauseUserIdCause::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICauseUserIdCause::fromJsonObject(QJsonObject json) {

    m__class_isValid = ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    m__class_isSet = !json[QString("_class")].isNull() && m__class_isValid;

    m_short_description_isValid = ::OpenAPI::fromJsonValue(short_description, json[QString("shortDescription")]);
    m_short_description_isSet = !json[QString("shortDescription")].isNull() && m_short_description_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_user_name_isValid = ::OpenAPI::fromJsonValue(user_name, json[QString("userName")]);
    m_user_name_isSet = !json[QString("userName")].isNull() && m_user_name_isValid;
}

QString OAICauseUserIdCause::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICauseUserIdCause::asJsonObject() const {
    QJsonObject obj;
    if (m__class_isSet) {
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
    if (m_short_description_isSet) {
        obj.insert(QString("shortDescription"), ::OpenAPI::toJsonValue(short_description));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(user_id));
    }
    if (m_user_name_isSet) {
        obj.insert(QString("userName"), ::OpenAPI::toJsonValue(user_name));
    }
    return obj;
}

QString OAICauseUserIdCause::getClass() const {
    return _class;
}
void OAICauseUserIdCause::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

bool OAICauseUserIdCause::is__class_Set() const{
    return m__class_isSet;
}

bool OAICauseUserIdCause::is__class_Valid() const{
    return m__class_isValid;
}

QString OAICauseUserIdCause::getShortDescription() const {
    return short_description;
}
void OAICauseUserIdCause::setShortDescription(const QString &short_description) {
    this->short_description = short_description;
    this->m_short_description_isSet = true;
}

bool OAICauseUserIdCause::is_short_description_Set() const{
    return m_short_description_isSet;
}

bool OAICauseUserIdCause::is_short_description_Valid() const{
    return m_short_description_isValid;
}

QString OAICauseUserIdCause::getUserId() const {
    return user_id;
}
void OAICauseUserIdCause::setUserId(const QString &user_id) {
    this->user_id = user_id;
    this->m_user_id_isSet = true;
}

bool OAICauseUserIdCause::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAICauseUserIdCause::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAICauseUserIdCause::getUserName() const {
    return user_name;
}
void OAICauseUserIdCause::setUserName(const QString &user_name) {
    this->user_name = user_name;
    this->m_user_name_isSet = true;
}

bool OAICauseUserIdCause::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAICauseUserIdCause::is_user_name_Valid() const{
    return m_user_name_isValid;
}

bool OAICauseUserIdCause::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICauseUserIdCause::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
