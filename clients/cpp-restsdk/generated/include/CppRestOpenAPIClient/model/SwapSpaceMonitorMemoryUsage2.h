/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 3.0.2-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.12.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SwapSpaceMonitorMemoryUsage2.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SwapSpaceMonitorMemoryUsage2_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SwapSpaceMonitorMemoryUsage2_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  SwapSpaceMonitorMemoryUsage2
    : public ModelBase
{
public:
    SwapSpaceMonitorMemoryUsage2();
    virtual ~SwapSpaceMonitorMemoryUsage2();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// SwapSpaceMonitorMemoryUsage2 members


    utility::string_t getClass() const;
    bool r_classIsSet() const;
    void unset_class();
    void setClass(const utility::string_t& value);

    int32_t getAvailablePhysicalMemory() const;
    bool availablePhysicalMemoryIsSet() const;
    void unsetAvailablePhysicalMemory();
    void setAvailablePhysicalMemory(int32_t value);

    int32_t getAvailableSwapSpace() const;
    bool availableSwapSpaceIsSet() const;
    void unsetAvailableSwapSpace();
    void setAvailableSwapSpace(int32_t value);

    int32_t getTotalPhysicalMemory() const;
    bool totalPhysicalMemoryIsSet() const;
    void unsetTotalPhysicalMemory();
    void setTotalPhysicalMemory(int32_t value);

    int32_t getTotalSwapSpace() const;
    bool totalSwapSpaceIsSet() const;
    void unsetTotalSwapSpace();
    void setTotalSwapSpace(int32_t value);


protected:
    utility::string_t m__class;
    bool m__classIsSet;

    int32_t m_AvailablePhysicalMemory;
    bool m_AvailablePhysicalMemoryIsSet;

    int32_t m_AvailableSwapSpace;
    bool m_AvailableSwapSpaceIsSet;

    int32_t m_TotalPhysicalMemory;
    bool m_TotalPhysicalMemoryIsSet;

    int32_t m_TotalSwapSpace;
    bool m_TotalSwapSpaceIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SwapSpaceMonitorMemoryUsage2_H_ */
