/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 2.0.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PipelineRunNode.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_PipelineRunNode_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_PipelineRunNode_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/PipelineRunNodeedges.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class PipelineRunNodeedges;

/// <summary>
/// 
/// </summary>
class  PipelineRunNode
    : public ModelBase
{
public:
    PipelineRunNode();
    virtual ~PipelineRunNode();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PipelineRunNode members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClass() const;
    bool r_classIsSet() const;
    void unset_class();

    void setClass(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayName() const;
    bool displayNameIsSet() const;
    void unsetDisplayName();

    void setDisplayName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDurationInMillis() const;
    bool durationInMillisIsSet() const;
    void unsetDurationInMillis();

    void setDurationInMillis(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<PipelineRunNodeedges>>& getEdges();
    bool edgesIsSet() const;
    void unsetEdges();

    void setEdges(const std::vector<std::shared_ptr<PipelineRunNodeedges>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResult() const;
    bool resultIsSet() const;
    void unsetResult();

    void setResult(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStartTime() const;
    bool startTimeIsSet() const;
    void unsetStartTime();

    void setStartTime(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getState() const;
    bool stateIsSet() const;
    void unsetState();

    void setState(const utility::string_t& value);


protected:
    utility::string_t m__class;
    bool m__classIsSet;
    utility::string_t m_DisplayName;
    bool m_DisplayNameIsSet;
    int32_t m_DurationInMillis;
    bool m_DurationInMillisIsSet;
    std::vector<std::shared_ptr<PipelineRunNodeedges>> m_Edges;
    bool m_EdgesIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Result;
    bool m_ResultIsSet;
    utility::string_t m_StartTime;
    bool m_StartTimeIsSet;
    utility::string_t m_State;
    bool m_StateIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_PipelineRunNode_H_ */
